// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bessctl.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bessctl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bess {

namespace {

const ::google::protobuf::Descriptor* Empty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Empty_reflection_ = NULL;
const ::google::protobuf::Descriptor* DisableTcpdumpRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DisableTcpdumpRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnableTcpdumpRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnableTcpdumpRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttachTaskRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttachTaskRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DisconnectModulesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DisconnectModulesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConnectModulesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConnectModulesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetModuleInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetModuleInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetModuleInfoResponse_IGate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetModuleInfoResponse_IGate_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetModuleInfoResponse_IGate_OGate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetModuleInfoResponse_IGate_OGate_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetModuleInfoResponse_OGate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetModuleInfoResponse_OGate_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetModuleInfoResponse_Attribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetModuleInfoResponse_Attribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetModuleInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetModuleInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DestroyModuleRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestroyModuleRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateModuleResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateModuleResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateModuleRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateModuleRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListModulesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListModulesResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListModulesResponse_Module_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListModulesResponse_Module_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetPortStatsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetPortStatsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetPortStatsResponse_Stat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetPortStatsResponse_Stat_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetPortStatsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetPortStatsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DestroyPortRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestroyPortRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreatePortRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreatePortRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* Port_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Port_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListPortsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListPortsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* Error_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Error_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListWorkersResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListWorkersResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListWorkersResponse_WorkerStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListWorkersResponse_WorkerStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddWorkerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddWorkerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListTcsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTcsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrafficClass_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrafficClass_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrafficClass_Resource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrafficClass_Resource_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetTcStatsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetTcStatsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListTcsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTcsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListTcsResponse_TrafficClassStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTcsResponse_TrafficClassStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddTcRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddTcRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetTcStatsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetTcStatsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListDriversResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListDriversResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDriverInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetDriverInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDriverInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetDriverInfoResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_bessctl_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_bessctl_2eproto() {
  protobuf_AddDesc_bessctl_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "bessctl.proto");
  GOOGLE_CHECK(file != NULL);
  Empty_descriptor_ = file->message_type(0);
  static const int Empty_offsets_[1] = {
  };
  Empty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Empty_descriptor_,
      Empty::default_instance_,
      Empty_offsets_,
      -1,
      -1,
      -1,
      sizeof(Empty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Empty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Empty, _is_default_instance_));
  DisableTcpdumpRequest_descriptor_ = file->message_type(1);
  static const int DisableTcpdumpRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisableTcpdumpRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisableTcpdumpRequest, ogate_),
  };
  DisableTcpdumpRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DisableTcpdumpRequest_descriptor_,
      DisableTcpdumpRequest::default_instance_,
      DisableTcpdumpRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DisableTcpdumpRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisableTcpdumpRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisableTcpdumpRequest, _is_default_instance_));
  EnableTcpdumpRequest_descriptor_ = file->message_type(2);
  static const int EnableTcpdumpRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnableTcpdumpRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnableTcpdumpRequest, ogate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnableTcpdumpRequest, fifo_),
  };
  EnableTcpdumpRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnableTcpdumpRequest_descriptor_,
      EnableTcpdumpRequest::default_instance_,
      EnableTcpdumpRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(EnableTcpdumpRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnableTcpdumpRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnableTcpdumpRequest, _is_default_instance_));
  AttachTaskRequest_descriptor_ = file->message_type(3);
  static const int AttachTaskRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachTaskRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachTaskRequest, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachTaskRequest, tc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachTaskRequest, wid_),
  };
  AttachTaskRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AttachTaskRequest_descriptor_,
      AttachTaskRequest::default_instance_,
      AttachTaskRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(AttachTaskRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachTaskRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachTaskRequest, _is_default_instance_));
  DisconnectModulesRequest_descriptor_ = file->message_type(4);
  static const int DisconnectModulesRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisconnectModulesRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisconnectModulesRequest, ogate_),
  };
  DisconnectModulesRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DisconnectModulesRequest_descriptor_,
      DisconnectModulesRequest::default_instance_,
      DisconnectModulesRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DisconnectModulesRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisconnectModulesRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisconnectModulesRequest, _is_default_instance_));
  ConnectModulesRequest_descriptor_ = file->message_type(5);
  static const int ConnectModulesRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectModulesRequest, m1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectModulesRequest, m2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectModulesRequest, ogate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectModulesRequest, igate_),
  };
  ConnectModulesRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConnectModulesRequest_descriptor_,
      ConnectModulesRequest::default_instance_,
      ConnectModulesRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConnectModulesRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectModulesRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectModulesRequest, _is_default_instance_));
  GetModuleInfoResponse_descriptor_ = file->message_type(6);
  static const int GetModuleInfoResponse_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse, mclass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse, igates_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse, ogates_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse, metadata_),
  };
  GetModuleInfoResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetModuleInfoResponse_descriptor_,
      GetModuleInfoResponse::default_instance_,
      GetModuleInfoResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetModuleInfoResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse, _is_default_instance_));
  GetModuleInfoResponse_IGate_descriptor_ = GetModuleInfoResponse_descriptor_->nested_type(0);
  static const int GetModuleInfoResponse_IGate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_IGate, igate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_IGate, ogates_),
  };
  GetModuleInfoResponse_IGate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetModuleInfoResponse_IGate_descriptor_,
      GetModuleInfoResponse_IGate::default_instance_,
      GetModuleInfoResponse_IGate_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetModuleInfoResponse_IGate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_IGate, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_IGate, _is_default_instance_));
  GetModuleInfoResponse_IGate_OGate_descriptor_ = GetModuleInfoResponse_IGate_descriptor_->nested_type(0);
  static const int GetModuleInfoResponse_IGate_OGate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_IGate_OGate, ogate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_IGate_OGate, name_),
  };
  GetModuleInfoResponse_IGate_OGate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetModuleInfoResponse_IGate_OGate_descriptor_,
      GetModuleInfoResponse_IGate_OGate::default_instance_,
      GetModuleInfoResponse_IGate_OGate_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetModuleInfoResponse_IGate_OGate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_IGate_OGate, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_IGate_OGate, _is_default_instance_));
  GetModuleInfoResponse_OGate_descriptor_ = GetModuleInfoResponse_descriptor_->nested_type(1);
  static const int GetModuleInfoResponse_OGate_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_OGate, ogate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_OGate, cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_OGate, pkts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_OGate, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_OGate, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_OGate, igate_),
  };
  GetModuleInfoResponse_OGate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetModuleInfoResponse_OGate_descriptor_,
      GetModuleInfoResponse_OGate::default_instance_,
      GetModuleInfoResponse_OGate_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetModuleInfoResponse_OGate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_OGate, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_OGate, _is_default_instance_));
  GetModuleInfoResponse_Attribute_descriptor_ = GetModuleInfoResponse_descriptor_->nested_type(2);
  static const int GetModuleInfoResponse_Attribute_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_Attribute, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_Attribute, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_Attribute, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_Attribute, offset_),
  };
  GetModuleInfoResponse_Attribute_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetModuleInfoResponse_Attribute_descriptor_,
      GetModuleInfoResponse_Attribute::default_instance_,
      GetModuleInfoResponse_Attribute_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetModuleInfoResponse_Attribute),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_Attribute, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoResponse_Attribute, _is_default_instance_));
  GetModuleInfoRequest_descriptor_ = file->message_type(7);
  static const int GetModuleInfoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoRequest, name_),
  };
  GetModuleInfoRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetModuleInfoRequest_descriptor_,
      GetModuleInfoRequest::default_instance_,
      GetModuleInfoRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetModuleInfoRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModuleInfoRequest, _is_default_instance_));
  DestroyModuleRequest_descriptor_ = file->message_type(8);
  static const int DestroyModuleRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyModuleRequest, name_),
  };
  DestroyModuleRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DestroyModuleRequest_descriptor_,
      DestroyModuleRequest::default_instance_,
      DestroyModuleRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DestroyModuleRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyModuleRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyModuleRequest, _is_default_instance_));
  CreateModuleResponse_descriptor_ = file->message_type(9);
  static const int CreateModuleResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateModuleResponse, name_),
  };
  CreateModuleResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateModuleResponse_descriptor_,
      CreateModuleResponse::default_instance_,
      CreateModuleResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateModuleResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateModuleResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateModuleResponse, _is_default_instance_));
  CreateModuleRequest_descriptor_ = file->message_type(10);
  static const int CreateModuleRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateModuleRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateModuleRequest, mclass_),
  };
  CreateModuleRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateModuleRequest_descriptor_,
      CreateModuleRequest::default_instance_,
      CreateModuleRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateModuleRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateModuleRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateModuleRequest, _is_default_instance_));
  ListModulesResponse_descriptor_ = file->message_type(11);
  static const int ListModulesResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListModulesResponse, modules_),
  };
  ListModulesResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListModulesResponse_descriptor_,
      ListModulesResponse::default_instance_,
      ListModulesResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListModulesResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListModulesResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListModulesResponse, _is_default_instance_));
  ListModulesResponse_Module_descriptor_ = ListModulesResponse_descriptor_->nested_type(0);
  static const int ListModulesResponse_Module_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListModulesResponse_Module, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListModulesResponse_Module, mclass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListModulesResponse_Module, desc_),
  };
  ListModulesResponse_Module_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListModulesResponse_Module_descriptor_,
      ListModulesResponse_Module::default_instance_,
      ListModulesResponse_Module_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListModulesResponse_Module),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListModulesResponse_Module, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListModulesResponse_Module, _is_default_instance_));
  GetPortStatsResponse_descriptor_ = file->message_type(12);
  static const int GetPortStatsResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsResponse, inc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsResponse, out_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsResponse, timestamp_),
  };
  GetPortStatsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetPortStatsResponse_descriptor_,
      GetPortStatsResponse::default_instance_,
      GetPortStatsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetPortStatsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsResponse, _is_default_instance_));
  GetPortStatsResponse_Stat_descriptor_ = GetPortStatsResponse_descriptor_->nested_type(0);
  static const int GetPortStatsResponse_Stat_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsResponse_Stat, packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsResponse_Stat, dropped_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsResponse_Stat, bytes_),
  };
  GetPortStatsResponse_Stat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetPortStatsResponse_Stat_descriptor_,
      GetPortStatsResponse_Stat::default_instance_,
      GetPortStatsResponse_Stat_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetPortStatsResponse_Stat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsResponse_Stat, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsResponse_Stat, _is_default_instance_));
  GetPortStatsRequest_descriptor_ = file->message_type(13);
  static const int GetPortStatsRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsRequest, name_),
  };
  GetPortStatsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetPortStatsRequest_descriptor_,
      GetPortStatsRequest::default_instance_,
      GetPortStatsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetPortStatsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPortStatsRequest, _is_default_instance_));
  DestroyPortRequest_descriptor_ = file->message_type(14);
  static const int DestroyPortRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyPortRequest, name_),
  };
  DestroyPortRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DestroyPortRequest_descriptor_,
      DestroyPortRequest::default_instance_,
      DestroyPortRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DestroyPortRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyPortRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyPortRequest, _is_default_instance_));
  CreatePortRequest_descriptor_ = file->message_type(15);
  static const int CreatePortRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePortRequest, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePortRequest, num_inc_q_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePortRequest, num_out_q_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePortRequest, size_inc_q_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePortRequest, size_out_q_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePortRequest, mac_addr_),
  };
  CreatePortRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreatePortRequest_descriptor_,
      CreatePortRequest::default_instance_,
      CreatePortRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreatePortRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePortRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePortRequest, _is_default_instance_));
  Port_descriptor_ = file->message_type(16);
  static const int Port_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Port, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Port, driver_),
  };
  Port_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Port_descriptor_,
      Port::default_instance_,
      Port_offsets_,
      -1,
      -1,
      -1,
      sizeof(Port),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Port, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Port, _is_default_instance_));
  ListPortsResponse_descriptor_ = file->message_type(17);
  static const int ListPortsResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListPortsResponse, ports_),
  };
  ListPortsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListPortsResponse_descriptor_,
      ListPortsResponse::default_instance_,
      ListPortsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListPortsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListPortsResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListPortsResponse, _is_default_instance_));
  Error_descriptor_ = file->message_type(18);
  static const int Error_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, errmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, details_),
  };
  Error_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Error_descriptor_,
      Error::default_instance_,
      Error_offsets_,
      -1,
      -1,
      -1,
      sizeof(Error),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _is_default_instance_));
  ListWorkersResponse_descriptor_ = file->message_type(19);
  static const int ListWorkersResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListWorkersResponse, workers_status_),
  };
  ListWorkersResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListWorkersResponse_descriptor_,
      ListWorkersResponse::default_instance_,
      ListWorkersResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListWorkersResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListWorkersResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListWorkersResponse, _is_default_instance_));
  ListWorkersResponse_WorkerStatus_descriptor_ = ListWorkersResponse_descriptor_->nested_type(0);
  static const int ListWorkersResponse_WorkerStatus_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListWorkersResponse_WorkerStatus, wid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListWorkersResponse_WorkerStatus, core_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListWorkersResponse_WorkerStatus, running_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListWorkersResponse_WorkerStatus, num_tcs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListWorkersResponse_WorkerStatus, silent_drops_),
  };
  ListWorkersResponse_WorkerStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListWorkersResponse_WorkerStatus_descriptor_,
      ListWorkersResponse_WorkerStatus::default_instance_,
      ListWorkersResponse_WorkerStatus_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListWorkersResponse_WorkerStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListWorkersResponse_WorkerStatus, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListWorkersResponse_WorkerStatus, _is_default_instance_));
  AddWorkerRequest_descriptor_ = file->message_type(20);
  static const int AddWorkerRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWorkerRequest, wid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWorkerRequest, core_),
  };
  AddWorkerRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddWorkerRequest_descriptor_,
      AddWorkerRequest::default_instance_,
      AddWorkerRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddWorkerRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWorkerRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddWorkerRequest, _is_default_instance_));
  ListTcsRequest_descriptor_ = file->message_type(21);
  static const int ListTcsRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTcsRequest, wid_),
  };
  ListTcsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListTcsRequest_descriptor_,
      ListTcsRequest::default_instance_,
      ListTcsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListTcsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTcsRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTcsRequest, _is_default_instance_));
  TrafficClass_descriptor_ = file->message_type(22);
  static const int TrafficClass_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass, priority_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass, wid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass, max_burst_),
  };
  TrafficClass_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrafficClass_descriptor_,
      TrafficClass::default_instance_,
      TrafficClass_offsets_,
      -1,
      -1,
      -1,
      sizeof(TrafficClass),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass, _is_default_instance_));
  TrafficClass_Resource_descriptor_ = TrafficClass_descriptor_->nested_type(0);
  static const int TrafficClass_Resource_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass_Resource, schedules_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass_Resource, cycles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass_Resource, packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass_Resource, bits_),
  };
  TrafficClass_Resource_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrafficClass_Resource_descriptor_,
      TrafficClass_Resource::default_instance_,
      TrafficClass_Resource_offsets_,
      -1,
      -1,
      -1,
      sizeof(TrafficClass_Resource),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass_Resource, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrafficClass_Resource, _is_default_instance_));
  GetTcStatsResponse_descriptor_ = file->message_type(23);
  static const int GetTcStatsResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTcStatsResponse, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTcStatsResponse, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTcStatsResponse, cycles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTcStatsResponse, packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTcStatsResponse, bits_),
  };
  GetTcStatsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetTcStatsResponse_descriptor_,
      GetTcStatsResponse::default_instance_,
      GetTcStatsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetTcStatsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTcStatsResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTcStatsResponse, _is_default_instance_));
  ListTcsResponse_descriptor_ = file->message_type(24);
  static const int ListTcsResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTcsResponse, classes_status_),
  };
  ListTcsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListTcsResponse_descriptor_,
      ListTcsResponse::default_instance_,
      ListTcsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListTcsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTcsResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTcsResponse, _is_default_instance_));
  ListTcsResponse_TrafficClassStatus_descriptor_ = ListTcsResponse_descriptor_->nested_type(0);
  static const int ListTcsResponse_TrafficClassStatus_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTcsResponse_TrafficClassStatus, class__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTcsResponse_TrafficClassStatus, parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTcsResponse_TrafficClassStatus, tasks_),
  };
  ListTcsResponse_TrafficClassStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListTcsResponse_TrafficClassStatus_descriptor_,
      ListTcsResponse_TrafficClassStatus::default_instance_,
      ListTcsResponse_TrafficClassStatus_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListTcsResponse_TrafficClassStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTcsResponse_TrafficClassStatus, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTcsResponse_TrafficClassStatus, _is_default_instance_));
  AddTcRequest_descriptor_ = file->message_type(25);
  static const int AddTcRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddTcRequest, class__),
  };
  AddTcRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddTcRequest_descriptor_,
      AddTcRequest::default_instance_,
      AddTcRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddTcRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddTcRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddTcRequest, _is_default_instance_));
  GetTcStatsRequest_descriptor_ = file->message_type(26);
  static const int GetTcStatsRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTcStatsRequest, name_),
  };
  GetTcStatsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetTcStatsRequest_descriptor_,
      GetTcStatsRequest::default_instance_,
      GetTcStatsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetTcStatsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTcStatsRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTcStatsRequest, _is_default_instance_));
  ListDriversResponse_descriptor_ = file->message_type(27);
  static const int ListDriversResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDriversResponse, driver_names_),
  };
  ListDriversResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListDriversResponse_descriptor_,
      ListDriversResponse::default_instance_,
      ListDriversResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListDriversResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDriversResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDriversResponse, _is_default_instance_));
  GetDriverInfoRequest_descriptor_ = file->message_type(28);
  static const int GetDriverInfoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDriverInfoRequest, driver_name_),
  };
  GetDriverInfoRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetDriverInfoRequest_descriptor_,
      GetDriverInfoRequest::default_instance_,
      GetDriverInfoRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetDriverInfoRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDriverInfoRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDriverInfoRequest, _is_default_instance_));
  GetDriverInfoResponse_descriptor_ = file->message_type(29);
  static const int GetDriverInfoResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDriverInfoResponse, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDriverInfoResponse, help_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDriverInfoResponse, commands_),
  };
  GetDriverInfoResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetDriverInfoResponse_descriptor_,
      GetDriverInfoResponse::default_instance_,
      GetDriverInfoResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetDriverInfoResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDriverInfoResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDriverInfoResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_bessctl_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Empty_descriptor_, &Empty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DisableTcpdumpRequest_descriptor_, &DisableTcpdumpRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnableTcpdumpRequest_descriptor_, &EnableTcpdumpRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AttachTaskRequest_descriptor_, &AttachTaskRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DisconnectModulesRequest_descriptor_, &DisconnectModulesRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConnectModulesRequest_descriptor_, &ConnectModulesRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetModuleInfoResponse_descriptor_, &GetModuleInfoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetModuleInfoResponse_IGate_descriptor_, &GetModuleInfoResponse_IGate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetModuleInfoResponse_IGate_OGate_descriptor_, &GetModuleInfoResponse_IGate_OGate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetModuleInfoResponse_OGate_descriptor_, &GetModuleInfoResponse_OGate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetModuleInfoResponse_Attribute_descriptor_, &GetModuleInfoResponse_Attribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetModuleInfoRequest_descriptor_, &GetModuleInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DestroyModuleRequest_descriptor_, &DestroyModuleRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateModuleResponse_descriptor_, &CreateModuleResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateModuleRequest_descriptor_, &CreateModuleRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListModulesResponse_descriptor_, &ListModulesResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListModulesResponse_Module_descriptor_, &ListModulesResponse_Module::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetPortStatsResponse_descriptor_, &GetPortStatsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetPortStatsResponse_Stat_descriptor_, &GetPortStatsResponse_Stat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetPortStatsRequest_descriptor_, &GetPortStatsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DestroyPortRequest_descriptor_, &DestroyPortRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreatePortRequest_descriptor_, &CreatePortRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Port_descriptor_, &Port::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListPortsResponse_descriptor_, &ListPortsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Error_descriptor_, &Error::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListWorkersResponse_descriptor_, &ListWorkersResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListWorkersResponse_WorkerStatus_descriptor_, &ListWorkersResponse_WorkerStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddWorkerRequest_descriptor_, &AddWorkerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListTcsRequest_descriptor_, &ListTcsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrafficClass_descriptor_, &TrafficClass::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrafficClass_Resource_descriptor_, &TrafficClass_Resource::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetTcStatsResponse_descriptor_, &GetTcStatsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListTcsResponse_descriptor_, &ListTcsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListTcsResponse_TrafficClassStatus_descriptor_, &ListTcsResponse_TrafficClassStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddTcRequest_descriptor_, &AddTcRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetTcStatsRequest_descriptor_, &GetTcStatsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListDriversResponse_descriptor_, &ListDriversResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetDriverInfoRequest_descriptor_, &GetDriverInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetDriverInfoResponse_descriptor_, &GetDriverInfoResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_bessctl_2eproto() {
  delete Empty::default_instance_;
  delete Empty_reflection_;
  delete DisableTcpdumpRequest::default_instance_;
  delete DisableTcpdumpRequest_reflection_;
  delete EnableTcpdumpRequest::default_instance_;
  delete EnableTcpdumpRequest_reflection_;
  delete AttachTaskRequest::default_instance_;
  delete AttachTaskRequest_reflection_;
  delete DisconnectModulesRequest::default_instance_;
  delete DisconnectModulesRequest_reflection_;
  delete ConnectModulesRequest::default_instance_;
  delete ConnectModulesRequest_reflection_;
  delete GetModuleInfoResponse::default_instance_;
  delete GetModuleInfoResponse_reflection_;
  delete GetModuleInfoResponse_IGate::default_instance_;
  delete GetModuleInfoResponse_IGate_reflection_;
  delete GetModuleInfoResponse_IGate_OGate::default_instance_;
  delete GetModuleInfoResponse_IGate_OGate_reflection_;
  delete GetModuleInfoResponse_OGate::default_instance_;
  delete GetModuleInfoResponse_OGate_reflection_;
  delete GetModuleInfoResponse_Attribute::default_instance_;
  delete GetModuleInfoResponse_Attribute_reflection_;
  delete GetModuleInfoRequest::default_instance_;
  delete GetModuleInfoRequest_reflection_;
  delete DestroyModuleRequest::default_instance_;
  delete DestroyModuleRequest_reflection_;
  delete CreateModuleResponse::default_instance_;
  delete CreateModuleResponse_reflection_;
  delete CreateModuleRequest::default_instance_;
  delete CreateModuleRequest_reflection_;
  delete ListModulesResponse::default_instance_;
  delete ListModulesResponse_reflection_;
  delete ListModulesResponse_Module::default_instance_;
  delete ListModulesResponse_Module_reflection_;
  delete GetPortStatsResponse::default_instance_;
  delete GetPortStatsResponse_reflection_;
  delete GetPortStatsResponse_Stat::default_instance_;
  delete GetPortStatsResponse_Stat_reflection_;
  delete GetPortStatsRequest::default_instance_;
  delete GetPortStatsRequest_reflection_;
  delete DestroyPortRequest::default_instance_;
  delete DestroyPortRequest_reflection_;
  delete CreatePortRequest::default_instance_;
  delete CreatePortRequest_reflection_;
  delete Port::default_instance_;
  delete Port_reflection_;
  delete ListPortsResponse::default_instance_;
  delete ListPortsResponse_reflection_;
  delete Error::default_instance_;
  delete Error_reflection_;
  delete ListWorkersResponse::default_instance_;
  delete ListWorkersResponse_reflection_;
  delete ListWorkersResponse_WorkerStatus::default_instance_;
  delete ListWorkersResponse_WorkerStatus_reflection_;
  delete AddWorkerRequest::default_instance_;
  delete AddWorkerRequest_reflection_;
  delete ListTcsRequest::default_instance_;
  delete ListTcsRequest_reflection_;
  delete TrafficClass::default_instance_;
  delete TrafficClass_reflection_;
  delete TrafficClass_Resource::default_instance_;
  delete TrafficClass_Resource_reflection_;
  delete GetTcStatsResponse::default_instance_;
  delete GetTcStatsResponse_reflection_;
  delete ListTcsResponse::default_instance_;
  delete ListTcsResponse_reflection_;
  delete ListTcsResponse_TrafficClassStatus::default_instance_;
  delete ListTcsResponse_TrafficClassStatus_reflection_;
  delete AddTcRequest::default_instance_;
  delete AddTcRequest_reflection_;
  delete GetTcStatsRequest::default_instance_;
  delete GetTcStatsRequest_reflection_;
  delete ListDriversResponse::default_instance_;
  delete ListDriversResponse_reflection_;
  delete GetDriverInfoRequest::default_instance_;
  delete GetDriverInfoRequest_reflection_;
  delete GetDriverInfoResponse::default_instance_;
  delete GetDriverInfoResponse_reflection_;
}

void protobuf_AddDesc_bessctl_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_bessctl_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rbessctl.proto\022\004bess\"\007\n\005Empty\"4\n\025Disabl"
    "eTcpdumpRequest\022\014\n\004name\030\001 \001(\t\022\r\n\005ogate\030\002"
    " \001(\004\"A\n\024EnableTcpdumpRequest\022\014\n\004name\030\001 \001"
    "(\t\022\r\n\005ogate\030\002 \001(\004\022\014\n\004fifo\030\003 \001(\t\"J\n\021Attac"
    "hTaskRequest\022\014\n\004name\030\001 \001(\t\022\016\n\006taskid\030\002 \001"
    "(\004\022\n\n\002tc\030\003 \001(\t\022\013\n\003wid\030\004 \001(\004\"7\n\030Disconnec"
    "tModulesRequest\022\014\n\004name\030\001 \001(\t\022\r\n\005ogate\030\002"
    " \001(\004\"M\n\025ConnectModulesRequest\022\n\n\002m1\030\001 \001("
    "\t\022\n\n\002m2\030\002 \001(\t\022\r\n\005ogate\030\003 \001(\004\022\r\n\005igate\030\004 "
    "\001(\004\"\203\004\n\025GetModuleInfoResponse\022\014\n\004name\030\001 "
    "\001(\t\022\016\n\006mclass\030\002 \001(\t\022\014\n\004desc\030\003 \001(\t\0221\n\006iga"
    "tes\030\005 \003(\0132!.bess.GetModuleInfoResponse.I"
    "Gate\0221\n\006ogates\030\006 \003(\0132!.bess.GetModuleInf"
    "oResponse.OGate\0227\n\010metadata\030\007 \003(\0132%.bess"
    ".GetModuleInfoResponse.Attribute\032u\n\005IGat"
    "e\022\r\n\005igate\030\001 \001(\004\0227\n\006ogates\030\002 \003(\0132\'.bess."
    "GetModuleInfoResponse.IGate.OGate\032$\n\005OGa"
    "te\022\r\n\005ogate\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\032a\n\005OGate"
    "\022\r\n\005ogate\030\001 \001(\004\022\013\n\003cnt\030\002 \001(\004\022\014\n\004pkts\030\003 \001"
    "(\004\022\021\n\ttimestamp\030\004 \001(\001\022\014\n\004name\030\005 \001(\t\022\r\n\005i"
    "gate\030\006 \001(\004\032E\n\tAttribute\022\014\n\004name\030\001 \001(\t\022\014\n"
    "\004size\030\002 \001(\004\022\014\n\004mode\030\003 \001(\t\022\016\n\006offset\030\004 \001("
    "\003\"$\n\024GetModuleInfoRequest\022\014\n\004name\030\001 \001(\t\""
    "$\n\024DestroyModuleRequest\022\014\n\004name\030\001 \001(\t\"$\n"
    "\024CreateModuleResponse\022\014\n\004name\030\001 \001(\t\"3\n\023C"
    "reateModuleRequest\022\014\n\004name\030\001 \001(\t\022\016\n\006mcla"
    "ss\030\002 \001(\t\"~\n\023ListModulesResponse\0221\n\007modul"
    "es\030\001 \003(\0132 .bess.ListModulesResponse.Modu"
    "le\0324\n\006Module\022\014\n\004name\030\001 \001(\t\022\016\n\006mclass\030\002 \001"
    "(\t\022\014\n\004desc\030\003 \001(\t\"\276\001\n\024GetPortStatsRespons"
    "e\022,\n\003inc\030\001 \001(\0132\037.bess.GetPortStatsRespon"
    "se.Stat\022,\n\003out\030\002 \001(\0132\037.bess.GetPortStats"
    "Response.Stat\022\021\n\ttimestamp\030\003 \001(\001\0327\n\004Stat"
    "\022\017\n\007packets\030\001 \001(\004\022\017\n\007dropped\030\002 \001(\004\022\r\n\005by"
    "tes\030\003 \001(\004\"#\n\023GetPortStatsRequest\022\014\n\004name"
    "\030\001 \001(\t\"\"\n\022DestroyPortRequest\022\014\n\004name\030\001 \001"
    "(\t\"\215\001\n\021CreatePortRequest\022\030\n\004port\030\001 \001(\0132\n"
    ".bess.Port\022\021\n\tnum_inc_q\030\002 \001(\004\022\021\n\tnum_out"
    "_q\030\003 \001(\004\022\022\n\nsize_inc_q\030\004 \001(\004\022\022\n\nsize_out"
    "_q\030\005 \001(\004\022\020\n\010mac_addr\030\006 \001(\t\"$\n\004Port\022\014\n\004na"
    "me\030\001 \001(\t\022\016\n\006driver\030\002 \001(\t\".\n\021ListPortsRes"
    "ponse\022\031\n\005ports\030\001 \003(\0132\n.bess.Port\"5\n\005Erro"
    "r\022\013\n\003err\030\001 \001(\005\022\016\n\006errmsg\030\002 \001(\t\022\017\n\007detail"
    "s\030\003 \001(\t\"\270\001\n\023ListWorkersResponse\022>\n\016worke"
    "rs_status\030\001 \003(\0132&.bess.ListWorkersRespon"
    "se.WorkerStatus\032a\n\014WorkerStatus\022\013\n\003wid\030\001"
    " \001(\003\022\014\n\004core\030\002 \001(\003\022\017\n\007running\030\003 \001(\003\022\017\n\007n"
    "um_tcs\030\004 \001(\003\022\024\n\014silent_drops\030\005 \001(\003\"-\n\020Ad"
    "dWorkerRequest\022\013\n\003wid\030\001 \001(\004\022\014\n\004core\030\002 \001("
    "\004\"\035\n\016ListTcsRequest\022\013\n\003wid\030\001 \001(\004\"\345\001\n\014Tra"
    "fficClass\022\014\n\004name\030\001 \001(\t\022\020\n\010priority\030\002 \001("
    "\003\022\013\n\003wid\030\003 \001(\003\022*\n\005limit\030\004 \001(\0132\033.bess.Tra"
    "fficClass.Resource\022.\n\tmax_burst\030\005 \001(\0132\033."
    "bess.TrafficClass.Resource\032L\n\010Resource\022\021"
    "\n\tschedules\030\001 \001(\003\022\016\n\006cycles\030\002 \001(\003\022\017\n\007pac"
    "kets\030\003 \001(\003\022\014\n\004bits\030\004 \001(\003\"e\n\022GetTcStatsRe"
    "sponse\022\021\n\ttimestamp\030\001 \001(\001\022\r\n\005count\030\002 \001(\004"
    "\022\016\n\006cycles\030\003 \001(\004\022\017\n\007packets\030\004 \001(\004\022\014\n\004bit"
    "s\030\005 \001(\004\"\253\001\n\017ListTcsResponse\022@\n\016classes_s"
    "tatus\030\001 \003(\0132(.bess.ListTcsResponse.Traff"
    "icClassStatus\032V\n\022TrafficClassStatus\022!\n\005c"
    "lass\030\001 \001(\0132\022.bess.TrafficClass\022\016\n\006parent"
    "\030\002 \001(\t\022\r\n\005tasks\030\003 \001(\003\"1\n\014AddTcRequest\022!\n"
    "\005class\030\001 \001(\0132\022.bess.TrafficClass\"!\n\021GetT"
    "cStatsRequest\022\014\n\004name\030\001 \001(\t\"+\n\023ListDrive"
    "rsResponse\022\024\n\014driver_names\030\001 \003(\t\"+\n\024GetD"
    "riverInfoRequest\022\023\n\013driver_name\030\001 \001(\t\"E\n"
    "\025GetDriverInfoResponse\022\014\n\004name\030\001 \001(\t\022\014\n\004"
    "help\030\002 \001(\t\022\020\n\010commands\030\003 \003(\t2\233\014\n\013BESSCon"
    "trol\022&\n\010ResetAll\022\013.bess.Empty\032\013.bess.Err"
    "or\"\000\022&\n\010PauseAll\022\013.bess.Empty\032\013.bess.Err"
    "or\"\000\022\'\n\tResumeAll\022\013.bess.Empty\032\013.bess.Er"
    "ror\"\000\022*\n\014ResetWorkers\022\013.bess.Empty\032\013.bes"
    "s.Error\"\000\0227\n\013ListWorkers\022\013.bess.Empty\032\031."
    "bess.ListWorkersResponse\"\000\0222\n\tAddWorker\022"
    "\026.bess.AddWorkerRequest\032\013.bess.Error\"\000\022&"
    "\n\010ResetTcs\022\013.bess.Empty\032\013.bess.Error\"\000\0228"
    "\n\007ListTcs\022\024.bess.ListTcsRequest\032\025.bess.L"
    "istTcsResponse\"\000\022*\n\005AddTc\022\022.bess.AddTcRe"
    "quest\032\013.bess.Error\"\000\022A\n\nGetTcStats\022\027.bes"
    "s.GetTcStatsRequest\032\030.bess.GetTcStatsRes"
    "ponse\"\000\0227\n\013ListDrivers\022\013.bess.Empty\032\031.be"
    "ss.ListDriversResponse\"\000\022J\n\rGetDriverInf"
    "o\022\032.bess.GetDriverInfoRequest\032\033.bess.Get"
    "DriverInfoResponse\"\000\022(\n\nResetPorts\022\013.bes"
    "s.Empty\032\013.bess.Error\"\000\0223\n\tListPorts\022\013.be"
    "ss.Empty\032\027.bess.ListPortsResponse\"\000\0224\n\nC"
    "reatePort\022\027.bess.CreatePortRequest\032\013.bes"
    "s.Error\"\000\0226\n\013DestroyPort\022\030.bess.DestroyP"
    "ortRequest\032\013.bess.Error\"\000\022G\n\014GetPortStat"
    "s\022\031.bess.GetPortStatsRequest\032\032.bess.GetP"
    "ortStatsResponse\"\000\022*\n\014ResetModules\022\013.bes"
    "s.Empty\032\013.bess.Error\"\000\0227\n\013ListModules\022\013."
    "bess.Empty\032\031.bess.ListModulesResponse\"\000\022"
    "G\n\014CreateModule\022\031.bess.CreateModuleReque"
    "st\032\032.bess.CreateModuleResponse\"\000\022:\n\rDest"
    "royModule\022\032.bess.DestroyModuleRequest\032\013."
    "bess.Error\"\000\022J\n\rGetModuleInfo\022\032.bess.Get"
    "ModuleInfoRequest\032\033.bess.GetModuleInfoRe"
    "sponse\"\000\022<\n\016ConnectModules\022\033.bess.Connec"
    "tModulesRequest\032\013.bess.Error\"\000\022B\n\021Discon"
    "nectModules\022\036.bess.DisconnectModulesRequ"
    "est\032\013.bess.Error\"\000\0224\n\nAttachTask\022\027.bess."
    "AttachTaskRequest\032\013.bess.Error\"\000\022:\n\rEnab"
    "leTcpdump\022\032.bess.EnableTcpdumpRequest\032\013."
    "bess.Error\"\000\022<\n\016DisableTcpdump\022\033.bess.Di"
    "sableTcpdumpRequest\032\013.bess.Error\"\000\022&\n\010Ki"
    "llBess\022\013.bess.Empty\032\013.bess.Error\"\000b\006prot"
    "o3", 4322);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bessctl.proto", &protobuf_RegisterTypes);
  Empty::default_instance_ = new Empty();
  DisableTcpdumpRequest::default_instance_ = new DisableTcpdumpRequest();
  EnableTcpdumpRequest::default_instance_ = new EnableTcpdumpRequest();
  AttachTaskRequest::default_instance_ = new AttachTaskRequest();
  DisconnectModulesRequest::default_instance_ = new DisconnectModulesRequest();
  ConnectModulesRequest::default_instance_ = new ConnectModulesRequest();
  GetModuleInfoResponse::default_instance_ = new GetModuleInfoResponse();
  GetModuleInfoResponse_IGate::default_instance_ = new GetModuleInfoResponse_IGate();
  GetModuleInfoResponse_IGate_OGate::default_instance_ = new GetModuleInfoResponse_IGate_OGate();
  GetModuleInfoResponse_OGate::default_instance_ = new GetModuleInfoResponse_OGate();
  GetModuleInfoResponse_Attribute::default_instance_ = new GetModuleInfoResponse_Attribute();
  GetModuleInfoRequest::default_instance_ = new GetModuleInfoRequest();
  DestroyModuleRequest::default_instance_ = new DestroyModuleRequest();
  CreateModuleResponse::default_instance_ = new CreateModuleResponse();
  CreateModuleRequest::default_instance_ = new CreateModuleRequest();
  ListModulesResponse::default_instance_ = new ListModulesResponse();
  ListModulesResponse_Module::default_instance_ = new ListModulesResponse_Module();
  GetPortStatsResponse::default_instance_ = new GetPortStatsResponse();
  GetPortStatsResponse_Stat::default_instance_ = new GetPortStatsResponse_Stat();
  GetPortStatsRequest::default_instance_ = new GetPortStatsRequest();
  DestroyPortRequest::default_instance_ = new DestroyPortRequest();
  CreatePortRequest::default_instance_ = new CreatePortRequest();
  Port::default_instance_ = new Port();
  ListPortsResponse::default_instance_ = new ListPortsResponse();
  Error::default_instance_ = new Error();
  ListWorkersResponse::default_instance_ = new ListWorkersResponse();
  ListWorkersResponse_WorkerStatus::default_instance_ = new ListWorkersResponse_WorkerStatus();
  AddWorkerRequest::default_instance_ = new AddWorkerRequest();
  ListTcsRequest::default_instance_ = new ListTcsRequest();
  TrafficClass::default_instance_ = new TrafficClass();
  TrafficClass_Resource::default_instance_ = new TrafficClass_Resource();
  GetTcStatsResponse::default_instance_ = new GetTcStatsResponse();
  ListTcsResponse::default_instance_ = new ListTcsResponse();
  ListTcsResponse_TrafficClassStatus::default_instance_ = new ListTcsResponse_TrafficClassStatus();
  AddTcRequest::default_instance_ = new AddTcRequest();
  GetTcStatsRequest::default_instance_ = new GetTcStatsRequest();
  ListDriversResponse::default_instance_ = new ListDriversResponse();
  GetDriverInfoRequest::default_instance_ = new GetDriverInfoRequest();
  GetDriverInfoResponse::default_instance_ = new GetDriverInfoResponse();
  Empty::default_instance_->InitAsDefaultInstance();
  DisableTcpdumpRequest::default_instance_->InitAsDefaultInstance();
  EnableTcpdumpRequest::default_instance_->InitAsDefaultInstance();
  AttachTaskRequest::default_instance_->InitAsDefaultInstance();
  DisconnectModulesRequest::default_instance_->InitAsDefaultInstance();
  ConnectModulesRequest::default_instance_->InitAsDefaultInstance();
  GetModuleInfoResponse::default_instance_->InitAsDefaultInstance();
  GetModuleInfoResponse_IGate::default_instance_->InitAsDefaultInstance();
  GetModuleInfoResponse_IGate_OGate::default_instance_->InitAsDefaultInstance();
  GetModuleInfoResponse_OGate::default_instance_->InitAsDefaultInstance();
  GetModuleInfoResponse_Attribute::default_instance_->InitAsDefaultInstance();
  GetModuleInfoRequest::default_instance_->InitAsDefaultInstance();
  DestroyModuleRequest::default_instance_->InitAsDefaultInstance();
  CreateModuleResponse::default_instance_->InitAsDefaultInstance();
  CreateModuleRequest::default_instance_->InitAsDefaultInstance();
  ListModulesResponse::default_instance_->InitAsDefaultInstance();
  ListModulesResponse_Module::default_instance_->InitAsDefaultInstance();
  GetPortStatsResponse::default_instance_->InitAsDefaultInstance();
  GetPortStatsResponse_Stat::default_instance_->InitAsDefaultInstance();
  GetPortStatsRequest::default_instance_->InitAsDefaultInstance();
  DestroyPortRequest::default_instance_->InitAsDefaultInstance();
  CreatePortRequest::default_instance_->InitAsDefaultInstance();
  Port::default_instance_->InitAsDefaultInstance();
  ListPortsResponse::default_instance_->InitAsDefaultInstance();
  Error::default_instance_->InitAsDefaultInstance();
  ListWorkersResponse::default_instance_->InitAsDefaultInstance();
  ListWorkersResponse_WorkerStatus::default_instance_->InitAsDefaultInstance();
  AddWorkerRequest::default_instance_->InitAsDefaultInstance();
  ListTcsRequest::default_instance_->InitAsDefaultInstance();
  TrafficClass::default_instance_->InitAsDefaultInstance();
  TrafficClass_Resource::default_instance_->InitAsDefaultInstance();
  GetTcStatsResponse::default_instance_->InitAsDefaultInstance();
  ListTcsResponse::default_instance_->InitAsDefaultInstance();
  ListTcsResponse_TrafficClassStatus::default_instance_->InitAsDefaultInstance();
  AddTcRequest::default_instance_->InitAsDefaultInstance();
  GetTcStatsRequest::default_instance_->InitAsDefaultInstance();
  ListDriversResponse::default_instance_->InitAsDefaultInstance();
  GetDriverInfoRequest::default_instance_->InitAsDefaultInstance();
  GetDriverInfoResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_bessctl_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_bessctl_2eproto {
  StaticDescriptorInitializer_bessctl_2eproto() {
    protobuf_AddDesc_bessctl_2eproto();
  }
} static_descriptor_initializer_bessctl_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.Empty)
}

void Empty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.Empty)
}

void Empty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:bess.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Empty_descriptor_;
}

const Empty& Empty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

Empty* Empty::default_instance_ = NULL;

Empty* Empty::New(::google::protobuf::Arena* arena) const {
  Empty* n = new Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.Empty)
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:bess.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.Empty)
  // @@protoc_insertion_point(serialize_end:bess.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.Empty)
  // @@protoc_insertion_point(serialize_to_array_end:bess.Empty)
  return target;
}

int Empty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.Empty)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.Empty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Empty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.Empty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {

  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Empty_descriptor_;
  metadata.reflection = Empty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Empty

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisableTcpdumpRequest::kNameFieldNumber;
const int DisableTcpdumpRequest::kOgateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisableTcpdumpRequest::DisableTcpdumpRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.DisableTcpdumpRequest)
}

void DisableTcpdumpRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DisableTcpdumpRequest::DisableTcpdumpRequest(const DisableTcpdumpRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.DisableTcpdumpRequest)
}

void DisableTcpdumpRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ogate_ = GOOGLE_ULONGLONG(0);
}

DisableTcpdumpRequest::~DisableTcpdumpRequest() {
  // @@protoc_insertion_point(destructor:bess.DisableTcpdumpRequest)
  SharedDtor();
}

void DisableTcpdumpRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DisableTcpdumpRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisableTcpdumpRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DisableTcpdumpRequest_descriptor_;
}

const DisableTcpdumpRequest& DisableTcpdumpRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

DisableTcpdumpRequest* DisableTcpdumpRequest::default_instance_ = NULL;

DisableTcpdumpRequest* DisableTcpdumpRequest::New(::google::protobuf::Arena* arena) const {
  DisableTcpdumpRequest* n = new DisableTcpdumpRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisableTcpdumpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.DisableTcpdumpRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ogate_ = GOOGLE_ULONGLONG(0);
}

bool DisableTcpdumpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.DisableTcpdumpRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.DisableTcpdumpRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ogate;
        break;
      }

      // optional uint64 ogate = 2;
      case 2: {
        if (tag == 16) {
         parse_ogate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ogate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.DisableTcpdumpRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.DisableTcpdumpRequest)
  return false;
#undef DO_
}

void DisableTcpdumpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.DisableTcpdumpRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.DisableTcpdumpRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 ogate = 2;
  if (this->ogate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ogate(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.DisableTcpdumpRequest)
}

::google::protobuf::uint8* DisableTcpdumpRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.DisableTcpdumpRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.DisableTcpdumpRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 ogate = 2;
  if (this->ogate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ogate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.DisableTcpdumpRequest)
  return target;
}

int DisableTcpdumpRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.DisableTcpdumpRequest)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint64 ogate = 2;
  if (this->ogate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ogate());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisableTcpdumpRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.DisableTcpdumpRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DisableTcpdumpRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DisableTcpdumpRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.DisableTcpdumpRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.DisableTcpdumpRequest)
    MergeFrom(*source);
  }
}

void DisableTcpdumpRequest::MergeFrom(const DisableTcpdumpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.DisableTcpdumpRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.ogate() != 0) {
    set_ogate(from.ogate());
  }
}

void DisableTcpdumpRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.DisableTcpdumpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisableTcpdumpRequest::CopyFrom(const DisableTcpdumpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.DisableTcpdumpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableTcpdumpRequest::IsInitialized() const {

  return true;
}

void DisableTcpdumpRequest::Swap(DisableTcpdumpRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisableTcpdumpRequest::InternalSwap(DisableTcpdumpRequest* other) {
  name_.Swap(&other->name_);
  std::swap(ogate_, other->ogate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisableTcpdumpRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DisableTcpdumpRequest_descriptor_;
  metadata.reflection = DisableTcpdumpRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisableTcpdumpRequest

// optional string name = 1;
void DisableTcpdumpRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DisableTcpdumpRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.DisableTcpdumpRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DisableTcpdumpRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.DisableTcpdumpRequest.name)
}
 void DisableTcpdumpRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.DisableTcpdumpRequest.name)
}
 void DisableTcpdumpRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.DisableTcpdumpRequest.name)
}
 ::std::string* DisableTcpdumpRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.DisableTcpdumpRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DisableTcpdumpRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.DisableTcpdumpRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DisableTcpdumpRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.DisableTcpdumpRequest.name)
}

// optional uint64 ogate = 2;
void DisableTcpdumpRequest::clear_ogate() {
  ogate_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DisableTcpdumpRequest::ogate() const {
  // @@protoc_insertion_point(field_get:bess.DisableTcpdumpRequest.ogate)
  return ogate_;
}
 void DisableTcpdumpRequest::set_ogate(::google::protobuf::uint64 value) {
  
  ogate_ = value;
  // @@protoc_insertion_point(field_set:bess.DisableTcpdumpRequest.ogate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnableTcpdumpRequest::kNameFieldNumber;
const int EnableTcpdumpRequest::kOgateFieldNumber;
const int EnableTcpdumpRequest::kFifoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnableTcpdumpRequest::EnableTcpdumpRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.EnableTcpdumpRequest)
}

void EnableTcpdumpRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EnableTcpdumpRequest::EnableTcpdumpRequest(const EnableTcpdumpRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.EnableTcpdumpRequest)
}

void EnableTcpdumpRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ogate_ = GOOGLE_ULONGLONG(0);
  fifo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EnableTcpdumpRequest::~EnableTcpdumpRequest() {
  // @@protoc_insertion_point(destructor:bess.EnableTcpdumpRequest)
  SharedDtor();
}

void EnableTcpdumpRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fifo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EnableTcpdumpRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnableTcpdumpRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnableTcpdumpRequest_descriptor_;
}

const EnableTcpdumpRequest& EnableTcpdumpRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

EnableTcpdumpRequest* EnableTcpdumpRequest::default_instance_ = NULL;

EnableTcpdumpRequest* EnableTcpdumpRequest::New(::google::protobuf::Arena* arena) const {
  EnableTcpdumpRequest* n = new EnableTcpdumpRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnableTcpdumpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.EnableTcpdumpRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ogate_ = GOOGLE_ULONGLONG(0);
  fifo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EnableTcpdumpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.EnableTcpdumpRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.EnableTcpdumpRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ogate;
        break;
      }

      // optional uint64 ogate = 2;
      case 2: {
        if (tag == 16) {
         parse_ogate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ogate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fifo;
        break;
      }

      // optional string fifo = 3;
      case 3: {
        if (tag == 26) {
         parse_fifo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fifo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fifo().data(), this->fifo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.EnableTcpdumpRequest.fifo"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.EnableTcpdumpRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.EnableTcpdumpRequest)
  return false;
#undef DO_
}

void EnableTcpdumpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.EnableTcpdumpRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.EnableTcpdumpRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 ogate = 2;
  if (this->ogate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ogate(), output);
  }

  // optional string fifo = 3;
  if (this->fifo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fifo().data(), this->fifo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.EnableTcpdumpRequest.fifo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fifo(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.EnableTcpdumpRequest)
}

::google::protobuf::uint8* EnableTcpdumpRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.EnableTcpdumpRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.EnableTcpdumpRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 ogate = 2;
  if (this->ogate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ogate(), target);
  }

  // optional string fifo = 3;
  if (this->fifo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fifo().data(), this->fifo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.EnableTcpdumpRequest.fifo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fifo(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.EnableTcpdumpRequest)
  return target;
}

int EnableTcpdumpRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.EnableTcpdumpRequest)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint64 ogate = 2;
  if (this->ogate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ogate());
  }

  // optional string fifo = 3;
  if (this->fifo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fifo());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnableTcpdumpRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.EnableTcpdumpRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnableTcpdumpRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnableTcpdumpRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.EnableTcpdumpRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.EnableTcpdumpRequest)
    MergeFrom(*source);
  }
}

void EnableTcpdumpRequest::MergeFrom(const EnableTcpdumpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.EnableTcpdumpRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.ogate() != 0) {
    set_ogate(from.ogate());
  }
  if (from.fifo().size() > 0) {

    fifo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fifo_);
  }
}

void EnableTcpdumpRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.EnableTcpdumpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnableTcpdumpRequest::CopyFrom(const EnableTcpdumpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.EnableTcpdumpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableTcpdumpRequest::IsInitialized() const {

  return true;
}

void EnableTcpdumpRequest::Swap(EnableTcpdumpRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnableTcpdumpRequest::InternalSwap(EnableTcpdumpRequest* other) {
  name_.Swap(&other->name_);
  std::swap(ogate_, other->ogate_);
  fifo_.Swap(&other->fifo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnableTcpdumpRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnableTcpdumpRequest_descriptor_;
  metadata.reflection = EnableTcpdumpRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnableTcpdumpRequest

// optional string name = 1;
void EnableTcpdumpRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EnableTcpdumpRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.EnableTcpdumpRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EnableTcpdumpRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.EnableTcpdumpRequest.name)
}
 void EnableTcpdumpRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.EnableTcpdumpRequest.name)
}
 void EnableTcpdumpRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.EnableTcpdumpRequest.name)
}
 ::std::string* EnableTcpdumpRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.EnableTcpdumpRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EnableTcpdumpRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.EnableTcpdumpRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EnableTcpdumpRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.EnableTcpdumpRequest.name)
}

// optional uint64 ogate = 2;
void EnableTcpdumpRequest::clear_ogate() {
  ogate_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 EnableTcpdumpRequest::ogate() const {
  // @@protoc_insertion_point(field_get:bess.EnableTcpdumpRequest.ogate)
  return ogate_;
}
 void EnableTcpdumpRequest::set_ogate(::google::protobuf::uint64 value) {
  
  ogate_ = value;
  // @@protoc_insertion_point(field_set:bess.EnableTcpdumpRequest.ogate)
}

// optional string fifo = 3;
void EnableTcpdumpRequest::clear_fifo() {
  fifo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EnableTcpdumpRequest::fifo() const {
  // @@protoc_insertion_point(field_get:bess.EnableTcpdumpRequest.fifo)
  return fifo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EnableTcpdumpRequest::set_fifo(const ::std::string& value) {
  
  fifo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.EnableTcpdumpRequest.fifo)
}
 void EnableTcpdumpRequest::set_fifo(const char* value) {
  
  fifo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.EnableTcpdumpRequest.fifo)
}
 void EnableTcpdumpRequest::set_fifo(const char* value, size_t size) {
  
  fifo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.EnableTcpdumpRequest.fifo)
}
 ::std::string* EnableTcpdumpRequest::mutable_fifo() {
  
  // @@protoc_insertion_point(field_mutable:bess.EnableTcpdumpRequest.fifo)
  return fifo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EnableTcpdumpRequest::release_fifo() {
  // @@protoc_insertion_point(field_release:bess.EnableTcpdumpRequest.fifo)
  
  return fifo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EnableTcpdumpRequest::set_allocated_fifo(::std::string* fifo) {
  if (fifo != NULL) {
    
  } else {
    
  }
  fifo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fifo);
  // @@protoc_insertion_point(field_set_allocated:bess.EnableTcpdumpRequest.fifo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttachTaskRequest::kNameFieldNumber;
const int AttachTaskRequest::kTaskidFieldNumber;
const int AttachTaskRequest::kTcFieldNumber;
const int AttachTaskRequest::kWidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttachTaskRequest::AttachTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.AttachTaskRequest)
}

void AttachTaskRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AttachTaskRequest::AttachTaskRequest(const AttachTaskRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.AttachTaskRequest)
}

void AttachTaskRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskid_ = GOOGLE_ULONGLONG(0);
  tc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wid_ = GOOGLE_ULONGLONG(0);
}

AttachTaskRequest::~AttachTaskRequest() {
  // @@protoc_insertion_point(destructor:bess.AttachTaskRequest)
  SharedDtor();
}

void AttachTaskRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AttachTaskRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttachTaskRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttachTaskRequest_descriptor_;
}

const AttachTaskRequest& AttachTaskRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

AttachTaskRequest* AttachTaskRequest::default_instance_ = NULL;

AttachTaskRequest* AttachTaskRequest::New(::google::protobuf::Arena* arena) const {
  AttachTaskRequest* n = new AttachTaskRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttachTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.AttachTaskRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskid_ = GOOGLE_ULONGLONG(0);
  tc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wid_ = GOOGLE_ULONGLONG(0);
}

bool AttachTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.AttachTaskRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.AttachTaskRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_taskid;
        break;
      }

      // optional uint64 taskid = 2;
      case 2: {
        if (tag == 16) {
         parse_taskid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &taskid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tc;
        break;
      }

      // optional string tc = 3;
      case 3: {
        if (tag == 26) {
         parse_tc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tc().data(), this->tc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.AttachTaskRequest.tc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_wid;
        break;
      }

      // optional uint64 wid = 4;
      case 4: {
        if (tag == 32) {
         parse_wid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &wid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.AttachTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.AttachTaskRequest)
  return false;
#undef DO_
}

void AttachTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.AttachTaskRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.AttachTaskRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 taskid = 2;
  if (this->taskid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->taskid(), output);
  }

  // optional string tc = 3;
  if (this->tc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tc().data(), this->tc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.AttachTaskRequest.tc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tc(), output);
  }

  // optional uint64 wid = 4;
  if (this->wid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->wid(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.AttachTaskRequest)
}

::google::protobuf::uint8* AttachTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.AttachTaskRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.AttachTaskRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 taskid = 2;
  if (this->taskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->taskid(), target);
  }

  // optional string tc = 3;
  if (this->tc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tc().data(), this->tc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.AttachTaskRequest.tc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tc(), target);
  }

  // optional uint64 wid = 4;
  if (this->wid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->wid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.AttachTaskRequest)
  return target;
}

int AttachTaskRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.AttachTaskRequest)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint64 taskid = 2;
  if (this->taskid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->taskid());
  }

  // optional string tc = 3;
  if (this->tc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tc());
  }

  // optional uint64 wid = 4;
  if (this->wid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->wid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttachTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.AttachTaskRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AttachTaskRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AttachTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.AttachTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.AttachTaskRequest)
    MergeFrom(*source);
  }
}

void AttachTaskRequest::MergeFrom(const AttachTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.AttachTaskRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.taskid() != 0) {
    set_taskid(from.taskid());
  }
  if (from.tc().size() > 0) {

    tc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tc_);
  }
  if (from.wid() != 0) {
    set_wid(from.wid());
  }
}

void AttachTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.AttachTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttachTaskRequest::CopyFrom(const AttachTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.AttachTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttachTaskRequest::IsInitialized() const {

  return true;
}

void AttachTaskRequest::Swap(AttachTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttachTaskRequest::InternalSwap(AttachTaskRequest* other) {
  name_.Swap(&other->name_);
  std::swap(taskid_, other->taskid_);
  tc_.Swap(&other->tc_);
  std::swap(wid_, other->wid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttachTaskRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttachTaskRequest_descriptor_;
  metadata.reflection = AttachTaskRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttachTaskRequest

// optional string name = 1;
void AttachTaskRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AttachTaskRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.AttachTaskRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AttachTaskRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.AttachTaskRequest.name)
}
 void AttachTaskRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.AttachTaskRequest.name)
}
 void AttachTaskRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.AttachTaskRequest.name)
}
 ::std::string* AttachTaskRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.AttachTaskRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AttachTaskRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.AttachTaskRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AttachTaskRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.AttachTaskRequest.name)
}

// optional uint64 taskid = 2;
void AttachTaskRequest::clear_taskid() {
  taskid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 AttachTaskRequest::taskid() const {
  // @@protoc_insertion_point(field_get:bess.AttachTaskRequest.taskid)
  return taskid_;
}
 void AttachTaskRequest::set_taskid(::google::protobuf::uint64 value) {
  
  taskid_ = value;
  // @@protoc_insertion_point(field_set:bess.AttachTaskRequest.taskid)
}

// optional string tc = 3;
void AttachTaskRequest::clear_tc() {
  tc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AttachTaskRequest::tc() const {
  // @@protoc_insertion_point(field_get:bess.AttachTaskRequest.tc)
  return tc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AttachTaskRequest::set_tc(const ::std::string& value) {
  
  tc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.AttachTaskRequest.tc)
}
 void AttachTaskRequest::set_tc(const char* value) {
  
  tc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.AttachTaskRequest.tc)
}
 void AttachTaskRequest::set_tc(const char* value, size_t size) {
  
  tc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.AttachTaskRequest.tc)
}
 ::std::string* AttachTaskRequest::mutable_tc() {
  
  // @@protoc_insertion_point(field_mutable:bess.AttachTaskRequest.tc)
  return tc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AttachTaskRequest::release_tc() {
  // @@protoc_insertion_point(field_release:bess.AttachTaskRequest.tc)
  
  return tc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AttachTaskRequest::set_allocated_tc(::std::string* tc) {
  if (tc != NULL) {
    
  } else {
    
  }
  tc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tc);
  // @@protoc_insertion_point(field_set_allocated:bess.AttachTaskRequest.tc)
}

// optional uint64 wid = 4;
void AttachTaskRequest::clear_wid() {
  wid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 AttachTaskRequest::wid() const {
  // @@protoc_insertion_point(field_get:bess.AttachTaskRequest.wid)
  return wid_;
}
 void AttachTaskRequest::set_wid(::google::protobuf::uint64 value) {
  
  wid_ = value;
  // @@protoc_insertion_point(field_set:bess.AttachTaskRequest.wid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisconnectModulesRequest::kNameFieldNumber;
const int DisconnectModulesRequest::kOgateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisconnectModulesRequest::DisconnectModulesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.DisconnectModulesRequest)
}

void DisconnectModulesRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DisconnectModulesRequest::DisconnectModulesRequest(const DisconnectModulesRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.DisconnectModulesRequest)
}

void DisconnectModulesRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ogate_ = GOOGLE_ULONGLONG(0);
}

DisconnectModulesRequest::~DisconnectModulesRequest() {
  // @@protoc_insertion_point(destructor:bess.DisconnectModulesRequest)
  SharedDtor();
}

void DisconnectModulesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DisconnectModulesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisconnectModulesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DisconnectModulesRequest_descriptor_;
}

const DisconnectModulesRequest& DisconnectModulesRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

DisconnectModulesRequest* DisconnectModulesRequest::default_instance_ = NULL;

DisconnectModulesRequest* DisconnectModulesRequest::New(::google::protobuf::Arena* arena) const {
  DisconnectModulesRequest* n = new DisconnectModulesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisconnectModulesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.DisconnectModulesRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ogate_ = GOOGLE_ULONGLONG(0);
}

bool DisconnectModulesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.DisconnectModulesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.DisconnectModulesRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ogate;
        break;
      }

      // optional uint64 ogate = 2;
      case 2: {
        if (tag == 16) {
         parse_ogate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ogate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.DisconnectModulesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.DisconnectModulesRequest)
  return false;
#undef DO_
}

void DisconnectModulesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.DisconnectModulesRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.DisconnectModulesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 ogate = 2;
  if (this->ogate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ogate(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.DisconnectModulesRequest)
}

::google::protobuf::uint8* DisconnectModulesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.DisconnectModulesRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.DisconnectModulesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 ogate = 2;
  if (this->ogate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ogate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.DisconnectModulesRequest)
  return target;
}

int DisconnectModulesRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.DisconnectModulesRequest)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint64 ogate = 2;
  if (this->ogate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ogate());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisconnectModulesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.DisconnectModulesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DisconnectModulesRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DisconnectModulesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.DisconnectModulesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.DisconnectModulesRequest)
    MergeFrom(*source);
  }
}

void DisconnectModulesRequest::MergeFrom(const DisconnectModulesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.DisconnectModulesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.ogate() != 0) {
    set_ogate(from.ogate());
  }
}

void DisconnectModulesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.DisconnectModulesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisconnectModulesRequest::CopyFrom(const DisconnectModulesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.DisconnectModulesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisconnectModulesRequest::IsInitialized() const {

  return true;
}

void DisconnectModulesRequest::Swap(DisconnectModulesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisconnectModulesRequest::InternalSwap(DisconnectModulesRequest* other) {
  name_.Swap(&other->name_);
  std::swap(ogate_, other->ogate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisconnectModulesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DisconnectModulesRequest_descriptor_;
  metadata.reflection = DisconnectModulesRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisconnectModulesRequest

// optional string name = 1;
void DisconnectModulesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DisconnectModulesRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.DisconnectModulesRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DisconnectModulesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.DisconnectModulesRequest.name)
}
 void DisconnectModulesRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.DisconnectModulesRequest.name)
}
 void DisconnectModulesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.DisconnectModulesRequest.name)
}
 ::std::string* DisconnectModulesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.DisconnectModulesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DisconnectModulesRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.DisconnectModulesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DisconnectModulesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.DisconnectModulesRequest.name)
}

// optional uint64 ogate = 2;
void DisconnectModulesRequest::clear_ogate() {
  ogate_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DisconnectModulesRequest::ogate() const {
  // @@protoc_insertion_point(field_get:bess.DisconnectModulesRequest.ogate)
  return ogate_;
}
 void DisconnectModulesRequest::set_ogate(::google::protobuf::uint64 value) {
  
  ogate_ = value;
  // @@protoc_insertion_point(field_set:bess.DisconnectModulesRequest.ogate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectModulesRequest::kM1FieldNumber;
const int ConnectModulesRequest::kM2FieldNumber;
const int ConnectModulesRequest::kOgateFieldNumber;
const int ConnectModulesRequest::kIgateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectModulesRequest::ConnectModulesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.ConnectModulesRequest)
}

void ConnectModulesRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ConnectModulesRequest::ConnectModulesRequest(const ConnectModulesRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.ConnectModulesRequest)
}

void ConnectModulesRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  m1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  m2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ogate_ = GOOGLE_ULONGLONG(0);
  igate_ = GOOGLE_ULONGLONG(0);
}

ConnectModulesRequest::~ConnectModulesRequest() {
  // @@protoc_insertion_point(destructor:bess.ConnectModulesRequest)
  SharedDtor();
}

void ConnectModulesRequest::SharedDtor() {
  m1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  m2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ConnectModulesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectModulesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConnectModulesRequest_descriptor_;
}

const ConnectModulesRequest& ConnectModulesRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

ConnectModulesRequest* ConnectModulesRequest::default_instance_ = NULL;

ConnectModulesRequest* ConnectModulesRequest::New(::google::protobuf::Arena* arena) const {
  ConnectModulesRequest* n = new ConnectModulesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectModulesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.ConnectModulesRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ConnectModulesRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ConnectModulesRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ogate_, igate_);
  m1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  m2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ConnectModulesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.ConnectModulesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string m1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->m1().data(), this->m1().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.ConnectModulesRequest.m1"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_m2;
        break;
      }

      // optional string m2 = 2;
      case 2: {
        if (tag == 18) {
         parse_m2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->m2().data(), this->m2().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.ConnectModulesRequest.m2"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ogate;
        break;
      }

      // optional uint64 ogate = 3;
      case 3: {
        if (tag == 24) {
         parse_ogate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ogate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_igate;
        break;
      }

      // optional uint64 igate = 4;
      case 4: {
        if (tag == 32) {
         parse_igate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &igate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.ConnectModulesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.ConnectModulesRequest)
  return false;
#undef DO_
}

void ConnectModulesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.ConnectModulesRequest)
  // optional string m1 = 1;
  if (this->m1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->m1().data(), this->m1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ConnectModulesRequest.m1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->m1(), output);
  }

  // optional string m2 = 2;
  if (this->m2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->m2().data(), this->m2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ConnectModulesRequest.m2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->m2(), output);
  }

  // optional uint64 ogate = 3;
  if (this->ogate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ogate(), output);
  }

  // optional uint64 igate = 4;
  if (this->igate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->igate(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.ConnectModulesRequest)
}

::google::protobuf::uint8* ConnectModulesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.ConnectModulesRequest)
  // optional string m1 = 1;
  if (this->m1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->m1().data(), this->m1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ConnectModulesRequest.m1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->m1(), target);
  }

  // optional string m2 = 2;
  if (this->m2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->m2().data(), this->m2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ConnectModulesRequest.m2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m2(), target);
  }

  // optional uint64 ogate = 3;
  if (this->ogate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ogate(), target);
  }

  // optional uint64 igate = 4;
  if (this->igate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->igate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.ConnectModulesRequest)
  return target;
}

int ConnectModulesRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.ConnectModulesRequest)
  int total_size = 0;

  // optional string m1 = 1;
  if (this->m1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->m1());
  }

  // optional string m2 = 2;
  if (this->m2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->m2());
  }

  // optional uint64 ogate = 3;
  if (this->ogate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ogate());
  }

  // optional uint64 igate = 4;
  if (this->igate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->igate());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectModulesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.ConnectModulesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ConnectModulesRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectModulesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.ConnectModulesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.ConnectModulesRequest)
    MergeFrom(*source);
  }
}

void ConnectModulesRequest::MergeFrom(const ConnectModulesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.ConnectModulesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.m1().size() > 0) {

    m1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.m1_);
  }
  if (from.m2().size() > 0) {

    m2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.m2_);
  }
  if (from.ogate() != 0) {
    set_ogate(from.ogate());
  }
  if (from.igate() != 0) {
    set_igate(from.igate());
  }
}

void ConnectModulesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.ConnectModulesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectModulesRequest::CopyFrom(const ConnectModulesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.ConnectModulesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectModulesRequest::IsInitialized() const {

  return true;
}

void ConnectModulesRequest::Swap(ConnectModulesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectModulesRequest::InternalSwap(ConnectModulesRequest* other) {
  m1_.Swap(&other->m1_);
  m2_.Swap(&other->m2_);
  std::swap(ogate_, other->ogate_);
  std::swap(igate_, other->igate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectModulesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConnectModulesRequest_descriptor_;
  metadata.reflection = ConnectModulesRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectModulesRequest

// optional string m1 = 1;
void ConnectModulesRequest::clear_m1() {
  m1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ConnectModulesRequest::m1() const {
  // @@protoc_insertion_point(field_get:bess.ConnectModulesRequest.m1)
  return m1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConnectModulesRequest::set_m1(const ::std::string& value) {
  
  m1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.ConnectModulesRequest.m1)
}
 void ConnectModulesRequest::set_m1(const char* value) {
  
  m1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.ConnectModulesRequest.m1)
}
 void ConnectModulesRequest::set_m1(const char* value, size_t size) {
  
  m1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.ConnectModulesRequest.m1)
}
 ::std::string* ConnectModulesRequest::mutable_m1() {
  
  // @@protoc_insertion_point(field_mutable:bess.ConnectModulesRequest.m1)
  return m1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConnectModulesRequest::release_m1() {
  // @@protoc_insertion_point(field_release:bess.ConnectModulesRequest.m1)
  
  return m1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConnectModulesRequest::set_allocated_m1(::std::string* m1) {
  if (m1 != NULL) {
    
  } else {
    
  }
  m1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m1);
  // @@protoc_insertion_point(field_set_allocated:bess.ConnectModulesRequest.m1)
}

// optional string m2 = 2;
void ConnectModulesRequest::clear_m2() {
  m2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ConnectModulesRequest::m2() const {
  // @@protoc_insertion_point(field_get:bess.ConnectModulesRequest.m2)
  return m2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConnectModulesRequest::set_m2(const ::std::string& value) {
  
  m2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.ConnectModulesRequest.m2)
}
 void ConnectModulesRequest::set_m2(const char* value) {
  
  m2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.ConnectModulesRequest.m2)
}
 void ConnectModulesRequest::set_m2(const char* value, size_t size) {
  
  m2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.ConnectModulesRequest.m2)
}
 ::std::string* ConnectModulesRequest::mutable_m2() {
  
  // @@protoc_insertion_point(field_mutable:bess.ConnectModulesRequest.m2)
  return m2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConnectModulesRequest::release_m2() {
  // @@protoc_insertion_point(field_release:bess.ConnectModulesRequest.m2)
  
  return m2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConnectModulesRequest::set_allocated_m2(::std::string* m2) {
  if (m2 != NULL) {
    
  } else {
    
  }
  m2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m2);
  // @@protoc_insertion_point(field_set_allocated:bess.ConnectModulesRequest.m2)
}

// optional uint64 ogate = 3;
void ConnectModulesRequest::clear_ogate() {
  ogate_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ConnectModulesRequest::ogate() const {
  // @@protoc_insertion_point(field_get:bess.ConnectModulesRequest.ogate)
  return ogate_;
}
 void ConnectModulesRequest::set_ogate(::google::protobuf::uint64 value) {
  
  ogate_ = value;
  // @@protoc_insertion_point(field_set:bess.ConnectModulesRequest.ogate)
}

// optional uint64 igate = 4;
void ConnectModulesRequest::clear_igate() {
  igate_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ConnectModulesRequest::igate() const {
  // @@protoc_insertion_point(field_get:bess.ConnectModulesRequest.igate)
  return igate_;
}
 void ConnectModulesRequest::set_igate(::google::protobuf::uint64 value) {
  
  igate_ = value;
  // @@protoc_insertion_point(field_set:bess.ConnectModulesRequest.igate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetModuleInfoResponse_IGate_OGate::kOgateFieldNumber;
const int GetModuleInfoResponse_IGate_OGate::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetModuleInfoResponse_IGate_OGate::GetModuleInfoResponse_IGate_OGate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetModuleInfoResponse.IGate.OGate)
}

void GetModuleInfoResponse_IGate_OGate::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetModuleInfoResponse_IGate_OGate::GetModuleInfoResponse_IGate_OGate(const GetModuleInfoResponse_IGate_OGate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetModuleInfoResponse.IGate.OGate)
}

void GetModuleInfoResponse_IGate_OGate::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ogate_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetModuleInfoResponse_IGate_OGate::~GetModuleInfoResponse_IGate_OGate() {
  // @@protoc_insertion_point(destructor:bess.GetModuleInfoResponse.IGate.OGate)
  SharedDtor();
}

void GetModuleInfoResponse_IGate_OGate::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetModuleInfoResponse_IGate_OGate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetModuleInfoResponse_IGate_OGate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetModuleInfoResponse_IGate_OGate_descriptor_;
}

const GetModuleInfoResponse_IGate_OGate& GetModuleInfoResponse_IGate_OGate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetModuleInfoResponse_IGate_OGate* GetModuleInfoResponse_IGate_OGate::default_instance_ = NULL;

GetModuleInfoResponse_IGate_OGate* GetModuleInfoResponse_IGate_OGate::New(::google::protobuf::Arena* arena) const {
  GetModuleInfoResponse_IGate_OGate* n = new GetModuleInfoResponse_IGate_OGate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetModuleInfoResponse_IGate_OGate::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetModuleInfoResponse.IGate.OGate)
  ogate_ = GOOGLE_ULONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetModuleInfoResponse_IGate_OGate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetModuleInfoResponse.IGate.OGate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ogate = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ogate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetModuleInfoResponse.IGate.OGate.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetModuleInfoResponse.IGate.OGate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetModuleInfoResponse.IGate.OGate)
  return false;
#undef DO_
}

void GetModuleInfoResponse_IGate_OGate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetModuleInfoResponse.IGate.OGate)
  // optional uint64 ogate = 1;
  if (this->ogate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ogate(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.IGate.OGate.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetModuleInfoResponse.IGate.OGate)
}

::google::protobuf::uint8* GetModuleInfoResponse_IGate_OGate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetModuleInfoResponse.IGate.OGate)
  // optional uint64 ogate = 1;
  if (this->ogate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ogate(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.IGate.OGate.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetModuleInfoResponse.IGate.OGate)
  return target;
}

int GetModuleInfoResponse_IGate_OGate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetModuleInfoResponse.IGate.OGate)
  int total_size = 0;

  // optional uint64 ogate = 1;
  if (this->ogate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ogate());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetModuleInfoResponse_IGate_OGate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetModuleInfoResponse.IGate.OGate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetModuleInfoResponse_IGate_OGate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetModuleInfoResponse_IGate_OGate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetModuleInfoResponse.IGate.OGate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetModuleInfoResponse.IGate.OGate)
    MergeFrom(*source);
  }
}

void GetModuleInfoResponse_IGate_OGate::MergeFrom(const GetModuleInfoResponse_IGate_OGate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetModuleInfoResponse.IGate.OGate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.ogate() != 0) {
    set_ogate(from.ogate());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetModuleInfoResponse_IGate_OGate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetModuleInfoResponse.IGate.OGate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetModuleInfoResponse_IGate_OGate::CopyFrom(const GetModuleInfoResponse_IGate_OGate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetModuleInfoResponse.IGate.OGate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModuleInfoResponse_IGate_OGate::IsInitialized() const {

  return true;
}

void GetModuleInfoResponse_IGate_OGate::Swap(GetModuleInfoResponse_IGate_OGate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetModuleInfoResponse_IGate_OGate::InternalSwap(GetModuleInfoResponse_IGate_OGate* other) {
  std::swap(ogate_, other->ogate_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetModuleInfoResponse_IGate_OGate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetModuleInfoResponse_IGate_OGate_descriptor_;
  metadata.reflection = GetModuleInfoResponse_IGate_OGate_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetModuleInfoResponse_IGate::kIgateFieldNumber;
const int GetModuleInfoResponse_IGate::kOgatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetModuleInfoResponse_IGate::GetModuleInfoResponse_IGate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetModuleInfoResponse.IGate)
}

void GetModuleInfoResponse_IGate::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetModuleInfoResponse_IGate::GetModuleInfoResponse_IGate(const GetModuleInfoResponse_IGate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetModuleInfoResponse.IGate)
}

void GetModuleInfoResponse_IGate::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  igate_ = GOOGLE_ULONGLONG(0);
}

GetModuleInfoResponse_IGate::~GetModuleInfoResponse_IGate() {
  // @@protoc_insertion_point(destructor:bess.GetModuleInfoResponse.IGate)
  SharedDtor();
}

void GetModuleInfoResponse_IGate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetModuleInfoResponse_IGate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetModuleInfoResponse_IGate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetModuleInfoResponse_IGate_descriptor_;
}

const GetModuleInfoResponse_IGate& GetModuleInfoResponse_IGate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetModuleInfoResponse_IGate* GetModuleInfoResponse_IGate::default_instance_ = NULL;

GetModuleInfoResponse_IGate* GetModuleInfoResponse_IGate::New(::google::protobuf::Arena* arena) const {
  GetModuleInfoResponse_IGate* n = new GetModuleInfoResponse_IGate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetModuleInfoResponse_IGate::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetModuleInfoResponse.IGate)
  igate_ = GOOGLE_ULONGLONG(0);
  ogates_.Clear();
}

bool GetModuleInfoResponse_IGate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetModuleInfoResponse.IGate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 igate = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &igate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ogates;
        break;
      }

      // repeated .bess.GetModuleInfoResponse.IGate.OGate ogates = 2;
      case 2: {
        if (tag == 18) {
         parse_ogates:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ogates:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ogates()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_ogates;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetModuleInfoResponse.IGate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetModuleInfoResponse.IGate)
  return false;
#undef DO_
}

void GetModuleInfoResponse_IGate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetModuleInfoResponse.IGate)
  // optional uint64 igate = 1;
  if (this->igate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->igate(), output);
  }

  // repeated .bess.GetModuleInfoResponse.IGate.OGate ogates = 2;
  for (unsigned int i = 0, n = this->ogates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->ogates(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetModuleInfoResponse.IGate)
}

::google::protobuf::uint8* GetModuleInfoResponse_IGate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetModuleInfoResponse.IGate)
  // optional uint64 igate = 1;
  if (this->igate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->igate(), target);
  }

  // repeated .bess.GetModuleInfoResponse.IGate.OGate ogates = 2;
  for (unsigned int i = 0, n = this->ogates_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->ogates(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetModuleInfoResponse.IGate)
  return target;
}

int GetModuleInfoResponse_IGate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetModuleInfoResponse.IGate)
  int total_size = 0;

  // optional uint64 igate = 1;
  if (this->igate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->igate());
  }

  // repeated .bess.GetModuleInfoResponse.IGate.OGate ogates = 2;
  total_size += 1 * this->ogates_size();
  for (int i = 0; i < this->ogates_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ogates(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetModuleInfoResponse_IGate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetModuleInfoResponse.IGate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetModuleInfoResponse_IGate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetModuleInfoResponse_IGate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetModuleInfoResponse.IGate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetModuleInfoResponse.IGate)
    MergeFrom(*source);
  }
}

void GetModuleInfoResponse_IGate::MergeFrom(const GetModuleInfoResponse_IGate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetModuleInfoResponse.IGate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ogates_.MergeFrom(from.ogates_);
  if (from.igate() != 0) {
    set_igate(from.igate());
  }
}

void GetModuleInfoResponse_IGate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetModuleInfoResponse.IGate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetModuleInfoResponse_IGate::CopyFrom(const GetModuleInfoResponse_IGate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetModuleInfoResponse.IGate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModuleInfoResponse_IGate::IsInitialized() const {

  return true;
}

void GetModuleInfoResponse_IGate::Swap(GetModuleInfoResponse_IGate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetModuleInfoResponse_IGate::InternalSwap(GetModuleInfoResponse_IGate* other) {
  std::swap(igate_, other->igate_);
  ogates_.UnsafeArenaSwap(&other->ogates_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetModuleInfoResponse_IGate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetModuleInfoResponse_IGate_descriptor_;
  metadata.reflection = GetModuleInfoResponse_IGate_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetModuleInfoResponse_OGate::kOgateFieldNumber;
const int GetModuleInfoResponse_OGate::kCntFieldNumber;
const int GetModuleInfoResponse_OGate::kPktsFieldNumber;
const int GetModuleInfoResponse_OGate::kTimestampFieldNumber;
const int GetModuleInfoResponse_OGate::kNameFieldNumber;
const int GetModuleInfoResponse_OGate::kIgateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetModuleInfoResponse_OGate::GetModuleInfoResponse_OGate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetModuleInfoResponse.OGate)
}

void GetModuleInfoResponse_OGate::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetModuleInfoResponse_OGate::GetModuleInfoResponse_OGate(const GetModuleInfoResponse_OGate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetModuleInfoResponse.OGate)
}

void GetModuleInfoResponse_OGate::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ogate_ = GOOGLE_ULONGLONG(0);
  cnt_ = GOOGLE_ULONGLONG(0);
  pkts_ = GOOGLE_ULONGLONG(0);
  timestamp_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  igate_ = GOOGLE_ULONGLONG(0);
}

GetModuleInfoResponse_OGate::~GetModuleInfoResponse_OGate() {
  // @@protoc_insertion_point(destructor:bess.GetModuleInfoResponse.OGate)
  SharedDtor();
}

void GetModuleInfoResponse_OGate::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetModuleInfoResponse_OGate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetModuleInfoResponse_OGate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetModuleInfoResponse_OGate_descriptor_;
}

const GetModuleInfoResponse_OGate& GetModuleInfoResponse_OGate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetModuleInfoResponse_OGate* GetModuleInfoResponse_OGate::default_instance_ = NULL;

GetModuleInfoResponse_OGate* GetModuleInfoResponse_OGate::New(::google::protobuf::Arena* arena) const {
  GetModuleInfoResponse_OGate* n = new GetModuleInfoResponse_OGate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetModuleInfoResponse_OGate::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetModuleInfoResponse.OGate)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetModuleInfoResponse_OGate, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetModuleInfoResponse_OGate*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ogate_, timestamp_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  igate_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

}

bool GetModuleInfoResponse_OGate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetModuleInfoResponse.OGate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ogate = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ogate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cnt;
        break;
      }

      // optional uint64 cnt = 2;
      case 2: {
        if (tag == 16) {
         parse_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cnt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pkts;
        break;
      }

      // optional uint64 pkts = 3;
      case 3: {
        if (tag == 24) {
         parse_pkts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pkts_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_timestamp;
        break;
      }

      // optional double timestamp = 4;
      case 4: {
        if (tag == 33) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // optional string name = 5;
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetModuleInfoResponse.OGate.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_igate;
        break;
      }

      // optional uint64 igate = 6;
      case 6: {
        if (tag == 48) {
         parse_igate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &igate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetModuleInfoResponse.OGate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetModuleInfoResponse.OGate)
  return false;
#undef DO_
}

void GetModuleInfoResponse_OGate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetModuleInfoResponse.OGate)
  // optional uint64 ogate = 1;
  if (this->ogate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ogate(), output);
  }

  // optional uint64 cnt = 2;
  if (this->cnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->cnt(), output);
  }

  // optional uint64 pkts = 3;
  if (this->pkts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->pkts(), output);
  }

  // optional double timestamp = 4;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->timestamp(), output);
  }

  // optional string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.OGate.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // optional uint64 igate = 6;
  if (this->igate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->igate(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetModuleInfoResponse.OGate)
}

::google::protobuf::uint8* GetModuleInfoResponse_OGate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetModuleInfoResponse.OGate)
  // optional uint64 ogate = 1;
  if (this->ogate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ogate(), target);
  }

  // optional uint64 cnt = 2;
  if (this->cnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->cnt(), target);
  }

  // optional uint64 pkts = 3;
  if (this->pkts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->pkts(), target);
  }

  // optional double timestamp = 4;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->timestamp(), target);
  }

  // optional string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.OGate.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // optional uint64 igate = 6;
  if (this->igate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->igate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetModuleInfoResponse.OGate)
  return target;
}

int GetModuleInfoResponse_OGate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetModuleInfoResponse.OGate)
  int total_size = 0;

  // optional uint64 ogate = 1;
  if (this->ogate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ogate());
  }

  // optional uint64 cnt = 2;
  if (this->cnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cnt());
  }

  // optional uint64 pkts = 3;
  if (this->pkts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pkts());
  }

  // optional double timestamp = 4;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // optional string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint64 igate = 6;
  if (this->igate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->igate());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetModuleInfoResponse_OGate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetModuleInfoResponse.OGate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetModuleInfoResponse_OGate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetModuleInfoResponse_OGate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetModuleInfoResponse.OGate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetModuleInfoResponse.OGate)
    MergeFrom(*source);
  }
}

void GetModuleInfoResponse_OGate::MergeFrom(const GetModuleInfoResponse_OGate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetModuleInfoResponse.OGate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.ogate() != 0) {
    set_ogate(from.ogate());
  }
  if (from.cnt() != 0) {
    set_cnt(from.cnt());
  }
  if (from.pkts() != 0) {
    set_pkts(from.pkts());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.igate() != 0) {
    set_igate(from.igate());
  }
}

void GetModuleInfoResponse_OGate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetModuleInfoResponse.OGate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetModuleInfoResponse_OGate::CopyFrom(const GetModuleInfoResponse_OGate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetModuleInfoResponse.OGate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModuleInfoResponse_OGate::IsInitialized() const {

  return true;
}

void GetModuleInfoResponse_OGate::Swap(GetModuleInfoResponse_OGate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetModuleInfoResponse_OGate::InternalSwap(GetModuleInfoResponse_OGate* other) {
  std::swap(ogate_, other->ogate_);
  std::swap(cnt_, other->cnt_);
  std::swap(pkts_, other->pkts_);
  std::swap(timestamp_, other->timestamp_);
  name_.Swap(&other->name_);
  std::swap(igate_, other->igate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetModuleInfoResponse_OGate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetModuleInfoResponse_OGate_descriptor_;
  metadata.reflection = GetModuleInfoResponse_OGate_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetModuleInfoResponse_Attribute::kNameFieldNumber;
const int GetModuleInfoResponse_Attribute::kSizeFieldNumber;
const int GetModuleInfoResponse_Attribute::kModeFieldNumber;
const int GetModuleInfoResponse_Attribute::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetModuleInfoResponse_Attribute::GetModuleInfoResponse_Attribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetModuleInfoResponse.Attribute)
}

void GetModuleInfoResponse_Attribute::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetModuleInfoResponse_Attribute::GetModuleInfoResponse_Attribute(const GetModuleInfoResponse_Attribute& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetModuleInfoResponse.Attribute)
}

void GetModuleInfoResponse_Attribute::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_ULONGLONG(0);
  mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = GOOGLE_LONGLONG(0);
}

GetModuleInfoResponse_Attribute::~GetModuleInfoResponse_Attribute() {
  // @@protoc_insertion_point(destructor:bess.GetModuleInfoResponse.Attribute)
  SharedDtor();
}

void GetModuleInfoResponse_Attribute::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetModuleInfoResponse_Attribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetModuleInfoResponse_Attribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetModuleInfoResponse_Attribute_descriptor_;
}

const GetModuleInfoResponse_Attribute& GetModuleInfoResponse_Attribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetModuleInfoResponse_Attribute* GetModuleInfoResponse_Attribute::default_instance_ = NULL;

GetModuleInfoResponse_Attribute* GetModuleInfoResponse_Attribute::New(::google::protobuf::Arena* arena) const {
  GetModuleInfoResponse_Attribute* n = new GetModuleInfoResponse_Attribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetModuleInfoResponse_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetModuleInfoResponse.Attribute)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_ULONGLONG(0);
  mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = GOOGLE_LONGLONG(0);
}

bool GetModuleInfoResponse_Attribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetModuleInfoResponse.Attribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetModuleInfoResponse.Attribute.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // optional uint64 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mode;
        break;
      }

      // optional string mode = 3;
      case 3: {
        if (tag == 26) {
         parse_mode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mode().data(), this->mode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetModuleInfoResponse.Attribute.mode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_offset;
        break;
      }

      // optional int64 offset = 4;
      case 4: {
        if (tag == 32) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetModuleInfoResponse.Attribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetModuleInfoResponse.Attribute)
  return false;
#undef DO_
}

void GetModuleInfoResponse_Attribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetModuleInfoResponse.Attribute)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.Attribute.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size(), output);
  }

  // optional string mode = 3;
  if (this->mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mode().data(), this->mode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.Attribute.mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mode(), output);
  }

  // optional int64 offset = 4;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->offset(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetModuleInfoResponse.Attribute)
}

::google::protobuf::uint8* GetModuleInfoResponse_Attribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetModuleInfoResponse.Attribute)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.Attribute.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->size(), target);
  }

  // optional string mode = 3;
  if (this->mode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mode().data(), this->mode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.Attribute.mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mode(), target);
  }

  // optional int64 offset = 4;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->offset(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetModuleInfoResponse.Attribute)
  return target;
}

int GetModuleInfoResponse_Attribute::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetModuleInfoResponse.Attribute)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  // optional string mode = 3;
  if (this->mode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mode());
  }

  // optional int64 offset = 4;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetModuleInfoResponse_Attribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetModuleInfoResponse.Attribute)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetModuleInfoResponse_Attribute* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetModuleInfoResponse_Attribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetModuleInfoResponse.Attribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetModuleInfoResponse.Attribute)
    MergeFrom(*source);
  }
}

void GetModuleInfoResponse_Attribute::MergeFrom(const GetModuleInfoResponse_Attribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetModuleInfoResponse.Attribute)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.mode().size() > 0) {

    mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mode_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void GetModuleInfoResponse_Attribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetModuleInfoResponse.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetModuleInfoResponse_Attribute::CopyFrom(const GetModuleInfoResponse_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetModuleInfoResponse.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModuleInfoResponse_Attribute::IsInitialized() const {

  return true;
}

void GetModuleInfoResponse_Attribute::Swap(GetModuleInfoResponse_Attribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetModuleInfoResponse_Attribute::InternalSwap(GetModuleInfoResponse_Attribute* other) {
  name_.Swap(&other->name_);
  std::swap(size_, other->size_);
  mode_.Swap(&other->mode_);
  std::swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetModuleInfoResponse_Attribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetModuleInfoResponse_Attribute_descriptor_;
  metadata.reflection = GetModuleInfoResponse_Attribute_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetModuleInfoResponse::kNameFieldNumber;
const int GetModuleInfoResponse::kMclassFieldNumber;
const int GetModuleInfoResponse::kDescFieldNumber;
const int GetModuleInfoResponse::kIgatesFieldNumber;
const int GetModuleInfoResponse::kOgatesFieldNumber;
const int GetModuleInfoResponse::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetModuleInfoResponse::GetModuleInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetModuleInfoResponse)
}

void GetModuleInfoResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetModuleInfoResponse::GetModuleInfoResponse(const GetModuleInfoResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetModuleInfoResponse)
}

void GetModuleInfoResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mclass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetModuleInfoResponse::~GetModuleInfoResponse() {
  // @@protoc_insertion_point(destructor:bess.GetModuleInfoResponse)
  SharedDtor();
}

void GetModuleInfoResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mclass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetModuleInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetModuleInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetModuleInfoResponse_descriptor_;
}

const GetModuleInfoResponse& GetModuleInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetModuleInfoResponse* GetModuleInfoResponse::default_instance_ = NULL;

GetModuleInfoResponse* GetModuleInfoResponse::New(::google::protobuf::Arena* arena) const {
  GetModuleInfoResponse* n = new GetModuleInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetModuleInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetModuleInfoResponse)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mclass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  igates_.Clear();
  ogates_.Clear();
  metadata_.Clear();
}

bool GetModuleInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetModuleInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetModuleInfoResponse.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mclass;
        break;
      }

      // optional string mclass = 2;
      case 2: {
        if (tag == 18) {
         parse_mclass:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mclass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mclass().data(), this->mclass().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetModuleInfoResponse.mclass"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_desc;
        break;
      }

      // optional string desc = 3;
      case 3: {
        if (tag == 26) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetModuleInfoResponse.desc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_igates;
        break;
      }

      // repeated .bess.GetModuleInfoResponse.IGate igates = 5;
      case 5: {
        if (tag == 42) {
         parse_igates:
          DO_(input->IncrementRecursionDepth());
         parse_loop_igates:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_igates()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_igates;
        if (input->ExpectTag(50)) goto parse_loop_ogates;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .bess.GetModuleInfoResponse.OGate ogates = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ogates:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ogates()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_ogates;
        if (input->ExpectTag(58)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .bess.GetModuleInfoResponse.Attribute metadata = 7;
      case 7: {
        if (tag == 58) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetModuleInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetModuleInfoResponse)
  return false;
#undef DO_
}

void GetModuleInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetModuleInfoResponse)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string mclass = 2;
  if (this->mclass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mclass().data(), this->mclass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.mclass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mclass(), output);
  }

  // optional string desc = 3;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->desc(), output);
  }

  // repeated .bess.GetModuleInfoResponse.IGate igates = 5;
  for (unsigned int i = 0, n = this->igates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->igates(i), output);
  }

  // repeated .bess.GetModuleInfoResponse.OGate ogates = 6;
  for (unsigned int i = 0, n = this->ogates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->ogates(i), output);
  }

  // repeated .bess.GetModuleInfoResponse.Attribute metadata = 7;
  for (unsigned int i = 0, n = this->metadata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->metadata(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetModuleInfoResponse)
}

::google::protobuf::uint8* GetModuleInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetModuleInfoResponse)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string mclass = 2;
  if (this->mclass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mclass().data(), this->mclass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.mclass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mclass(), target);
  }

  // optional string desc = 3;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoResponse.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->desc(), target);
  }

  // repeated .bess.GetModuleInfoResponse.IGate igates = 5;
  for (unsigned int i = 0, n = this->igates_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->igates(i), false, target);
  }

  // repeated .bess.GetModuleInfoResponse.OGate ogates = 6;
  for (unsigned int i = 0, n = this->ogates_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->ogates(i), false, target);
  }

  // repeated .bess.GetModuleInfoResponse.Attribute metadata = 7;
  for (unsigned int i = 0, n = this->metadata_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->metadata(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetModuleInfoResponse)
  return target;
}

int GetModuleInfoResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetModuleInfoResponse)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string mclass = 2;
  if (this->mclass().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mclass());
  }

  // optional string desc = 3;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // repeated .bess.GetModuleInfoResponse.IGate igates = 5;
  total_size += 1 * this->igates_size();
  for (int i = 0; i < this->igates_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->igates(i));
  }

  // repeated .bess.GetModuleInfoResponse.OGate ogates = 6;
  total_size += 1 * this->ogates_size();
  for (int i = 0; i < this->ogates_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ogates(i));
  }

  // repeated .bess.GetModuleInfoResponse.Attribute metadata = 7;
  total_size += 1 * this->metadata_size();
  for (int i = 0; i < this->metadata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->metadata(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetModuleInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetModuleInfoResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetModuleInfoResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetModuleInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetModuleInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetModuleInfoResponse)
    MergeFrom(*source);
  }
}

void GetModuleInfoResponse::MergeFrom(const GetModuleInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetModuleInfoResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  igates_.MergeFrom(from.igates_);
  ogates_.MergeFrom(from.ogates_);
  metadata_.MergeFrom(from.metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mclass().size() > 0) {

    mclass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mclass_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
}

void GetModuleInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetModuleInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetModuleInfoResponse::CopyFrom(const GetModuleInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetModuleInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModuleInfoResponse::IsInitialized() const {

  return true;
}

void GetModuleInfoResponse::Swap(GetModuleInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetModuleInfoResponse::InternalSwap(GetModuleInfoResponse* other) {
  name_.Swap(&other->name_);
  mclass_.Swap(&other->mclass_);
  desc_.Swap(&other->desc_);
  igates_.UnsafeArenaSwap(&other->igates_);
  ogates_.UnsafeArenaSwap(&other->ogates_);
  metadata_.UnsafeArenaSwap(&other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetModuleInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetModuleInfoResponse_descriptor_;
  metadata.reflection = GetModuleInfoResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetModuleInfoResponse_IGate_OGate

// optional uint64 ogate = 1;
void GetModuleInfoResponse_IGate_OGate::clear_ogate() {
  ogate_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetModuleInfoResponse_IGate_OGate::ogate() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.IGate.OGate.ogate)
  return ogate_;
}
 void GetModuleInfoResponse_IGate_OGate::set_ogate(::google::protobuf::uint64 value) {
  
  ogate_ = value;
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.IGate.OGate.ogate)
}

// optional string name = 2;
void GetModuleInfoResponse_IGate_OGate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetModuleInfoResponse_IGate_OGate::name() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.IGate.OGate.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse_IGate_OGate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.IGate.OGate.name)
}
 void GetModuleInfoResponse_IGate_OGate::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetModuleInfoResponse.IGate.OGate.name)
}
 void GetModuleInfoResponse_IGate_OGate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetModuleInfoResponse.IGate.OGate.name)
}
 ::std::string* GetModuleInfoResponse_IGate_OGate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetModuleInfoResponse.IGate.OGate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetModuleInfoResponse_IGate_OGate::release_name() {
  // @@protoc_insertion_point(field_release:bess.GetModuleInfoResponse.IGate.OGate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse_IGate_OGate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.GetModuleInfoResponse.IGate.OGate.name)
}

// -------------------------------------------------------------------

// GetModuleInfoResponse_IGate

// optional uint64 igate = 1;
void GetModuleInfoResponse_IGate::clear_igate() {
  igate_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetModuleInfoResponse_IGate::igate() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.IGate.igate)
  return igate_;
}
 void GetModuleInfoResponse_IGate::set_igate(::google::protobuf::uint64 value) {
  
  igate_ = value;
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.IGate.igate)
}

// repeated .bess.GetModuleInfoResponse.IGate.OGate ogates = 2;
int GetModuleInfoResponse_IGate::ogates_size() const {
  return ogates_.size();
}
void GetModuleInfoResponse_IGate::clear_ogates() {
  ogates_.Clear();
}
const ::bess::GetModuleInfoResponse_IGate_OGate& GetModuleInfoResponse_IGate::ogates(int index) const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.IGate.ogates)
  return ogates_.Get(index);
}
::bess::GetModuleInfoResponse_IGate_OGate* GetModuleInfoResponse_IGate::mutable_ogates(int index) {
  // @@protoc_insertion_point(field_mutable:bess.GetModuleInfoResponse.IGate.ogates)
  return ogates_.Mutable(index);
}
::bess::GetModuleInfoResponse_IGate_OGate* GetModuleInfoResponse_IGate::add_ogates() {
  // @@protoc_insertion_point(field_add:bess.GetModuleInfoResponse.IGate.ogates)
  return ogates_.Add();
}
::google::protobuf::RepeatedPtrField< ::bess::GetModuleInfoResponse_IGate_OGate >*
GetModuleInfoResponse_IGate::mutable_ogates() {
  // @@protoc_insertion_point(field_mutable_list:bess.GetModuleInfoResponse.IGate.ogates)
  return &ogates_;
}
const ::google::protobuf::RepeatedPtrField< ::bess::GetModuleInfoResponse_IGate_OGate >&
GetModuleInfoResponse_IGate::ogates() const {
  // @@protoc_insertion_point(field_list:bess.GetModuleInfoResponse.IGate.ogates)
  return ogates_;
}

// -------------------------------------------------------------------

// GetModuleInfoResponse_OGate

// optional uint64 ogate = 1;
void GetModuleInfoResponse_OGate::clear_ogate() {
  ogate_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetModuleInfoResponse_OGate::ogate() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.OGate.ogate)
  return ogate_;
}
 void GetModuleInfoResponse_OGate::set_ogate(::google::protobuf::uint64 value) {
  
  ogate_ = value;
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.OGate.ogate)
}

// optional uint64 cnt = 2;
void GetModuleInfoResponse_OGate::clear_cnt() {
  cnt_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetModuleInfoResponse_OGate::cnt() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.OGate.cnt)
  return cnt_;
}
 void GetModuleInfoResponse_OGate::set_cnt(::google::protobuf::uint64 value) {
  
  cnt_ = value;
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.OGate.cnt)
}

// optional uint64 pkts = 3;
void GetModuleInfoResponse_OGate::clear_pkts() {
  pkts_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetModuleInfoResponse_OGate::pkts() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.OGate.pkts)
  return pkts_;
}
 void GetModuleInfoResponse_OGate::set_pkts(::google::protobuf::uint64 value) {
  
  pkts_ = value;
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.OGate.pkts)
}

// optional double timestamp = 4;
void GetModuleInfoResponse_OGate::clear_timestamp() {
  timestamp_ = 0;
}
 double GetModuleInfoResponse_OGate::timestamp() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.OGate.timestamp)
  return timestamp_;
}
 void GetModuleInfoResponse_OGate::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.OGate.timestamp)
}

// optional string name = 5;
void GetModuleInfoResponse_OGate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetModuleInfoResponse_OGate::name() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.OGate.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse_OGate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.OGate.name)
}
 void GetModuleInfoResponse_OGate::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetModuleInfoResponse.OGate.name)
}
 void GetModuleInfoResponse_OGate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetModuleInfoResponse.OGate.name)
}
 ::std::string* GetModuleInfoResponse_OGate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetModuleInfoResponse.OGate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetModuleInfoResponse_OGate::release_name() {
  // @@protoc_insertion_point(field_release:bess.GetModuleInfoResponse.OGate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse_OGate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.GetModuleInfoResponse.OGate.name)
}

// optional uint64 igate = 6;
void GetModuleInfoResponse_OGate::clear_igate() {
  igate_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetModuleInfoResponse_OGate::igate() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.OGate.igate)
  return igate_;
}
 void GetModuleInfoResponse_OGate::set_igate(::google::protobuf::uint64 value) {
  
  igate_ = value;
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.OGate.igate)
}

// -------------------------------------------------------------------

// GetModuleInfoResponse_Attribute

// optional string name = 1;
void GetModuleInfoResponse_Attribute::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetModuleInfoResponse_Attribute::name() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.Attribute.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse_Attribute::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.Attribute.name)
}
 void GetModuleInfoResponse_Attribute::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetModuleInfoResponse.Attribute.name)
}
 void GetModuleInfoResponse_Attribute::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetModuleInfoResponse.Attribute.name)
}
 ::std::string* GetModuleInfoResponse_Attribute::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetModuleInfoResponse.Attribute.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetModuleInfoResponse_Attribute::release_name() {
  // @@protoc_insertion_point(field_release:bess.GetModuleInfoResponse.Attribute.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse_Attribute::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.GetModuleInfoResponse.Attribute.name)
}

// optional uint64 size = 2;
void GetModuleInfoResponse_Attribute::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetModuleInfoResponse_Attribute::size() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.Attribute.size)
  return size_;
}
 void GetModuleInfoResponse_Attribute::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.Attribute.size)
}

// optional string mode = 3;
void GetModuleInfoResponse_Attribute::clear_mode() {
  mode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetModuleInfoResponse_Attribute::mode() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.Attribute.mode)
  return mode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse_Attribute::set_mode(const ::std::string& value) {
  
  mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.Attribute.mode)
}
 void GetModuleInfoResponse_Attribute::set_mode(const char* value) {
  
  mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetModuleInfoResponse.Attribute.mode)
}
 void GetModuleInfoResponse_Attribute::set_mode(const char* value, size_t size) {
  
  mode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetModuleInfoResponse.Attribute.mode)
}
 ::std::string* GetModuleInfoResponse_Attribute::mutable_mode() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetModuleInfoResponse.Attribute.mode)
  return mode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetModuleInfoResponse_Attribute::release_mode() {
  // @@protoc_insertion_point(field_release:bess.GetModuleInfoResponse.Attribute.mode)
  
  return mode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse_Attribute::set_allocated_mode(::std::string* mode) {
  if (mode != NULL) {
    
  } else {
    
  }
  mode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mode);
  // @@protoc_insertion_point(field_set_allocated:bess.GetModuleInfoResponse.Attribute.mode)
}

// optional int64 offset = 4;
void GetModuleInfoResponse_Attribute::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 GetModuleInfoResponse_Attribute::offset() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.Attribute.offset)
  return offset_;
}
 void GetModuleInfoResponse_Attribute::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.Attribute.offset)
}

// -------------------------------------------------------------------

// GetModuleInfoResponse

// optional string name = 1;
void GetModuleInfoResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetModuleInfoResponse::name() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.name)
}
 void GetModuleInfoResponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetModuleInfoResponse.name)
}
 void GetModuleInfoResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetModuleInfoResponse.name)
}
 ::std::string* GetModuleInfoResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetModuleInfoResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetModuleInfoResponse::release_name() {
  // @@protoc_insertion_point(field_release:bess.GetModuleInfoResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.GetModuleInfoResponse.name)
}

// optional string mclass = 2;
void GetModuleInfoResponse::clear_mclass() {
  mclass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetModuleInfoResponse::mclass() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.mclass)
  return mclass_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse::set_mclass(const ::std::string& value) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.mclass)
}
 void GetModuleInfoResponse::set_mclass(const char* value) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetModuleInfoResponse.mclass)
}
 void GetModuleInfoResponse::set_mclass(const char* value, size_t size) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetModuleInfoResponse.mclass)
}
 ::std::string* GetModuleInfoResponse::mutable_mclass() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetModuleInfoResponse.mclass)
  return mclass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetModuleInfoResponse::release_mclass() {
  // @@protoc_insertion_point(field_release:bess.GetModuleInfoResponse.mclass)
  
  return mclass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse::set_allocated_mclass(::std::string* mclass) {
  if (mclass != NULL) {
    
  } else {
    
  }
  mclass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mclass);
  // @@protoc_insertion_point(field_set_allocated:bess.GetModuleInfoResponse.mclass)
}

// optional string desc = 3;
void GetModuleInfoResponse::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetModuleInfoResponse::desc() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoResponse.desc)
}
 void GetModuleInfoResponse::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetModuleInfoResponse.desc)
}
 void GetModuleInfoResponse::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetModuleInfoResponse.desc)
}
 ::std::string* GetModuleInfoResponse::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetModuleInfoResponse.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetModuleInfoResponse::release_desc() {
  // @@protoc_insertion_point(field_release:bess.GetModuleInfoResponse.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoResponse::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:bess.GetModuleInfoResponse.desc)
}

// repeated .bess.GetModuleInfoResponse.IGate igates = 5;
int GetModuleInfoResponse::igates_size() const {
  return igates_.size();
}
void GetModuleInfoResponse::clear_igates() {
  igates_.Clear();
}
const ::bess::GetModuleInfoResponse_IGate& GetModuleInfoResponse::igates(int index) const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.igates)
  return igates_.Get(index);
}
::bess::GetModuleInfoResponse_IGate* GetModuleInfoResponse::mutable_igates(int index) {
  // @@protoc_insertion_point(field_mutable:bess.GetModuleInfoResponse.igates)
  return igates_.Mutable(index);
}
::bess::GetModuleInfoResponse_IGate* GetModuleInfoResponse::add_igates() {
  // @@protoc_insertion_point(field_add:bess.GetModuleInfoResponse.igates)
  return igates_.Add();
}
::google::protobuf::RepeatedPtrField< ::bess::GetModuleInfoResponse_IGate >*
GetModuleInfoResponse::mutable_igates() {
  // @@protoc_insertion_point(field_mutable_list:bess.GetModuleInfoResponse.igates)
  return &igates_;
}
const ::google::protobuf::RepeatedPtrField< ::bess::GetModuleInfoResponse_IGate >&
GetModuleInfoResponse::igates() const {
  // @@protoc_insertion_point(field_list:bess.GetModuleInfoResponse.igates)
  return igates_;
}

// repeated .bess.GetModuleInfoResponse.OGate ogates = 6;
int GetModuleInfoResponse::ogates_size() const {
  return ogates_.size();
}
void GetModuleInfoResponse::clear_ogates() {
  ogates_.Clear();
}
const ::bess::GetModuleInfoResponse_OGate& GetModuleInfoResponse::ogates(int index) const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.ogates)
  return ogates_.Get(index);
}
::bess::GetModuleInfoResponse_OGate* GetModuleInfoResponse::mutable_ogates(int index) {
  // @@protoc_insertion_point(field_mutable:bess.GetModuleInfoResponse.ogates)
  return ogates_.Mutable(index);
}
::bess::GetModuleInfoResponse_OGate* GetModuleInfoResponse::add_ogates() {
  // @@protoc_insertion_point(field_add:bess.GetModuleInfoResponse.ogates)
  return ogates_.Add();
}
::google::protobuf::RepeatedPtrField< ::bess::GetModuleInfoResponse_OGate >*
GetModuleInfoResponse::mutable_ogates() {
  // @@protoc_insertion_point(field_mutable_list:bess.GetModuleInfoResponse.ogates)
  return &ogates_;
}
const ::google::protobuf::RepeatedPtrField< ::bess::GetModuleInfoResponse_OGate >&
GetModuleInfoResponse::ogates() const {
  // @@protoc_insertion_point(field_list:bess.GetModuleInfoResponse.ogates)
  return ogates_;
}

// repeated .bess.GetModuleInfoResponse.Attribute metadata = 7;
int GetModuleInfoResponse::metadata_size() const {
  return metadata_.size();
}
void GetModuleInfoResponse::clear_metadata() {
  metadata_.Clear();
}
const ::bess::GetModuleInfoResponse_Attribute& GetModuleInfoResponse::metadata(int index) const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoResponse.metadata)
  return metadata_.Get(index);
}
::bess::GetModuleInfoResponse_Attribute* GetModuleInfoResponse::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:bess.GetModuleInfoResponse.metadata)
  return metadata_.Mutable(index);
}
::bess::GetModuleInfoResponse_Attribute* GetModuleInfoResponse::add_metadata() {
  // @@protoc_insertion_point(field_add:bess.GetModuleInfoResponse.metadata)
  return metadata_.Add();
}
::google::protobuf::RepeatedPtrField< ::bess::GetModuleInfoResponse_Attribute >*
GetModuleInfoResponse::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:bess.GetModuleInfoResponse.metadata)
  return &metadata_;
}
const ::google::protobuf::RepeatedPtrField< ::bess::GetModuleInfoResponse_Attribute >&
GetModuleInfoResponse::metadata() const {
  // @@protoc_insertion_point(field_list:bess.GetModuleInfoResponse.metadata)
  return metadata_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetModuleInfoRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetModuleInfoRequest::GetModuleInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetModuleInfoRequest)
}

void GetModuleInfoRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetModuleInfoRequest::GetModuleInfoRequest(const GetModuleInfoRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetModuleInfoRequest)
}

void GetModuleInfoRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetModuleInfoRequest::~GetModuleInfoRequest() {
  // @@protoc_insertion_point(destructor:bess.GetModuleInfoRequest)
  SharedDtor();
}

void GetModuleInfoRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetModuleInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetModuleInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetModuleInfoRequest_descriptor_;
}

const GetModuleInfoRequest& GetModuleInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetModuleInfoRequest* GetModuleInfoRequest::default_instance_ = NULL;

GetModuleInfoRequest* GetModuleInfoRequest::New(::google::protobuf::Arena* arena) const {
  GetModuleInfoRequest* n = new GetModuleInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetModuleInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetModuleInfoRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetModuleInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetModuleInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetModuleInfoRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetModuleInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetModuleInfoRequest)
  return false;
#undef DO_
}

void GetModuleInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetModuleInfoRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetModuleInfoRequest)
}

::google::protobuf::uint8* GetModuleInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetModuleInfoRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetModuleInfoRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetModuleInfoRequest)
  return target;
}

int GetModuleInfoRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetModuleInfoRequest)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetModuleInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetModuleInfoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetModuleInfoRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetModuleInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetModuleInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetModuleInfoRequest)
    MergeFrom(*source);
  }
}

void GetModuleInfoRequest::MergeFrom(const GetModuleInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetModuleInfoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetModuleInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetModuleInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetModuleInfoRequest::CopyFrom(const GetModuleInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetModuleInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModuleInfoRequest::IsInitialized() const {

  return true;
}

void GetModuleInfoRequest::Swap(GetModuleInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetModuleInfoRequest::InternalSwap(GetModuleInfoRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetModuleInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetModuleInfoRequest_descriptor_;
  metadata.reflection = GetModuleInfoRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetModuleInfoRequest

// optional string name = 1;
void GetModuleInfoRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetModuleInfoRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.GetModuleInfoRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetModuleInfoRequest.name)
}
 void GetModuleInfoRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetModuleInfoRequest.name)
}
 void GetModuleInfoRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetModuleInfoRequest.name)
}
 ::std::string* GetModuleInfoRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetModuleInfoRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetModuleInfoRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.GetModuleInfoRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetModuleInfoRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.GetModuleInfoRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestroyModuleRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroyModuleRequest::DestroyModuleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.DestroyModuleRequest)
}

void DestroyModuleRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DestroyModuleRequest::DestroyModuleRequest(const DestroyModuleRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.DestroyModuleRequest)
}

void DestroyModuleRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DestroyModuleRequest::~DestroyModuleRequest() {
  // @@protoc_insertion_point(destructor:bess.DestroyModuleRequest)
  SharedDtor();
}

void DestroyModuleRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DestroyModuleRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyModuleRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestroyModuleRequest_descriptor_;
}

const DestroyModuleRequest& DestroyModuleRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

DestroyModuleRequest* DestroyModuleRequest::default_instance_ = NULL;

DestroyModuleRequest* DestroyModuleRequest::New(::google::protobuf::Arena* arena) const {
  DestroyModuleRequest* n = new DestroyModuleRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DestroyModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.DestroyModuleRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DestroyModuleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.DestroyModuleRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.DestroyModuleRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.DestroyModuleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.DestroyModuleRequest)
  return false;
#undef DO_
}

void DestroyModuleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.DestroyModuleRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.DestroyModuleRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.DestroyModuleRequest)
}

::google::protobuf::uint8* DestroyModuleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.DestroyModuleRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.DestroyModuleRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.DestroyModuleRequest)
  return target;
}

int DestroyModuleRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.DestroyModuleRequest)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DestroyModuleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.DestroyModuleRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DestroyModuleRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DestroyModuleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.DestroyModuleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.DestroyModuleRequest)
    MergeFrom(*source);
  }
}

void DestroyModuleRequest::MergeFrom(const DestroyModuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.DestroyModuleRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DestroyModuleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.DestroyModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestroyModuleRequest::CopyFrom(const DestroyModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.DestroyModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestroyModuleRequest::IsInitialized() const {

  return true;
}

void DestroyModuleRequest::Swap(DestroyModuleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestroyModuleRequest::InternalSwap(DestroyModuleRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DestroyModuleRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestroyModuleRequest_descriptor_;
  metadata.reflection = DestroyModuleRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DestroyModuleRequest

// optional string name = 1;
void DestroyModuleRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DestroyModuleRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.DestroyModuleRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DestroyModuleRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.DestroyModuleRequest.name)
}
 void DestroyModuleRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.DestroyModuleRequest.name)
}
 void DestroyModuleRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.DestroyModuleRequest.name)
}
 ::std::string* DestroyModuleRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.DestroyModuleRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DestroyModuleRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.DestroyModuleRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DestroyModuleRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.DestroyModuleRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateModuleResponse::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateModuleResponse::CreateModuleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.CreateModuleResponse)
}

void CreateModuleResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CreateModuleResponse::CreateModuleResponse(const CreateModuleResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.CreateModuleResponse)
}

void CreateModuleResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateModuleResponse::~CreateModuleResponse() {
  // @@protoc_insertion_point(destructor:bess.CreateModuleResponse)
  SharedDtor();
}

void CreateModuleResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CreateModuleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateModuleResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateModuleResponse_descriptor_;
}

const CreateModuleResponse& CreateModuleResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

CreateModuleResponse* CreateModuleResponse::default_instance_ = NULL;

CreateModuleResponse* CreateModuleResponse::New(::google::protobuf::Arena* arena) const {
  CreateModuleResponse* n = new CreateModuleResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateModuleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.CreateModuleResponse)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CreateModuleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.CreateModuleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.CreateModuleResponse.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.CreateModuleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.CreateModuleResponse)
  return false;
#undef DO_
}

void CreateModuleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.CreateModuleResponse)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.CreateModuleResponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.CreateModuleResponse)
}

::google::protobuf::uint8* CreateModuleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.CreateModuleResponse)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.CreateModuleResponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.CreateModuleResponse)
  return target;
}

int CreateModuleResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.CreateModuleResponse)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateModuleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.CreateModuleResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateModuleResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateModuleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.CreateModuleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.CreateModuleResponse)
    MergeFrom(*source);
  }
}

void CreateModuleResponse::MergeFrom(const CreateModuleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.CreateModuleResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CreateModuleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.CreateModuleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateModuleResponse::CopyFrom(const CreateModuleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.CreateModuleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateModuleResponse::IsInitialized() const {

  return true;
}

void CreateModuleResponse::Swap(CreateModuleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateModuleResponse::InternalSwap(CreateModuleResponse* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateModuleResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateModuleResponse_descriptor_;
  metadata.reflection = CreateModuleResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateModuleResponse

// optional string name = 1;
void CreateModuleResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CreateModuleResponse::name() const {
  // @@protoc_insertion_point(field_get:bess.CreateModuleResponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateModuleResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.CreateModuleResponse.name)
}
 void CreateModuleResponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.CreateModuleResponse.name)
}
 void CreateModuleResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.CreateModuleResponse.name)
}
 ::std::string* CreateModuleResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.CreateModuleResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateModuleResponse::release_name() {
  // @@protoc_insertion_point(field_release:bess.CreateModuleResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateModuleResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.CreateModuleResponse.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateModuleRequest::kNameFieldNumber;
const int CreateModuleRequest::kMclassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateModuleRequest::CreateModuleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.CreateModuleRequest)
}

void CreateModuleRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CreateModuleRequest::CreateModuleRequest(const CreateModuleRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.CreateModuleRequest)
}

void CreateModuleRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mclass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateModuleRequest::~CreateModuleRequest() {
  // @@protoc_insertion_point(destructor:bess.CreateModuleRequest)
  SharedDtor();
}

void CreateModuleRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mclass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CreateModuleRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateModuleRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateModuleRequest_descriptor_;
}

const CreateModuleRequest& CreateModuleRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

CreateModuleRequest* CreateModuleRequest::default_instance_ = NULL;

CreateModuleRequest* CreateModuleRequest::New(::google::protobuf::Arena* arena) const {
  CreateModuleRequest* n = new CreateModuleRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.CreateModuleRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mclass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CreateModuleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.CreateModuleRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.CreateModuleRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mclass;
        break;
      }

      // optional string mclass = 2;
      case 2: {
        if (tag == 18) {
         parse_mclass:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mclass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mclass().data(), this->mclass().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.CreateModuleRequest.mclass"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.CreateModuleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.CreateModuleRequest)
  return false;
#undef DO_
}

void CreateModuleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.CreateModuleRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.CreateModuleRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string mclass = 2;
  if (this->mclass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mclass().data(), this->mclass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.CreateModuleRequest.mclass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mclass(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.CreateModuleRequest)
}

::google::protobuf::uint8* CreateModuleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.CreateModuleRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.CreateModuleRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string mclass = 2;
  if (this->mclass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mclass().data(), this->mclass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.CreateModuleRequest.mclass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mclass(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.CreateModuleRequest)
  return target;
}

int CreateModuleRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.CreateModuleRequest)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string mclass = 2;
  if (this->mclass().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mclass());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateModuleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.CreateModuleRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateModuleRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateModuleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.CreateModuleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.CreateModuleRequest)
    MergeFrom(*source);
  }
}

void CreateModuleRequest::MergeFrom(const CreateModuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.CreateModuleRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mclass().size() > 0) {

    mclass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mclass_);
  }
}

void CreateModuleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.CreateModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateModuleRequest::CopyFrom(const CreateModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.CreateModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateModuleRequest::IsInitialized() const {

  return true;
}

void CreateModuleRequest::Swap(CreateModuleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateModuleRequest::InternalSwap(CreateModuleRequest* other) {
  name_.Swap(&other->name_);
  mclass_.Swap(&other->mclass_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateModuleRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateModuleRequest_descriptor_;
  metadata.reflection = CreateModuleRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateModuleRequest

// optional string name = 1;
void CreateModuleRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CreateModuleRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.CreateModuleRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateModuleRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.CreateModuleRequest.name)
}
 void CreateModuleRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.CreateModuleRequest.name)
}
 void CreateModuleRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.CreateModuleRequest.name)
}
 ::std::string* CreateModuleRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.CreateModuleRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateModuleRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.CreateModuleRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateModuleRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.CreateModuleRequest.name)
}

// optional string mclass = 2;
void CreateModuleRequest::clear_mclass() {
  mclass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CreateModuleRequest::mclass() const {
  // @@protoc_insertion_point(field_get:bess.CreateModuleRequest.mclass)
  return mclass_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateModuleRequest::set_mclass(const ::std::string& value) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.CreateModuleRequest.mclass)
}
 void CreateModuleRequest::set_mclass(const char* value) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.CreateModuleRequest.mclass)
}
 void CreateModuleRequest::set_mclass(const char* value, size_t size) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.CreateModuleRequest.mclass)
}
 ::std::string* CreateModuleRequest::mutable_mclass() {
  
  // @@protoc_insertion_point(field_mutable:bess.CreateModuleRequest.mclass)
  return mclass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateModuleRequest::release_mclass() {
  // @@protoc_insertion_point(field_release:bess.CreateModuleRequest.mclass)
  
  return mclass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateModuleRequest::set_allocated_mclass(::std::string* mclass) {
  if (mclass != NULL) {
    
  } else {
    
  }
  mclass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mclass);
  // @@protoc_insertion_point(field_set_allocated:bess.CreateModuleRequest.mclass)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListModulesResponse_Module::kNameFieldNumber;
const int ListModulesResponse_Module::kMclassFieldNumber;
const int ListModulesResponse_Module::kDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListModulesResponse_Module::ListModulesResponse_Module()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.ListModulesResponse.Module)
}

void ListModulesResponse_Module::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListModulesResponse_Module::ListModulesResponse_Module(const ListModulesResponse_Module& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.ListModulesResponse.Module)
}

void ListModulesResponse_Module::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mclass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListModulesResponse_Module::~ListModulesResponse_Module() {
  // @@protoc_insertion_point(destructor:bess.ListModulesResponse.Module)
  SharedDtor();
}

void ListModulesResponse_Module::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mclass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ListModulesResponse_Module::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListModulesResponse_Module::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListModulesResponse_Module_descriptor_;
}

const ListModulesResponse_Module& ListModulesResponse_Module::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

ListModulesResponse_Module* ListModulesResponse_Module::default_instance_ = NULL;

ListModulesResponse_Module* ListModulesResponse_Module::New(::google::protobuf::Arena* arena) const {
  ListModulesResponse_Module* n = new ListModulesResponse_Module;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListModulesResponse_Module::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.ListModulesResponse.Module)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mclass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListModulesResponse_Module::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.ListModulesResponse.Module)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.ListModulesResponse.Module.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mclass;
        break;
      }

      // optional string mclass = 2;
      case 2: {
        if (tag == 18) {
         parse_mclass:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mclass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mclass().data(), this->mclass().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.ListModulesResponse.Module.mclass"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_desc;
        break;
      }

      // optional string desc = 3;
      case 3: {
        if (tag == 26) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.ListModulesResponse.Module.desc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.ListModulesResponse.Module)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.ListModulesResponse.Module)
  return false;
#undef DO_
}

void ListModulesResponse_Module::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.ListModulesResponse.Module)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ListModulesResponse.Module.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string mclass = 2;
  if (this->mclass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mclass().data(), this->mclass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ListModulesResponse.Module.mclass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mclass(), output);
  }

  // optional string desc = 3;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ListModulesResponse.Module.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->desc(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.ListModulesResponse.Module)
}

::google::protobuf::uint8* ListModulesResponse_Module::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.ListModulesResponse.Module)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ListModulesResponse.Module.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string mclass = 2;
  if (this->mclass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mclass().data(), this->mclass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ListModulesResponse.Module.mclass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mclass(), target);
  }

  // optional string desc = 3;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ListModulesResponse.Module.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->desc(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.ListModulesResponse.Module)
  return target;
}

int ListModulesResponse_Module::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.ListModulesResponse.Module)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string mclass = 2;
  if (this->mclass().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mclass());
  }

  // optional string desc = 3;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListModulesResponse_Module::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.ListModulesResponse.Module)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListModulesResponse_Module* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListModulesResponse_Module>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.ListModulesResponse.Module)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.ListModulesResponse.Module)
    MergeFrom(*source);
  }
}

void ListModulesResponse_Module::MergeFrom(const ListModulesResponse_Module& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.ListModulesResponse.Module)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mclass().size() > 0) {

    mclass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mclass_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
}

void ListModulesResponse_Module::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.ListModulesResponse.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListModulesResponse_Module::CopyFrom(const ListModulesResponse_Module& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.ListModulesResponse.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListModulesResponse_Module::IsInitialized() const {

  return true;
}

void ListModulesResponse_Module::Swap(ListModulesResponse_Module* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListModulesResponse_Module::InternalSwap(ListModulesResponse_Module* other) {
  name_.Swap(&other->name_);
  mclass_.Swap(&other->mclass_);
  desc_.Swap(&other->desc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListModulesResponse_Module::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListModulesResponse_Module_descriptor_;
  metadata.reflection = ListModulesResponse_Module_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListModulesResponse::kModulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListModulesResponse::ListModulesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.ListModulesResponse)
}

void ListModulesResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListModulesResponse::ListModulesResponse(const ListModulesResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.ListModulesResponse)
}

void ListModulesResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ListModulesResponse::~ListModulesResponse() {
  // @@protoc_insertion_point(destructor:bess.ListModulesResponse)
  SharedDtor();
}

void ListModulesResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListModulesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListModulesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListModulesResponse_descriptor_;
}

const ListModulesResponse& ListModulesResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

ListModulesResponse* ListModulesResponse::default_instance_ = NULL;

ListModulesResponse* ListModulesResponse::New(::google::protobuf::Arena* arena) const {
  ListModulesResponse* n = new ListModulesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListModulesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.ListModulesResponse)
  modules_.Clear();
}

bool ListModulesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.ListModulesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bess.ListModulesResponse.Module modules = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_modules:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_modules()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_modules;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.ListModulesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.ListModulesResponse)
  return false;
#undef DO_
}

void ListModulesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.ListModulesResponse)
  // repeated .bess.ListModulesResponse.Module modules = 1;
  for (unsigned int i = 0, n = this->modules_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->modules(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.ListModulesResponse)
}

::google::protobuf::uint8* ListModulesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.ListModulesResponse)
  // repeated .bess.ListModulesResponse.Module modules = 1;
  for (unsigned int i = 0, n = this->modules_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->modules(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.ListModulesResponse)
  return target;
}

int ListModulesResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.ListModulesResponse)
  int total_size = 0;

  // repeated .bess.ListModulesResponse.Module modules = 1;
  total_size += 1 * this->modules_size();
  for (int i = 0; i < this->modules_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->modules(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListModulesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.ListModulesResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListModulesResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListModulesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.ListModulesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.ListModulesResponse)
    MergeFrom(*source);
  }
}

void ListModulesResponse::MergeFrom(const ListModulesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.ListModulesResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  modules_.MergeFrom(from.modules_);
}

void ListModulesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.ListModulesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListModulesResponse::CopyFrom(const ListModulesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.ListModulesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListModulesResponse::IsInitialized() const {

  return true;
}

void ListModulesResponse::Swap(ListModulesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListModulesResponse::InternalSwap(ListModulesResponse* other) {
  modules_.UnsafeArenaSwap(&other->modules_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListModulesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListModulesResponse_descriptor_;
  metadata.reflection = ListModulesResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListModulesResponse_Module

// optional string name = 1;
void ListModulesResponse_Module::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ListModulesResponse_Module::name() const {
  // @@protoc_insertion_point(field_get:bess.ListModulesResponse.Module.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListModulesResponse_Module::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.ListModulesResponse.Module.name)
}
 void ListModulesResponse_Module::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.ListModulesResponse.Module.name)
}
 void ListModulesResponse_Module::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.ListModulesResponse.Module.name)
}
 ::std::string* ListModulesResponse_Module::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.ListModulesResponse.Module.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ListModulesResponse_Module::release_name() {
  // @@protoc_insertion_point(field_release:bess.ListModulesResponse.Module.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListModulesResponse_Module::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.ListModulesResponse.Module.name)
}

// optional string mclass = 2;
void ListModulesResponse_Module::clear_mclass() {
  mclass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ListModulesResponse_Module::mclass() const {
  // @@protoc_insertion_point(field_get:bess.ListModulesResponse.Module.mclass)
  return mclass_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListModulesResponse_Module::set_mclass(const ::std::string& value) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.ListModulesResponse.Module.mclass)
}
 void ListModulesResponse_Module::set_mclass(const char* value) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.ListModulesResponse.Module.mclass)
}
 void ListModulesResponse_Module::set_mclass(const char* value, size_t size) {
  
  mclass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.ListModulesResponse.Module.mclass)
}
 ::std::string* ListModulesResponse_Module::mutable_mclass() {
  
  // @@protoc_insertion_point(field_mutable:bess.ListModulesResponse.Module.mclass)
  return mclass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ListModulesResponse_Module::release_mclass() {
  // @@protoc_insertion_point(field_release:bess.ListModulesResponse.Module.mclass)
  
  return mclass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListModulesResponse_Module::set_allocated_mclass(::std::string* mclass) {
  if (mclass != NULL) {
    
  } else {
    
  }
  mclass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mclass);
  // @@protoc_insertion_point(field_set_allocated:bess.ListModulesResponse.Module.mclass)
}

// optional string desc = 3;
void ListModulesResponse_Module::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ListModulesResponse_Module::desc() const {
  // @@protoc_insertion_point(field_get:bess.ListModulesResponse.Module.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListModulesResponse_Module::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.ListModulesResponse.Module.desc)
}
 void ListModulesResponse_Module::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.ListModulesResponse.Module.desc)
}
 void ListModulesResponse_Module::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.ListModulesResponse.Module.desc)
}
 ::std::string* ListModulesResponse_Module::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:bess.ListModulesResponse.Module.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ListModulesResponse_Module::release_desc() {
  // @@protoc_insertion_point(field_release:bess.ListModulesResponse.Module.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListModulesResponse_Module::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:bess.ListModulesResponse.Module.desc)
}

// -------------------------------------------------------------------

// ListModulesResponse

// repeated .bess.ListModulesResponse.Module modules = 1;
int ListModulesResponse::modules_size() const {
  return modules_.size();
}
void ListModulesResponse::clear_modules() {
  modules_.Clear();
}
const ::bess::ListModulesResponse_Module& ListModulesResponse::modules(int index) const {
  // @@protoc_insertion_point(field_get:bess.ListModulesResponse.modules)
  return modules_.Get(index);
}
::bess::ListModulesResponse_Module* ListModulesResponse::mutable_modules(int index) {
  // @@protoc_insertion_point(field_mutable:bess.ListModulesResponse.modules)
  return modules_.Mutable(index);
}
::bess::ListModulesResponse_Module* ListModulesResponse::add_modules() {
  // @@protoc_insertion_point(field_add:bess.ListModulesResponse.modules)
  return modules_.Add();
}
::google::protobuf::RepeatedPtrField< ::bess::ListModulesResponse_Module >*
ListModulesResponse::mutable_modules() {
  // @@protoc_insertion_point(field_mutable_list:bess.ListModulesResponse.modules)
  return &modules_;
}
const ::google::protobuf::RepeatedPtrField< ::bess::ListModulesResponse_Module >&
ListModulesResponse::modules() const {
  // @@protoc_insertion_point(field_list:bess.ListModulesResponse.modules)
  return modules_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPortStatsResponse_Stat::kPacketsFieldNumber;
const int GetPortStatsResponse_Stat::kDroppedFieldNumber;
const int GetPortStatsResponse_Stat::kBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPortStatsResponse_Stat::GetPortStatsResponse_Stat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetPortStatsResponse.Stat)
}

void GetPortStatsResponse_Stat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetPortStatsResponse_Stat::GetPortStatsResponse_Stat(const GetPortStatsResponse_Stat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetPortStatsResponse.Stat)
}

void GetPortStatsResponse_Stat::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  packets_ = GOOGLE_ULONGLONG(0);
  dropped_ = GOOGLE_ULONGLONG(0);
  bytes_ = GOOGLE_ULONGLONG(0);
}

GetPortStatsResponse_Stat::~GetPortStatsResponse_Stat() {
  // @@protoc_insertion_point(destructor:bess.GetPortStatsResponse.Stat)
  SharedDtor();
}

void GetPortStatsResponse_Stat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetPortStatsResponse_Stat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPortStatsResponse_Stat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPortStatsResponse_Stat_descriptor_;
}

const GetPortStatsResponse_Stat& GetPortStatsResponse_Stat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetPortStatsResponse_Stat* GetPortStatsResponse_Stat::default_instance_ = NULL;

GetPortStatsResponse_Stat* GetPortStatsResponse_Stat::New(::google::protobuf::Arena* arena) const {
  GetPortStatsResponse_Stat* n = new GetPortStatsResponse_Stat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPortStatsResponse_Stat::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetPortStatsResponse.Stat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetPortStatsResponse_Stat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetPortStatsResponse_Stat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(packets_, bytes_);

#undef ZR_HELPER_
#undef ZR_

}

bool GetPortStatsResponse_Stat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetPortStatsResponse.Stat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 packets = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &packets_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dropped;
        break;
      }

      // optional uint64 dropped = 2;
      case 2: {
        if (tag == 16) {
         parse_dropped:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dropped_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bytes;
        break;
      }

      // optional uint64 bytes = 3;
      case 3: {
        if (tag == 24) {
         parse_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetPortStatsResponse.Stat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetPortStatsResponse.Stat)
  return false;
#undef DO_
}

void GetPortStatsResponse_Stat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetPortStatsResponse.Stat)
  // optional uint64 packets = 1;
  if (this->packets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->packets(), output);
  }

  // optional uint64 dropped = 2;
  if (this->dropped() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dropped(), output);
  }

  // optional uint64 bytes = 3;
  if (this->bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->bytes(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetPortStatsResponse.Stat)
}

::google::protobuf::uint8* GetPortStatsResponse_Stat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetPortStatsResponse.Stat)
  // optional uint64 packets = 1;
  if (this->packets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->packets(), target);
  }

  // optional uint64 dropped = 2;
  if (this->dropped() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dropped(), target);
  }

  // optional uint64 bytes = 3;
  if (this->bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->bytes(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetPortStatsResponse.Stat)
  return target;
}

int GetPortStatsResponse_Stat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetPortStatsResponse.Stat)
  int total_size = 0;

  // optional uint64 packets = 1;
  if (this->packets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->packets());
  }

  // optional uint64 dropped = 2;
  if (this->dropped() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dropped());
  }

  // optional uint64 bytes = 3;
  if (this->bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPortStatsResponse_Stat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetPortStatsResponse.Stat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetPortStatsResponse_Stat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPortStatsResponse_Stat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetPortStatsResponse.Stat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetPortStatsResponse.Stat)
    MergeFrom(*source);
  }
}

void GetPortStatsResponse_Stat::MergeFrom(const GetPortStatsResponse_Stat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetPortStatsResponse.Stat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.packets() != 0) {
    set_packets(from.packets());
  }
  if (from.dropped() != 0) {
    set_dropped(from.dropped());
  }
  if (from.bytes() != 0) {
    set_bytes(from.bytes());
  }
}

void GetPortStatsResponse_Stat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetPortStatsResponse.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPortStatsResponse_Stat::CopyFrom(const GetPortStatsResponse_Stat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetPortStatsResponse.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPortStatsResponse_Stat::IsInitialized() const {

  return true;
}

void GetPortStatsResponse_Stat::Swap(GetPortStatsResponse_Stat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPortStatsResponse_Stat::InternalSwap(GetPortStatsResponse_Stat* other) {
  std::swap(packets_, other->packets_);
  std::swap(dropped_, other->dropped_);
  std::swap(bytes_, other->bytes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPortStatsResponse_Stat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetPortStatsResponse_Stat_descriptor_;
  metadata.reflection = GetPortStatsResponse_Stat_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPortStatsResponse::kIncFieldNumber;
const int GetPortStatsResponse::kOutFieldNumber;
const int GetPortStatsResponse::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPortStatsResponse::GetPortStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetPortStatsResponse)
}

void GetPortStatsResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  inc_ = const_cast< ::bess::GetPortStatsResponse_Stat*>(&::bess::GetPortStatsResponse_Stat::default_instance());
  out_ = const_cast< ::bess::GetPortStatsResponse_Stat*>(&::bess::GetPortStatsResponse_Stat::default_instance());
}

GetPortStatsResponse::GetPortStatsResponse(const GetPortStatsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetPortStatsResponse)
}

void GetPortStatsResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  inc_ = NULL;
  out_ = NULL;
  timestamp_ = 0;
}

GetPortStatsResponse::~GetPortStatsResponse() {
  // @@protoc_insertion_point(destructor:bess.GetPortStatsResponse)
  SharedDtor();
}

void GetPortStatsResponse::SharedDtor() {
  if (this != default_instance_) {
    delete inc_;
    delete out_;
  }
}

void GetPortStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPortStatsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPortStatsResponse_descriptor_;
}

const GetPortStatsResponse& GetPortStatsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetPortStatsResponse* GetPortStatsResponse::default_instance_ = NULL;

GetPortStatsResponse* GetPortStatsResponse::New(::google::protobuf::Arena* arena) const {
  GetPortStatsResponse* n = new GetPortStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPortStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetPortStatsResponse)
  if (GetArenaNoVirtual() == NULL && inc_ != NULL) delete inc_;
  inc_ = NULL;
  if (GetArenaNoVirtual() == NULL && out_ != NULL) delete out_;
  out_ = NULL;
  timestamp_ = 0;
}

bool GetPortStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetPortStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .bess.GetPortStatsResponse.Stat inc = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inc()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_out;
        break;
      }

      // optional .bess.GetPortStatsResponse.Stat out = 2;
      case 2: {
        if (tag == 18) {
         parse_out:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_out()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_timestamp;
        break;
      }

      // optional double timestamp = 3;
      case 3: {
        if (tag == 25) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetPortStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetPortStatsResponse)
  return false;
#undef DO_
}

void GetPortStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetPortStatsResponse)
  // optional .bess.GetPortStatsResponse.Stat inc = 1;
  if (this->has_inc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->inc_, output);
  }

  // optional .bess.GetPortStatsResponse.Stat out = 2;
  if (this->has_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->out_, output);
  }

  // optional double timestamp = 3;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->timestamp(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetPortStatsResponse)
}

::google::protobuf::uint8* GetPortStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetPortStatsResponse)
  // optional .bess.GetPortStatsResponse.Stat inc = 1;
  if (this->has_inc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->inc_, false, target);
  }

  // optional .bess.GetPortStatsResponse.Stat out = 2;
  if (this->has_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->out_, false, target);
  }

  // optional double timestamp = 3;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->timestamp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetPortStatsResponse)
  return target;
}

int GetPortStatsResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetPortStatsResponse)
  int total_size = 0;

  // optional .bess.GetPortStatsResponse.Stat inc = 1;
  if (this->has_inc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->inc_);
  }

  // optional .bess.GetPortStatsResponse.Stat out = 2;
  if (this->has_out()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->out_);
  }

  // optional double timestamp = 3;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPortStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetPortStatsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetPortStatsResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPortStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetPortStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetPortStatsResponse)
    MergeFrom(*source);
  }
}

void GetPortStatsResponse::MergeFrom(const GetPortStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetPortStatsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_inc()) {
    mutable_inc()->::bess::GetPortStatsResponse_Stat::MergeFrom(from.inc());
  }
  if (from.has_out()) {
    mutable_out()->::bess::GetPortStatsResponse_Stat::MergeFrom(from.out());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void GetPortStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetPortStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPortStatsResponse::CopyFrom(const GetPortStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetPortStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPortStatsResponse::IsInitialized() const {

  return true;
}

void GetPortStatsResponse::Swap(GetPortStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPortStatsResponse::InternalSwap(GetPortStatsResponse* other) {
  std::swap(inc_, other->inc_);
  std::swap(out_, other->out_);
  std::swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPortStatsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetPortStatsResponse_descriptor_;
  metadata.reflection = GetPortStatsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPortStatsResponse_Stat

// optional uint64 packets = 1;
void GetPortStatsResponse_Stat::clear_packets() {
  packets_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetPortStatsResponse_Stat::packets() const {
  // @@protoc_insertion_point(field_get:bess.GetPortStatsResponse.Stat.packets)
  return packets_;
}
 void GetPortStatsResponse_Stat::set_packets(::google::protobuf::uint64 value) {
  
  packets_ = value;
  // @@protoc_insertion_point(field_set:bess.GetPortStatsResponse.Stat.packets)
}

// optional uint64 dropped = 2;
void GetPortStatsResponse_Stat::clear_dropped() {
  dropped_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetPortStatsResponse_Stat::dropped() const {
  // @@protoc_insertion_point(field_get:bess.GetPortStatsResponse.Stat.dropped)
  return dropped_;
}
 void GetPortStatsResponse_Stat::set_dropped(::google::protobuf::uint64 value) {
  
  dropped_ = value;
  // @@protoc_insertion_point(field_set:bess.GetPortStatsResponse.Stat.dropped)
}

// optional uint64 bytes = 3;
void GetPortStatsResponse_Stat::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetPortStatsResponse_Stat::bytes() const {
  // @@protoc_insertion_point(field_get:bess.GetPortStatsResponse.Stat.bytes)
  return bytes_;
}
 void GetPortStatsResponse_Stat::set_bytes(::google::protobuf::uint64 value) {
  
  bytes_ = value;
  // @@protoc_insertion_point(field_set:bess.GetPortStatsResponse.Stat.bytes)
}

// -------------------------------------------------------------------

// GetPortStatsResponse

// optional .bess.GetPortStatsResponse.Stat inc = 1;
bool GetPortStatsResponse::has_inc() const {
  return !_is_default_instance_ && inc_ != NULL;
}
void GetPortStatsResponse::clear_inc() {
  if (GetArenaNoVirtual() == NULL && inc_ != NULL) delete inc_;
  inc_ = NULL;
}
const ::bess::GetPortStatsResponse_Stat& GetPortStatsResponse::inc() const {
  // @@protoc_insertion_point(field_get:bess.GetPortStatsResponse.inc)
  return inc_ != NULL ? *inc_ : *default_instance_->inc_;
}
::bess::GetPortStatsResponse_Stat* GetPortStatsResponse::mutable_inc() {
  
  if (inc_ == NULL) {
    inc_ = new ::bess::GetPortStatsResponse_Stat;
  }
  // @@protoc_insertion_point(field_mutable:bess.GetPortStatsResponse.inc)
  return inc_;
}
::bess::GetPortStatsResponse_Stat* GetPortStatsResponse::release_inc() {
  // @@protoc_insertion_point(field_release:bess.GetPortStatsResponse.inc)
  
  ::bess::GetPortStatsResponse_Stat* temp = inc_;
  inc_ = NULL;
  return temp;
}
void GetPortStatsResponse::set_allocated_inc(::bess::GetPortStatsResponse_Stat* inc) {
  delete inc_;
  inc_ = inc;
  if (inc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.GetPortStatsResponse.inc)
}

// optional .bess.GetPortStatsResponse.Stat out = 2;
bool GetPortStatsResponse::has_out() const {
  return !_is_default_instance_ && out_ != NULL;
}
void GetPortStatsResponse::clear_out() {
  if (GetArenaNoVirtual() == NULL && out_ != NULL) delete out_;
  out_ = NULL;
}
const ::bess::GetPortStatsResponse_Stat& GetPortStatsResponse::out() const {
  // @@protoc_insertion_point(field_get:bess.GetPortStatsResponse.out)
  return out_ != NULL ? *out_ : *default_instance_->out_;
}
::bess::GetPortStatsResponse_Stat* GetPortStatsResponse::mutable_out() {
  
  if (out_ == NULL) {
    out_ = new ::bess::GetPortStatsResponse_Stat;
  }
  // @@protoc_insertion_point(field_mutable:bess.GetPortStatsResponse.out)
  return out_;
}
::bess::GetPortStatsResponse_Stat* GetPortStatsResponse::release_out() {
  // @@protoc_insertion_point(field_release:bess.GetPortStatsResponse.out)
  
  ::bess::GetPortStatsResponse_Stat* temp = out_;
  out_ = NULL;
  return temp;
}
void GetPortStatsResponse::set_allocated_out(::bess::GetPortStatsResponse_Stat* out) {
  delete out_;
  out_ = out;
  if (out) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.GetPortStatsResponse.out)
}

// optional double timestamp = 3;
void GetPortStatsResponse::clear_timestamp() {
  timestamp_ = 0;
}
 double GetPortStatsResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:bess.GetPortStatsResponse.timestamp)
  return timestamp_;
}
 void GetPortStatsResponse::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:bess.GetPortStatsResponse.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPortStatsRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPortStatsRequest::GetPortStatsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetPortStatsRequest)
}

void GetPortStatsRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetPortStatsRequest::GetPortStatsRequest(const GetPortStatsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetPortStatsRequest)
}

void GetPortStatsRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetPortStatsRequest::~GetPortStatsRequest() {
  // @@protoc_insertion_point(destructor:bess.GetPortStatsRequest)
  SharedDtor();
}

void GetPortStatsRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetPortStatsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPortStatsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPortStatsRequest_descriptor_;
}

const GetPortStatsRequest& GetPortStatsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetPortStatsRequest* GetPortStatsRequest::default_instance_ = NULL;

GetPortStatsRequest* GetPortStatsRequest::New(::google::protobuf::Arena* arena) const {
  GetPortStatsRequest* n = new GetPortStatsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPortStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetPortStatsRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetPortStatsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetPortStatsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetPortStatsRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetPortStatsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetPortStatsRequest)
  return false;
#undef DO_
}

void GetPortStatsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetPortStatsRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetPortStatsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetPortStatsRequest)
}

::google::protobuf::uint8* GetPortStatsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetPortStatsRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetPortStatsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetPortStatsRequest)
  return target;
}

int GetPortStatsRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetPortStatsRequest)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPortStatsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetPortStatsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetPortStatsRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPortStatsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetPortStatsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetPortStatsRequest)
    MergeFrom(*source);
  }
}

void GetPortStatsRequest::MergeFrom(const GetPortStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetPortStatsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetPortStatsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetPortStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPortStatsRequest::CopyFrom(const GetPortStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetPortStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPortStatsRequest::IsInitialized() const {

  return true;
}

void GetPortStatsRequest::Swap(GetPortStatsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPortStatsRequest::InternalSwap(GetPortStatsRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPortStatsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetPortStatsRequest_descriptor_;
  metadata.reflection = GetPortStatsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPortStatsRequest

// optional string name = 1;
void GetPortStatsRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetPortStatsRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.GetPortStatsRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPortStatsRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetPortStatsRequest.name)
}
 void GetPortStatsRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetPortStatsRequest.name)
}
 void GetPortStatsRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetPortStatsRequest.name)
}
 ::std::string* GetPortStatsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetPortStatsRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetPortStatsRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.GetPortStatsRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPortStatsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.GetPortStatsRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestroyPortRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroyPortRequest::DestroyPortRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.DestroyPortRequest)
}

void DestroyPortRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DestroyPortRequest::DestroyPortRequest(const DestroyPortRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.DestroyPortRequest)
}

void DestroyPortRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DestroyPortRequest::~DestroyPortRequest() {
  // @@protoc_insertion_point(destructor:bess.DestroyPortRequest)
  SharedDtor();
}

void DestroyPortRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DestroyPortRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyPortRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestroyPortRequest_descriptor_;
}

const DestroyPortRequest& DestroyPortRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

DestroyPortRequest* DestroyPortRequest::default_instance_ = NULL;

DestroyPortRequest* DestroyPortRequest::New(::google::protobuf::Arena* arena) const {
  DestroyPortRequest* n = new DestroyPortRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DestroyPortRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.DestroyPortRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DestroyPortRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.DestroyPortRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.DestroyPortRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.DestroyPortRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.DestroyPortRequest)
  return false;
#undef DO_
}

void DestroyPortRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.DestroyPortRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.DestroyPortRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.DestroyPortRequest)
}

::google::protobuf::uint8* DestroyPortRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.DestroyPortRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.DestroyPortRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.DestroyPortRequest)
  return target;
}

int DestroyPortRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.DestroyPortRequest)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DestroyPortRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.DestroyPortRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DestroyPortRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DestroyPortRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.DestroyPortRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.DestroyPortRequest)
    MergeFrom(*source);
  }
}

void DestroyPortRequest::MergeFrom(const DestroyPortRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.DestroyPortRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DestroyPortRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.DestroyPortRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestroyPortRequest::CopyFrom(const DestroyPortRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.DestroyPortRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestroyPortRequest::IsInitialized() const {

  return true;
}

void DestroyPortRequest::Swap(DestroyPortRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestroyPortRequest::InternalSwap(DestroyPortRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DestroyPortRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestroyPortRequest_descriptor_;
  metadata.reflection = DestroyPortRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DestroyPortRequest

// optional string name = 1;
void DestroyPortRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DestroyPortRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.DestroyPortRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DestroyPortRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.DestroyPortRequest.name)
}
 void DestroyPortRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.DestroyPortRequest.name)
}
 void DestroyPortRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.DestroyPortRequest.name)
}
 ::std::string* DestroyPortRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.DestroyPortRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DestroyPortRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.DestroyPortRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DestroyPortRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.DestroyPortRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreatePortRequest::kPortFieldNumber;
const int CreatePortRequest::kNumIncQFieldNumber;
const int CreatePortRequest::kNumOutQFieldNumber;
const int CreatePortRequest::kSizeIncQFieldNumber;
const int CreatePortRequest::kSizeOutQFieldNumber;
const int CreatePortRequest::kMacAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreatePortRequest::CreatePortRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.CreatePortRequest)
}

void CreatePortRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  port_ = const_cast< ::bess::Port*>(&::bess::Port::default_instance());
}

CreatePortRequest::CreatePortRequest(const CreatePortRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.CreatePortRequest)
}

void CreatePortRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  port_ = NULL;
  num_inc_q_ = GOOGLE_ULONGLONG(0);
  num_out_q_ = GOOGLE_ULONGLONG(0);
  size_inc_q_ = GOOGLE_ULONGLONG(0);
  size_out_q_ = GOOGLE_ULONGLONG(0);
  mac_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreatePortRequest::~CreatePortRequest() {
  // @@protoc_insertion_point(destructor:bess.CreatePortRequest)
  SharedDtor();
}

void CreatePortRequest::SharedDtor() {
  mac_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete port_;
  }
}

void CreatePortRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreatePortRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreatePortRequest_descriptor_;
}

const CreatePortRequest& CreatePortRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

CreatePortRequest* CreatePortRequest::default_instance_ = NULL;

CreatePortRequest* CreatePortRequest::New(::google::protobuf::Arena* arena) const {
  CreatePortRequest* n = new CreatePortRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreatePortRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.CreatePortRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreatePortRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreatePortRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(num_inc_q_, size_out_q_);
  if (GetArenaNoVirtual() == NULL && port_ != NULL) delete port_;
  port_ = NULL;
  mac_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CreatePortRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.CreatePortRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .bess.Port port = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_port()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num_inc_q;
        break;
      }

      // optional uint64 num_inc_q = 2;
      case 2: {
        if (tag == 16) {
         parse_num_inc_q:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_inc_q_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_num_out_q;
        break;
      }

      // optional uint64 num_out_q = 3;
      case 3: {
        if (tag == 24) {
         parse_num_out_q:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_out_q_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_size_inc_q;
        break;
      }

      // optional uint64 size_inc_q = 4;
      case 4: {
        if (tag == 32) {
         parse_size_inc_q:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_inc_q_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_size_out_q;
        break;
      }

      // optional uint64 size_out_q = 5;
      case 5: {
        if (tag == 40) {
         parse_size_out_q:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_out_q_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_mac_addr;
        break;
      }

      // optional string mac_addr = 6;
      case 6: {
        if (tag == 50) {
         parse_mac_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac_addr().data(), this->mac_addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.CreatePortRequest.mac_addr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.CreatePortRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.CreatePortRequest)
  return false;
#undef DO_
}

void CreatePortRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.CreatePortRequest)
  // optional .bess.Port port = 1;
  if (this->has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->port_, output);
  }

  // optional uint64 num_inc_q = 2;
  if (this->num_inc_q() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->num_inc_q(), output);
  }

  // optional uint64 num_out_q = 3;
  if (this->num_out_q() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->num_out_q(), output);
  }

  // optional uint64 size_inc_q = 4;
  if (this->size_inc_q() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->size_inc_q(), output);
  }

  // optional uint64 size_out_q = 5;
  if (this->size_out_q() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->size_out_q(), output);
  }

  // optional string mac_addr = 6;
  if (this->mac_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_addr().data(), this->mac_addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.CreatePortRequest.mac_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->mac_addr(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.CreatePortRequest)
}

::google::protobuf::uint8* CreatePortRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.CreatePortRequest)
  // optional .bess.Port port = 1;
  if (this->has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->port_, false, target);
  }

  // optional uint64 num_inc_q = 2;
  if (this->num_inc_q() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->num_inc_q(), target);
  }

  // optional uint64 num_out_q = 3;
  if (this->num_out_q() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->num_out_q(), target);
  }

  // optional uint64 size_inc_q = 4;
  if (this->size_inc_q() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->size_inc_q(), target);
  }

  // optional uint64 size_out_q = 5;
  if (this->size_out_q() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->size_out_q(), target);
  }

  // optional string mac_addr = 6;
  if (this->mac_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_addr().data(), this->mac_addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.CreatePortRequest.mac_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->mac_addr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.CreatePortRequest)
  return target;
}

int CreatePortRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.CreatePortRequest)
  int total_size = 0;

  // optional .bess.Port port = 1;
  if (this->has_port()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->port_);
  }

  // optional uint64 num_inc_q = 2;
  if (this->num_inc_q() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_inc_q());
  }

  // optional uint64 num_out_q = 3;
  if (this->num_out_q() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_out_q());
  }

  // optional uint64 size_inc_q = 4;
  if (this->size_inc_q() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size_inc_q());
  }

  // optional uint64 size_out_q = 5;
  if (this->size_out_q() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size_out_q());
  }

  // optional string mac_addr = 6;
  if (this->mac_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac_addr());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreatePortRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.CreatePortRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreatePortRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreatePortRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.CreatePortRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.CreatePortRequest)
    MergeFrom(*source);
  }
}

void CreatePortRequest::MergeFrom(const CreatePortRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.CreatePortRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_port()) {
    mutable_port()->::bess::Port::MergeFrom(from.port());
  }
  if (from.num_inc_q() != 0) {
    set_num_inc_q(from.num_inc_q());
  }
  if (from.num_out_q() != 0) {
    set_num_out_q(from.num_out_q());
  }
  if (from.size_inc_q() != 0) {
    set_size_inc_q(from.size_inc_q());
  }
  if (from.size_out_q() != 0) {
    set_size_out_q(from.size_out_q());
  }
  if (from.mac_addr().size() > 0) {

    mac_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_addr_);
  }
}

void CreatePortRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.CreatePortRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePortRequest::CopyFrom(const CreatePortRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.CreatePortRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePortRequest::IsInitialized() const {

  return true;
}

void CreatePortRequest::Swap(CreatePortRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreatePortRequest::InternalSwap(CreatePortRequest* other) {
  std::swap(port_, other->port_);
  std::swap(num_inc_q_, other->num_inc_q_);
  std::swap(num_out_q_, other->num_out_q_);
  std::swap(size_inc_q_, other->size_inc_q_);
  std::swap(size_out_q_, other->size_out_q_);
  mac_addr_.Swap(&other->mac_addr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreatePortRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreatePortRequest_descriptor_;
  metadata.reflection = CreatePortRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreatePortRequest

// optional .bess.Port port = 1;
bool CreatePortRequest::has_port() const {
  return !_is_default_instance_ && port_ != NULL;
}
void CreatePortRequest::clear_port() {
  if (GetArenaNoVirtual() == NULL && port_ != NULL) delete port_;
  port_ = NULL;
}
const ::bess::Port& CreatePortRequest::port() const {
  // @@protoc_insertion_point(field_get:bess.CreatePortRequest.port)
  return port_ != NULL ? *port_ : *default_instance_->port_;
}
::bess::Port* CreatePortRequest::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::bess::Port;
  }
  // @@protoc_insertion_point(field_mutable:bess.CreatePortRequest.port)
  return port_;
}
::bess::Port* CreatePortRequest::release_port() {
  // @@protoc_insertion_point(field_release:bess.CreatePortRequest.port)
  
  ::bess::Port* temp = port_;
  port_ = NULL;
  return temp;
}
void CreatePortRequest::set_allocated_port(::bess::Port* port) {
  delete port_;
  port_ = port;
  if (port) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.CreatePortRequest.port)
}

// optional uint64 num_inc_q = 2;
void CreatePortRequest::clear_num_inc_q() {
  num_inc_q_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CreatePortRequest::num_inc_q() const {
  // @@protoc_insertion_point(field_get:bess.CreatePortRequest.num_inc_q)
  return num_inc_q_;
}
 void CreatePortRequest::set_num_inc_q(::google::protobuf::uint64 value) {
  
  num_inc_q_ = value;
  // @@protoc_insertion_point(field_set:bess.CreatePortRequest.num_inc_q)
}

// optional uint64 num_out_q = 3;
void CreatePortRequest::clear_num_out_q() {
  num_out_q_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CreatePortRequest::num_out_q() const {
  // @@protoc_insertion_point(field_get:bess.CreatePortRequest.num_out_q)
  return num_out_q_;
}
 void CreatePortRequest::set_num_out_q(::google::protobuf::uint64 value) {
  
  num_out_q_ = value;
  // @@protoc_insertion_point(field_set:bess.CreatePortRequest.num_out_q)
}

// optional uint64 size_inc_q = 4;
void CreatePortRequest::clear_size_inc_q() {
  size_inc_q_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CreatePortRequest::size_inc_q() const {
  // @@protoc_insertion_point(field_get:bess.CreatePortRequest.size_inc_q)
  return size_inc_q_;
}
 void CreatePortRequest::set_size_inc_q(::google::protobuf::uint64 value) {
  
  size_inc_q_ = value;
  // @@protoc_insertion_point(field_set:bess.CreatePortRequest.size_inc_q)
}

// optional uint64 size_out_q = 5;
void CreatePortRequest::clear_size_out_q() {
  size_out_q_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CreatePortRequest::size_out_q() const {
  // @@protoc_insertion_point(field_get:bess.CreatePortRequest.size_out_q)
  return size_out_q_;
}
 void CreatePortRequest::set_size_out_q(::google::protobuf::uint64 value) {
  
  size_out_q_ = value;
  // @@protoc_insertion_point(field_set:bess.CreatePortRequest.size_out_q)
}

// optional string mac_addr = 6;
void CreatePortRequest::clear_mac_addr() {
  mac_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CreatePortRequest::mac_addr() const {
  // @@protoc_insertion_point(field_get:bess.CreatePortRequest.mac_addr)
  return mac_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreatePortRequest::set_mac_addr(const ::std::string& value) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.CreatePortRequest.mac_addr)
}
 void CreatePortRequest::set_mac_addr(const char* value) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.CreatePortRequest.mac_addr)
}
 void CreatePortRequest::set_mac_addr(const char* value, size_t size) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.CreatePortRequest.mac_addr)
}
 ::std::string* CreatePortRequest::mutable_mac_addr() {
  
  // @@protoc_insertion_point(field_mutable:bess.CreatePortRequest.mac_addr)
  return mac_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreatePortRequest::release_mac_addr() {
  // @@protoc_insertion_point(field_release:bess.CreatePortRequest.mac_addr)
  
  return mac_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreatePortRequest::set_allocated_mac_addr(::std::string* mac_addr) {
  if (mac_addr != NULL) {
    
  } else {
    
  }
  mac_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_addr);
  // @@protoc_insertion_point(field_set_allocated:bess.CreatePortRequest.mac_addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Port::kNameFieldNumber;
const int Port::kDriverFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Port::Port()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.Port)
}

void Port::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Port::Port(const Port& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.Port)
}

void Port::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  driver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Port::~Port() {
  // @@protoc_insertion_point(destructor:bess.Port)
  SharedDtor();
}

void Port::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  driver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Port::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Port::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Port_descriptor_;
}

const Port& Port::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

Port* Port::default_instance_ = NULL;

Port* Port::New(::google::protobuf::Arena* arena) const {
  Port* n = new Port;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Port::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.Port)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  driver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Port::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.Port)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.Port.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_driver;
        break;
      }

      // optional string driver = 2;
      case 2: {
        if (tag == 18) {
         parse_driver:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_driver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->driver().data(), this->driver().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.Port.driver"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.Port)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.Port)
  return false;
#undef DO_
}

void Port::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.Port)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.Port.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string driver = 2;
  if (this->driver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->driver().data(), this->driver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.Port.driver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->driver(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.Port)
}

::google::protobuf::uint8* Port::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.Port)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.Port.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string driver = 2;
  if (this->driver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->driver().data(), this->driver().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.Port.driver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->driver(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.Port)
  return target;
}

int Port::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.Port)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string driver = 2;
  if (this->driver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->driver());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Port::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.Port)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Port* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Port>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.Port)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.Port)
    MergeFrom(*source);
  }
}

void Port::MergeFrom(const Port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.Port)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.driver().size() > 0) {

    driver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.driver_);
  }
}

void Port::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.Port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Port::CopyFrom(const Port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.Port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Port::IsInitialized() const {

  return true;
}

void Port::Swap(Port* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Port::InternalSwap(Port* other) {
  name_.Swap(&other->name_);
  driver_.Swap(&other->driver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Port::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Port_descriptor_;
  metadata.reflection = Port_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Port

// optional string name = 1;
void Port::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Port::name() const {
  // @@protoc_insertion_point(field_get:bess.Port.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Port::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.Port.name)
}
 void Port::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.Port.name)
}
 void Port::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.Port.name)
}
 ::std::string* Port::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.Port.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Port::release_name() {
  // @@protoc_insertion_point(field_release:bess.Port.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Port::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.Port.name)
}

// optional string driver = 2;
void Port::clear_driver() {
  driver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Port::driver() const {
  // @@protoc_insertion_point(field_get:bess.Port.driver)
  return driver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Port::set_driver(const ::std::string& value) {
  
  driver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.Port.driver)
}
 void Port::set_driver(const char* value) {
  
  driver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.Port.driver)
}
 void Port::set_driver(const char* value, size_t size) {
  
  driver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.Port.driver)
}
 ::std::string* Port::mutable_driver() {
  
  // @@protoc_insertion_point(field_mutable:bess.Port.driver)
  return driver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Port::release_driver() {
  // @@protoc_insertion_point(field_release:bess.Port.driver)
  
  return driver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Port::set_allocated_driver(::std::string* driver) {
  if (driver != NULL) {
    
  } else {
    
  }
  driver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), driver);
  // @@protoc_insertion_point(field_set_allocated:bess.Port.driver)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListPortsResponse::kPortsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListPortsResponse::ListPortsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.ListPortsResponse)
}

void ListPortsResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListPortsResponse::ListPortsResponse(const ListPortsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.ListPortsResponse)
}

void ListPortsResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ListPortsResponse::~ListPortsResponse() {
  // @@protoc_insertion_point(destructor:bess.ListPortsResponse)
  SharedDtor();
}

void ListPortsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListPortsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListPortsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListPortsResponse_descriptor_;
}

const ListPortsResponse& ListPortsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

ListPortsResponse* ListPortsResponse::default_instance_ = NULL;

ListPortsResponse* ListPortsResponse::New(::google::protobuf::Arena* arena) const {
  ListPortsResponse* n = new ListPortsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListPortsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.ListPortsResponse)
  ports_.Clear();
}

bool ListPortsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.ListPortsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bess.Port ports = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ports:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ports()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ports;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.ListPortsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.ListPortsResponse)
  return false;
#undef DO_
}

void ListPortsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.ListPortsResponse)
  // repeated .bess.Port ports = 1;
  for (unsigned int i = 0, n = this->ports_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ports(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.ListPortsResponse)
}

::google::protobuf::uint8* ListPortsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.ListPortsResponse)
  // repeated .bess.Port ports = 1;
  for (unsigned int i = 0, n = this->ports_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ports(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.ListPortsResponse)
  return target;
}

int ListPortsResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.ListPortsResponse)
  int total_size = 0;

  // repeated .bess.Port ports = 1;
  total_size += 1 * this->ports_size();
  for (int i = 0; i < this->ports_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ports(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListPortsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.ListPortsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListPortsResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListPortsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.ListPortsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.ListPortsResponse)
    MergeFrom(*source);
  }
}

void ListPortsResponse::MergeFrom(const ListPortsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.ListPortsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ports_.MergeFrom(from.ports_);
}

void ListPortsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.ListPortsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListPortsResponse::CopyFrom(const ListPortsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.ListPortsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPortsResponse::IsInitialized() const {

  return true;
}

void ListPortsResponse::Swap(ListPortsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListPortsResponse::InternalSwap(ListPortsResponse* other) {
  ports_.UnsafeArenaSwap(&other->ports_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListPortsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListPortsResponse_descriptor_;
  metadata.reflection = ListPortsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListPortsResponse

// repeated .bess.Port ports = 1;
int ListPortsResponse::ports_size() const {
  return ports_.size();
}
void ListPortsResponse::clear_ports() {
  ports_.Clear();
}
const ::bess::Port& ListPortsResponse::ports(int index) const {
  // @@protoc_insertion_point(field_get:bess.ListPortsResponse.ports)
  return ports_.Get(index);
}
::bess::Port* ListPortsResponse::mutable_ports(int index) {
  // @@protoc_insertion_point(field_mutable:bess.ListPortsResponse.ports)
  return ports_.Mutable(index);
}
::bess::Port* ListPortsResponse::add_ports() {
  // @@protoc_insertion_point(field_add:bess.ListPortsResponse.ports)
  return ports_.Add();
}
::google::protobuf::RepeatedPtrField< ::bess::Port >*
ListPortsResponse::mutable_ports() {
  // @@protoc_insertion_point(field_mutable_list:bess.ListPortsResponse.ports)
  return &ports_;
}
const ::google::protobuf::RepeatedPtrField< ::bess::Port >&
ListPortsResponse::ports() const {
  // @@protoc_insertion_point(field_list:bess.ListPortsResponse.ports)
  return ports_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kErrFieldNumber;
const int Error::kErrmsgFieldNumber;
const int Error::kDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.Error)
}

void Error::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Error::Error(const Error& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.Error)
}

void Error::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  err_ = 0;
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:bess.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Error_descriptor_;
}

const Error& Error::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

Error* Error::default_instance_ = NULL;

Error* Error::New(::google::protobuf::Arena* arena) const {
  Error* n = new Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.Error)
  err_ = 0;
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_errmsg;
        break;
      }

      // optional string errmsg = 2;
      case 2: {
        if (tag == 18) {
         parse_errmsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), this->errmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.Error.errmsg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_details;
        break;
      }

      // optional string details = 3;
      case 3: {
        if (tag == 26) {
         parse_details:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_details()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->details().data(), this->details().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.Error.details"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.Error)
  // optional int32 err = 1;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err(), output);
  }

  // optional string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.Error.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // optional string details = 3;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), this->details().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.Error.details");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->details(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.Error)
  // optional int32 err = 1;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err(), target);
  }

  // optional string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.Error.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // optional string details = 3;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), this->details().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.Error.details");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->details(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.Error)
  return target;
}

int Error::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.Error)
  int total_size = 0;

  // optional int32 err = 1;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  // optional string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // optional string details = 3;
  if (this->details().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->details());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.Error)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Error* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.Error)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.details().size() > 0) {

    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {

  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  std::swap(err_, other->err_);
  errmsg_.Swap(&other->errmsg_);
  details_.Swap(&other->details_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Error_descriptor_;
  metadata.reflection = Error_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Error

// optional int32 err = 1;
void Error::clear_err() {
  err_ = 0;
}
 ::google::protobuf::int32 Error::err() const {
  // @@protoc_insertion_point(field_get:bess.Error.err)
  return err_;
}
 void Error::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:bess.Error.err)
}

// optional string errmsg = 2;
void Error::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Error::errmsg() const {
  // @@protoc_insertion_point(field_get:bess.Error.errmsg)
  return errmsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Error::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.Error.errmsg)
}
 void Error::set_errmsg(const char* value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.Error.errmsg)
}
 void Error::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.Error.errmsg)
}
 ::std::string* Error::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:bess.Error.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Error::release_errmsg() {
  // @@protoc_insertion_point(field_release:bess.Error.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Error::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:bess.Error.errmsg)
}

// optional string details = 3;
void Error::clear_details() {
  details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Error::details() const {
  // @@protoc_insertion_point(field_get:bess.Error.details)
  return details_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Error::set_details(const ::std::string& value) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.Error.details)
}
 void Error::set_details(const char* value) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.Error.details)
}
 void Error::set_details(const char* value, size_t size) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.Error.details)
}
 ::std::string* Error::mutable_details() {
  
  // @@protoc_insertion_point(field_mutable:bess.Error.details)
  return details_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Error::release_details() {
  // @@protoc_insertion_point(field_release:bess.Error.details)
  
  return details_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Error::set_allocated_details(::std::string* details) {
  if (details != NULL) {
    
  } else {
    
  }
  details_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), details);
  // @@protoc_insertion_point(field_set_allocated:bess.Error.details)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListWorkersResponse_WorkerStatus::kWidFieldNumber;
const int ListWorkersResponse_WorkerStatus::kCoreFieldNumber;
const int ListWorkersResponse_WorkerStatus::kRunningFieldNumber;
const int ListWorkersResponse_WorkerStatus::kNumTcsFieldNumber;
const int ListWorkersResponse_WorkerStatus::kSilentDropsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListWorkersResponse_WorkerStatus::ListWorkersResponse_WorkerStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.ListWorkersResponse.WorkerStatus)
}

void ListWorkersResponse_WorkerStatus::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListWorkersResponse_WorkerStatus::ListWorkersResponse_WorkerStatus(const ListWorkersResponse_WorkerStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.ListWorkersResponse.WorkerStatus)
}

void ListWorkersResponse_WorkerStatus::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  wid_ = GOOGLE_LONGLONG(0);
  core_ = GOOGLE_LONGLONG(0);
  running_ = GOOGLE_LONGLONG(0);
  num_tcs_ = GOOGLE_LONGLONG(0);
  silent_drops_ = GOOGLE_LONGLONG(0);
}

ListWorkersResponse_WorkerStatus::~ListWorkersResponse_WorkerStatus() {
  // @@protoc_insertion_point(destructor:bess.ListWorkersResponse.WorkerStatus)
  SharedDtor();
}

void ListWorkersResponse_WorkerStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListWorkersResponse_WorkerStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListWorkersResponse_WorkerStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListWorkersResponse_WorkerStatus_descriptor_;
}

const ListWorkersResponse_WorkerStatus& ListWorkersResponse_WorkerStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

ListWorkersResponse_WorkerStatus* ListWorkersResponse_WorkerStatus::default_instance_ = NULL;

ListWorkersResponse_WorkerStatus* ListWorkersResponse_WorkerStatus::New(::google::protobuf::Arena* arena) const {
  ListWorkersResponse_WorkerStatus* n = new ListWorkersResponse_WorkerStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListWorkersResponse_WorkerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.ListWorkersResponse.WorkerStatus)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ListWorkersResponse_WorkerStatus, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ListWorkersResponse_WorkerStatus*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(wid_, silent_drops_);

#undef ZR_HELPER_
#undef ZR_

}

bool ListWorkersResponse_WorkerStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.ListWorkersResponse.WorkerStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 wid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_core;
        break;
      }

      // optional int64 core = 2;
      case 2: {
        if (tag == 16) {
         parse_core:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &core_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_running;
        break;
      }

      // optional int64 running = 3;
      case 3: {
        if (tag == 24) {
         parse_running:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &running_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_num_tcs;
        break;
      }

      // optional int64 num_tcs = 4;
      case 4: {
        if (tag == 32) {
         parse_num_tcs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_tcs_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_silent_drops;
        break;
      }

      // optional int64 silent_drops = 5;
      case 5: {
        if (tag == 40) {
         parse_silent_drops:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &silent_drops_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.ListWorkersResponse.WorkerStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.ListWorkersResponse.WorkerStatus)
  return false;
#undef DO_
}

void ListWorkersResponse_WorkerStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.ListWorkersResponse.WorkerStatus)
  // optional int64 wid = 1;
  if (this->wid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->wid(), output);
  }

  // optional int64 core = 2;
  if (this->core() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->core(), output);
  }

  // optional int64 running = 3;
  if (this->running() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->running(), output);
  }

  // optional int64 num_tcs = 4;
  if (this->num_tcs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->num_tcs(), output);
  }

  // optional int64 silent_drops = 5;
  if (this->silent_drops() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->silent_drops(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.ListWorkersResponse.WorkerStatus)
}

::google::protobuf::uint8* ListWorkersResponse_WorkerStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.ListWorkersResponse.WorkerStatus)
  // optional int64 wid = 1;
  if (this->wid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->wid(), target);
  }

  // optional int64 core = 2;
  if (this->core() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->core(), target);
  }

  // optional int64 running = 3;
  if (this->running() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->running(), target);
  }

  // optional int64 num_tcs = 4;
  if (this->num_tcs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->num_tcs(), target);
  }

  // optional int64 silent_drops = 5;
  if (this->silent_drops() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->silent_drops(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.ListWorkersResponse.WorkerStatus)
  return target;
}

int ListWorkersResponse_WorkerStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.ListWorkersResponse.WorkerStatus)
  int total_size = 0;

  // optional int64 wid = 1;
  if (this->wid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->wid());
  }

  // optional int64 core = 2;
  if (this->core() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->core());
  }

  // optional int64 running = 3;
  if (this->running() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->running());
  }

  // optional int64 num_tcs = 4;
  if (this->num_tcs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_tcs());
  }

  // optional int64 silent_drops = 5;
  if (this->silent_drops() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->silent_drops());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListWorkersResponse_WorkerStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.ListWorkersResponse.WorkerStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListWorkersResponse_WorkerStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListWorkersResponse_WorkerStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.ListWorkersResponse.WorkerStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.ListWorkersResponse.WorkerStatus)
    MergeFrom(*source);
  }
}

void ListWorkersResponse_WorkerStatus::MergeFrom(const ListWorkersResponse_WorkerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.ListWorkersResponse.WorkerStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.wid() != 0) {
    set_wid(from.wid());
  }
  if (from.core() != 0) {
    set_core(from.core());
  }
  if (from.running() != 0) {
    set_running(from.running());
  }
  if (from.num_tcs() != 0) {
    set_num_tcs(from.num_tcs());
  }
  if (from.silent_drops() != 0) {
    set_silent_drops(from.silent_drops());
  }
}

void ListWorkersResponse_WorkerStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.ListWorkersResponse.WorkerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWorkersResponse_WorkerStatus::CopyFrom(const ListWorkersResponse_WorkerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.ListWorkersResponse.WorkerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWorkersResponse_WorkerStatus::IsInitialized() const {

  return true;
}

void ListWorkersResponse_WorkerStatus::Swap(ListWorkersResponse_WorkerStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListWorkersResponse_WorkerStatus::InternalSwap(ListWorkersResponse_WorkerStatus* other) {
  std::swap(wid_, other->wid_);
  std::swap(core_, other->core_);
  std::swap(running_, other->running_);
  std::swap(num_tcs_, other->num_tcs_);
  std::swap(silent_drops_, other->silent_drops_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListWorkersResponse_WorkerStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListWorkersResponse_WorkerStatus_descriptor_;
  metadata.reflection = ListWorkersResponse_WorkerStatus_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListWorkersResponse::kWorkersStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListWorkersResponse::ListWorkersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.ListWorkersResponse)
}

void ListWorkersResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListWorkersResponse::ListWorkersResponse(const ListWorkersResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.ListWorkersResponse)
}

void ListWorkersResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ListWorkersResponse::~ListWorkersResponse() {
  // @@protoc_insertion_point(destructor:bess.ListWorkersResponse)
  SharedDtor();
}

void ListWorkersResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListWorkersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListWorkersResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListWorkersResponse_descriptor_;
}

const ListWorkersResponse& ListWorkersResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

ListWorkersResponse* ListWorkersResponse::default_instance_ = NULL;

ListWorkersResponse* ListWorkersResponse::New(::google::protobuf::Arena* arena) const {
  ListWorkersResponse* n = new ListWorkersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListWorkersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.ListWorkersResponse)
  workers_status_.Clear();
}

bool ListWorkersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.ListWorkersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bess.ListWorkersResponse.WorkerStatus workers_status = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_workers_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_workers_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_workers_status;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.ListWorkersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.ListWorkersResponse)
  return false;
#undef DO_
}

void ListWorkersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.ListWorkersResponse)
  // repeated .bess.ListWorkersResponse.WorkerStatus workers_status = 1;
  for (unsigned int i = 0, n = this->workers_status_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->workers_status(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.ListWorkersResponse)
}

::google::protobuf::uint8* ListWorkersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.ListWorkersResponse)
  // repeated .bess.ListWorkersResponse.WorkerStatus workers_status = 1;
  for (unsigned int i = 0, n = this->workers_status_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->workers_status(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.ListWorkersResponse)
  return target;
}

int ListWorkersResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.ListWorkersResponse)
  int total_size = 0;

  // repeated .bess.ListWorkersResponse.WorkerStatus workers_status = 1;
  total_size += 1 * this->workers_status_size();
  for (int i = 0; i < this->workers_status_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->workers_status(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListWorkersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.ListWorkersResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListWorkersResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListWorkersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.ListWorkersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.ListWorkersResponse)
    MergeFrom(*source);
  }
}

void ListWorkersResponse::MergeFrom(const ListWorkersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.ListWorkersResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  workers_status_.MergeFrom(from.workers_status_);
}

void ListWorkersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.ListWorkersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWorkersResponse::CopyFrom(const ListWorkersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.ListWorkersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWorkersResponse::IsInitialized() const {

  return true;
}

void ListWorkersResponse::Swap(ListWorkersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListWorkersResponse::InternalSwap(ListWorkersResponse* other) {
  workers_status_.UnsafeArenaSwap(&other->workers_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListWorkersResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListWorkersResponse_descriptor_;
  metadata.reflection = ListWorkersResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListWorkersResponse_WorkerStatus

// optional int64 wid = 1;
void ListWorkersResponse_WorkerStatus::clear_wid() {
  wid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ListWorkersResponse_WorkerStatus::wid() const {
  // @@protoc_insertion_point(field_get:bess.ListWorkersResponse.WorkerStatus.wid)
  return wid_;
}
 void ListWorkersResponse_WorkerStatus::set_wid(::google::protobuf::int64 value) {
  
  wid_ = value;
  // @@protoc_insertion_point(field_set:bess.ListWorkersResponse.WorkerStatus.wid)
}

// optional int64 core = 2;
void ListWorkersResponse_WorkerStatus::clear_core() {
  core_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ListWorkersResponse_WorkerStatus::core() const {
  // @@protoc_insertion_point(field_get:bess.ListWorkersResponse.WorkerStatus.core)
  return core_;
}
 void ListWorkersResponse_WorkerStatus::set_core(::google::protobuf::int64 value) {
  
  core_ = value;
  // @@protoc_insertion_point(field_set:bess.ListWorkersResponse.WorkerStatus.core)
}

// optional int64 running = 3;
void ListWorkersResponse_WorkerStatus::clear_running() {
  running_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ListWorkersResponse_WorkerStatus::running() const {
  // @@protoc_insertion_point(field_get:bess.ListWorkersResponse.WorkerStatus.running)
  return running_;
}
 void ListWorkersResponse_WorkerStatus::set_running(::google::protobuf::int64 value) {
  
  running_ = value;
  // @@protoc_insertion_point(field_set:bess.ListWorkersResponse.WorkerStatus.running)
}

// optional int64 num_tcs = 4;
void ListWorkersResponse_WorkerStatus::clear_num_tcs() {
  num_tcs_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ListWorkersResponse_WorkerStatus::num_tcs() const {
  // @@protoc_insertion_point(field_get:bess.ListWorkersResponse.WorkerStatus.num_tcs)
  return num_tcs_;
}
 void ListWorkersResponse_WorkerStatus::set_num_tcs(::google::protobuf::int64 value) {
  
  num_tcs_ = value;
  // @@protoc_insertion_point(field_set:bess.ListWorkersResponse.WorkerStatus.num_tcs)
}

// optional int64 silent_drops = 5;
void ListWorkersResponse_WorkerStatus::clear_silent_drops() {
  silent_drops_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ListWorkersResponse_WorkerStatus::silent_drops() const {
  // @@protoc_insertion_point(field_get:bess.ListWorkersResponse.WorkerStatus.silent_drops)
  return silent_drops_;
}
 void ListWorkersResponse_WorkerStatus::set_silent_drops(::google::protobuf::int64 value) {
  
  silent_drops_ = value;
  // @@protoc_insertion_point(field_set:bess.ListWorkersResponse.WorkerStatus.silent_drops)
}

// -------------------------------------------------------------------

// ListWorkersResponse

// repeated .bess.ListWorkersResponse.WorkerStatus workers_status = 1;
int ListWorkersResponse::workers_status_size() const {
  return workers_status_.size();
}
void ListWorkersResponse::clear_workers_status() {
  workers_status_.Clear();
}
const ::bess::ListWorkersResponse_WorkerStatus& ListWorkersResponse::workers_status(int index) const {
  // @@protoc_insertion_point(field_get:bess.ListWorkersResponse.workers_status)
  return workers_status_.Get(index);
}
::bess::ListWorkersResponse_WorkerStatus* ListWorkersResponse::mutable_workers_status(int index) {
  // @@protoc_insertion_point(field_mutable:bess.ListWorkersResponse.workers_status)
  return workers_status_.Mutable(index);
}
::bess::ListWorkersResponse_WorkerStatus* ListWorkersResponse::add_workers_status() {
  // @@protoc_insertion_point(field_add:bess.ListWorkersResponse.workers_status)
  return workers_status_.Add();
}
::google::protobuf::RepeatedPtrField< ::bess::ListWorkersResponse_WorkerStatus >*
ListWorkersResponse::mutable_workers_status() {
  // @@protoc_insertion_point(field_mutable_list:bess.ListWorkersResponse.workers_status)
  return &workers_status_;
}
const ::google::protobuf::RepeatedPtrField< ::bess::ListWorkersResponse_WorkerStatus >&
ListWorkersResponse::workers_status() const {
  // @@protoc_insertion_point(field_list:bess.ListWorkersResponse.workers_status)
  return workers_status_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddWorkerRequest::kWidFieldNumber;
const int AddWorkerRequest::kCoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddWorkerRequest::AddWorkerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.AddWorkerRequest)
}

void AddWorkerRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AddWorkerRequest::AddWorkerRequest(const AddWorkerRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.AddWorkerRequest)
}

void AddWorkerRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  wid_ = GOOGLE_ULONGLONG(0);
  core_ = GOOGLE_ULONGLONG(0);
}

AddWorkerRequest::~AddWorkerRequest() {
  // @@protoc_insertion_point(destructor:bess.AddWorkerRequest)
  SharedDtor();
}

void AddWorkerRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddWorkerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddWorkerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddWorkerRequest_descriptor_;
}

const AddWorkerRequest& AddWorkerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

AddWorkerRequest* AddWorkerRequest::default_instance_ = NULL;

AddWorkerRequest* AddWorkerRequest::New(::google::protobuf::Arena* arena) const {
  AddWorkerRequest* n = new AddWorkerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddWorkerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.AddWorkerRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AddWorkerRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AddWorkerRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(wid_, core_);

#undef ZR_HELPER_
#undef ZR_

}

bool AddWorkerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.AddWorkerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 wid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &wid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_core;
        break;
      }

      // optional uint64 core = 2;
      case 2: {
        if (tag == 16) {
         parse_core:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &core_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.AddWorkerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.AddWorkerRequest)
  return false;
#undef DO_
}

void AddWorkerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.AddWorkerRequest)
  // optional uint64 wid = 1;
  if (this->wid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->wid(), output);
  }

  // optional uint64 core = 2;
  if (this->core() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->core(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.AddWorkerRequest)
}

::google::protobuf::uint8* AddWorkerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.AddWorkerRequest)
  // optional uint64 wid = 1;
  if (this->wid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->wid(), target);
  }

  // optional uint64 core = 2;
  if (this->core() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->core(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.AddWorkerRequest)
  return target;
}

int AddWorkerRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.AddWorkerRequest)
  int total_size = 0;

  // optional uint64 wid = 1;
  if (this->wid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->wid());
  }

  // optional uint64 core = 2;
  if (this->core() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->core());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddWorkerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.AddWorkerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddWorkerRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddWorkerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.AddWorkerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.AddWorkerRequest)
    MergeFrom(*source);
  }
}

void AddWorkerRequest::MergeFrom(const AddWorkerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.AddWorkerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.wid() != 0) {
    set_wid(from.wid());
  }
  if (from.core() != 0) {
    set_core(from.core());
  }
}

void AddWorkerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.AddWorkerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddWorkerRequest::CopyFrom(const AddWorkerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.AddWorkerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddWorkerRequest::IsInitialized() const {

  return true;
}

void AddWorkerRequest::Swap(AddWorkerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddWorkerRequest::InternalSwap(AddWorkerRequest* other) {
  std::swap(wid_, other->wid_);
  std::swap(core_, other->core_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddWorkerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddWorkerRequest_descriptor_;
  metadata.reflection = AddWorkerRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddWorkerRequest

// optional uint64 wid = 1;
void AddWorkerRequest::clear_wid() {
  wid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 AddWorkerRequest::wid() const {
  // @@protoc_insertion_point(field_get:bess.AddWorkerRequest.wid)
  return wid_;
}
 void AddWorkerRequest::set_wid(::google::protobuf::uint64 value) {
  
  wid_ = value;
  // @@protoc_insertion_point(field_set:bess.AddWorkerRequest.wid)
}

// optional uint64 core = 2;
void AddWorkerRequest::clear_core() {
  core_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 AddWorkerRequest::core() const {
  // @@protoc_insertion_point(field_get:bess.AddWorkerRequest.core)
  return core_;
}
 void AddWorkerRequest::set_core(::google::protobuf::uint64 value) {
  
  core_ = value;
  // @@protoc_insertion_point(field_set:bess.AddWorkerRequest.core)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTcsRequest::kWidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTcsRequest::ListTcsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.ListTcsRequest)
}

void ListTcsRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListTcsRequest::ListTcsRequest(const ListTcsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.ListTcsRequest)
}

void ListTcsRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  wid_ = GOOGLE_ULONGLONG(0);
}

ListTcsRequest::~ListTcsRequest() {
  // @@protoc_insertion_point(destructor:bess.ListTcsRequest)
  SharedDtor();
}

void ListTcsRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListTcsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTcsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTcsRequest_descriptor_;
}

const ListTcsRequest& ListTcsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

ListTcsRequest* ListTcsRequest::default_instance_ = NULL;

ListTcsRequest* ListTcsRequest::New(::google::protobuf::Arena* arena) const {
  ListTcsRequest* n = new ListTcsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTcsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.ListTcsRequest)
  wid_ = GOOGLE_ULONGLONG(0);
}

bool ListTcsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.ListTcsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 wid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &wid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.ListTcsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.ListTcsRequest)
  return false;
#undef DO_
}

void ListTcsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.ListTcsRequest)
  // optional uint64 wid = 1;
  if (this->wid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->wid(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.ListTcsRequest)
}

::google::protobuf::uint8* ListTcsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.ListTcsRequest)
  // optional uint64 wid = 1;
  if (this->wid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->wid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.ListTcsRequest)
  return target;
}

int ListTcsRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.ListTcsRequest)
  int total_size = 0;

  // optional uint64 wid = 1;
  if (this->wid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->wid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTcsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.ListTcsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListTcsRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTcsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.ListTcsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.ListTcsRequest)
    MergeFrom(*source);
  }
}

void ListTcsRequest::MergeFrom(const ListTcsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.ListTcsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.wid() != 0) {
    set_wid(from.wid());
  }
}

void ListTcsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.ListTcsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTcsRequest::CopyFrom(const ListTcsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.ListTcsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTcsRequest::IsInitialized() const {

  return true;
}

void ListTcsRequest::Swap(ListTcsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTcsRequest::InternalSwap(ListTcsRequest* other) {
  std::swap(wid_, other->wid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTcsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTcsRequest_descriptor_;
  metadata.reflection = ListTcsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListTcsRequest

// optional uint64 wid = 1;
void ListTcsRequest::clear_wid() {
  wid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ListTcsRequest::wid() const {
  // @@protoc_insertion_point(field_get:bess.ListTcsRequest.wid)
  return wid_;
}
 void ListTcsRequest::set_wid(::google::protobuf::uint64 value) {
  
  wid_ = value;
  // @@protoc_insertion_point(field_set:bess.ListTcsRequest.wid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrafficClass_Resource::kSchedulesFieldNumber;
const int TrafficClass_Resource::kCyclesFieldNumber;
const int TrafficClass_Resource::kPacketsFieldNumber;
const int TrafficClass_Resource::kBitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrafficClass_Resource::TrafficClass_Resource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.TrafficClass.Resource)
}

void TrafficClass_Resource::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TrafficClass_Resource::TrafficClass_Resource(const TrafficClass_Resource& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.TrafficClass.Resource)
}

void TrafficClass_Resource::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  schedules_ = GOOGLE_LONGLONG(0);
  cycles_ = GOOGLE_LONGLONG(0);
  packets_ = GOOGLE_LONGLONG(0);
  bits_ = GOOGLE_LONGLONG(0);
}

TrafficClass_Resource::~TrafficClass_Resource() {
  // @@protoc_insertion_point(destructor:bess.TrafficClass.Resource)
  SharedDtor();
}

void TrafficClass_Resource::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrafficClass_Resource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrafficClass_Resource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrafficClass_Resource_descriptor_;
}

const TrafficClass_Resource& TrafficClass_Resource::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

TrafficClass_Resource* TrafficClass_Resource::default_instance_ = NULL;

TrafficClass_Resource* TrafficClass_Resource::New(::google::protobuf::Arena* arena) const {
  TrafficClass_Resource* n = new TrafficClass_Resource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrafficClass_Resource::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.TrafficClass.Resource)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TrafficClass_Resource, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TrafficClass_Resource*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(schedules_, bits_);

#undef ZR_HELPER_
#undef ZR_

}

bool TrafficClass_Resource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.TrafficClass.Resource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 schedules = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &schedules_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cycles;
        break;
      }

      // optional int64 cycles = 2;
      case 2: {
        if (tag == 16) {
         parse_cycles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cycles_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_packets;
        break;
      }

      // optional int64 packets = 3;
      case 3: {
        if (tag == 24) {
         parse_packets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packets_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bits;
        break;
      }

      // optional int64 bits = 4;
      case 4: {
        if (tag == 32) {
         parse_bits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bits_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.TrafficClass.Resource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.TrafficClass.Resource)
  return false;
#undef DO_
}

void TrafficClass_Resource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.TrafficClass.Resource)
  // optional int64 schedules = 1;
  if (this->schedules() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->schedules(), output);
  }

  // optional int64 cycles = 2;
  if (this->cycles() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->cycles(), output);
  }

  // optional int64 packets = 3;
  if (this->packets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->packets(), output);
  }

  // optional int64 bits = 4;
  if (this->bits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->bits(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.TrafficClass.Resource)
}

::google::protobuf::uint8* TrafficClass_Resource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.TrafficClass.Resource)
  // optional int64 schedules = 1;
  if (this->schedules() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->schedules(), target);
  }

  // optional int64 cycles = 2;
  if (this->cycles() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->cycles(), target);
  }

  // optional int64 packets = 3;
  if (this->packets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->packets(), target);
  }

  // optional int64 bits = 4;
  if (this->bits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->bits(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.TrafficClass.Resource)
  return target;
}

int TrafficClass_Resource::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.TrafficClass.Resource)
  int total_size = 0;

  // optional int64 schedules = 1;
  if (this->schedules() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->schedules());
  }

  // optional int64 cycles = 2;
  if (this->cycles() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cycles());
  }

  // optional int64 packets = 3;
  if (this->packets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packets());
  }

  // optional int64 bits = 4;
  if (this->bits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bits());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrafficClass_Resource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.TrafficClass.Resource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TrafficClass_Resource* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TrafficClass_Resource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.TrafficClass.Resource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.TrafficClass.Resource)
    MergeFrom(*source);
  }
}

void TrafficClass_Resource::MergeFrom(const TrafficClass_Resource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.TrafficClass.Resource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.schedules() != 0) {
    set_schedules(from.schedules());
  }
  if (from.cycles() != 0) {
    set_cycles(from.cycles());
  }
  if (from.packets() != 0) {
    set_packets(from.packets());
  }
  if (from.bits() != 0) {
    set_bits(from.bits());
  }
}

void TrafficClass_Resource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.TrafficClass.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrafficClass_Resource::CopyFrom(const TrafficClass_Resource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.TrafficClass.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrafficClass_Resource::IsInitialized() const {

  return true;
}

void TrafficClass_Resource::Swap(TrafficClass_Resource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrafficClass_Resource::InternalSwap(TrafficClass_Resource* other) {
  std::swap(schedules_, other->schedules_);
  std::swap(cycles_, other->cycles_);
  std::swap(packets_, other->packets_);
  std::swap(bits_, other->bits_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrafficClass_Resource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrafficClass_Resource_descriptor_;
  metadata.reflection = TrafficClass_Resource_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrafficClass::kNameFieldNumber;
const int TrafficClass::kPriorityFieldNumber;
const int TrafficClass::kWidFieldNumber;
const int TrafficClass::kLimitFieldNumber;
const int TrafficClass::kMaxBurstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrafficClass::TrafficClass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.TrafficClass)
}

void TrafficClass::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  limit_ = const_cast< ::bess::TrafficClass_Resource*>(&::bess::TrafficClass_Resource::default_instance());
  max_burst_ = const_cast< ::bess::TrafficClass_Resource*>(&::bess::TrafficClass_Resource::default_instance());
}

TrafficClass::TrafficClass(const TrafficClass& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.TrafficClass)
}

void TrafficClass::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  priority_ = GOOGLE_LONGLONG(0);
  wid_ = GOOGLE_LONGLONG(0);
  limit_ = NULL;
  max_burst_ = NULL;
}

TrafficClass::~TrafficClass() {
  // @@protoc_insertion_point(destructor:bess.TrafficClass)
  SharedDtor();
}

void TrafficClass::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete limit_;
    delete max_burst_;
  }
}

void TrafficClass::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrafficClass::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrafficClass_descriptor_;
}

const TrafficClass& TrafficClass::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

TrafficClass* TrafficClass::default_instance_ = NULL;

TrafficClass* TrafficClass::New(::google::protobuf::Arena* arena) const {
  TrafficClass* n = new TrafficClass;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrafficClass::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.TrafficClass)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TrafficClass, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TrafficClass*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(priority_, wid_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && limit_ != NULL) delete limit_;
  limit_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_burst_ != NULL) delete max_burst_;
  max_burst_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool TrafficClass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.TrafficClass)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.TrafficClass.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_priority;
        break;
      }

      // optional int64 priority = 2;
      case 2: {
        if (tag == 16) {
         parse_priority:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &priority_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_wid;
        break;
      }

      // optional int64 wid = 3;
      case 3: {
        if (tag == 24) {
         parse_wid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_limit;
        break;
      }

      // optional .bess.TrafficClass.Resource limit = 4;
      case 4: {
        if (tag == 34) {
         parse_limit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_limit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_max_burst;
        break;
      }

      // optional .bess.TrafficClass.Resource max_burst = 5;
      case 5: {
        if (tag == 42) {
         parse_max_burst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_max_burst()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.TrafficClass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.TrafficClass)
  return false;
#undef DO_
}

void TrafficClass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.TrafficClass)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.TrafficClass.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int64 priority = 2;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->priority(), output);
  }

  // optional int64 wid = 3;
  if (this->wid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->wid(), output);
  }

  // optional .bess.TrafficClass.Resource limit = 4;
  if (this->has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->limit_, output);
  }

  // optional .bess.TrafficClass.Resource max_burst = 5;
  if (this->has_max_burst()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->max_burst_, output);
  }

  // @@protoc_insertion_point(serialize_end:bess.TrafficClass)
}

::google::protobuf::uint8* TrafficClass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.TrafficClass)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.TrafficClass.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int64 priority = 2;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->priority(), target);
  }

  // optional int64 wid = 3;
  if (this->wid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->wid(), target);
  }

  // optional .bess.TrafficClass.Resource limit = 4;
  if (this->has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->limit_, false, target);
  }

  // optional .bess.TrafficClass.Resource max_burst = 5;
  if (this->has_max_burst()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->max_burst_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.TrafficClass)
  return target;
}

int TrafficClass::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.TrafficClass)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int64 priority = 2;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->priority());
  }

  // optional int64 wid = 3;
  if (this->wid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->wid());
  }

  // optional .bess.TrafficClass.Resource limit = 4;
  if (this->has_limit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->limit_);
  }

  // optional .bess.TrafficClass.Resource max_burst = 5;
  if (this->has_max_burst()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->max_burst_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrafficClass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.TrafficClass)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TrafficClass* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TrafficClass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.TrafficClass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.TrafficClass)
    MergeFrom(*source);
  }
}

void TrafficClass::MergeFrom(const TrafficClass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.TrafficClass)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
  if (from.wid() != 0) {
    set_wid(from.wid());
  }
  if (from.has_limit()) {
    mutable_limit()->::bess::TrafficClass_Resource::MergeFrom(from.limit());
  }
  if (from.has_max_burst()) {
    mutable_max_burst()->::bess::TrafficClass_Resource::MergeFrom(from.max_burst());
  }
}

void TrafficClass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.TrafficClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrafficClass::CopyFrom(const TrafficClass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.TrafficClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrafficClass::IsInitialized() const {

  return true;
}

void TrafficClass::Swap(TrafficClass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrafficClass::InternalSwap(TrafficClass* other) {
  name_.Swap(&other->name_);
  std::swap(priority_, other->priority_);
  std::swap(wid_, other->wid_);
  std::swap(limit_, other->limit_);
  std::swap(max_burst_, other->max_burst_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrafficClass::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrafficClass_descriptor_;
  metadata.reflection = TrafficClass_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrafficClass_Resource

// optional int64 schedules = 1;
void TrafficClass_Resource::clear_schedules() {
  schedules_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TrafficClass_Resource::schedules() const {
  // @@protoc_insertion_point(field_get:bess.TrafficClass.Resource.schedules)
  return schedules_;
}
 void TrafficClass_Resource::set_schedules(::google::protobuf::int64 value) {
  
  schedules_ = value;
  // @@protoc_insertion_point(field_set:bess.TrafficClass.Resource.schedules)
}

// optional int64 cycles = 2;
void TrafficClass_Resource::clear_cycles() {
  cycles_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TrafficClass_Resource::cycles() const {
  // @@protoc_insertion_point(field_get:bess.TrafficClass.Resource.cycles)
  return cycles_;
}
 void TrafficClass_Resource::set_cycles(::google::protobuf::int64 value) {
  
  cycles_ = value;
  // @@protoc_insertion_point(field_set:bess.TrafficClass.Resource.cycles)
}

// optional int64 packets = 3;
void TrafficClass_Resource::clear_packets() {
  packets_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TrafficClass_Resource::packets() const {
  // @@protoc_insertion_point(field_get:bess.TrafficClass.Resource.packets)
  return packets_;
}
 void TrafficClass_Resource::set_packets(::google::protobuf::int64 value) {
  
  packets_ = value;
  // @@protoc_insertion_point(field_set:bess.TrafficClass.Resource.packets)
}

// optional int64 bits = 4;
void TrafficClass_Resource::clear_bits() {
  bits_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TrafficClass_Resource::bits() const {
  // @@protoc_insertion_point(field_get:bess.TrafficClass.Resource.bits)
  return bits_;
}
 void TrafficClass_Resource::set_bits(::google::protobuf::int64 value) {
  
  bits_ = value;
  // @@protoc_insertion_point(field_set:bess.TrafficClass.Resource.bits)
}

// -------------------------------------------------------------------

// TrafficClass

// optional string name = 1;
void TrafficClass::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TrafficClass::name() const {
  // @@protoc_insertion_point(field_get:bess.TrafficClass.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TrafficClass::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.TrafficClass.name)
}
 void TrafficClass::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.TrafficClass.name)
}
 void TrafficClass::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.TrafficClass.name)
}
 ::std::string* TrafficClass::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.TrafficClass.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TrafficClass::release_name() {
  // @@protoc_insertion_point(field_release:bess.TrafficClass.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TrafficClass::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.TrafficClass.name)
}

// optional int64 priority = 2;
void TrafficClass::clear_priority() {
  priority_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TrafficClass::priority() const {
  // @@protoc_insertion_point(field_get:bess.TrafficClass.priority)
  return priority_;
}
 void TrafficClass::set_priority(::google::protobuf::int64 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:bess.TrafficClass.priority)
}

// optional int64 wid = 3;
void TrafficClass::clear_wid() {
  wid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 TrafficClass::wid() const {
  // @@protoc_insertion_point(field_get:bess.TrafficClass.wid)
  return wid_;
}
 void TrafficClass::set_wid(::google::protobuf::int64 value) {
  
  wid_ = value;
  // @@protoc_insertion_point(field_set:bess.TrafficClass.wid)
}

// optional .bess.TrafficClass.Resource limit = 4;
bool TrafficClass::has_limit() const {
  return !_is_default_instance_ && limit_ != NULL;
}
void TrafficClass::clear_limit() {
  if (GetArenaNoVirtual() == NULL && limit_ != NULL) delete limit_;
  limit_ = NULL;
}
const ::bess::TrafficClass_Resource& TrafficClass::limit() const {
  // @@protoc_insertion_point(field_get:bess.TrafficClass.limit)
  return limit_ != NULL ? *limit_ : *default_instance_->limit_;
}
::bess::TrafficClass_Resource* TrafficClass::mutable_limit() {
  
  if (limit_ == NULL) {
    limit_ = new ::bess::TrafficClass_Resource;
  }
  // @@protoc_insertion_point(field_mutable:bess.TrafficClass.limit)
  return limit_;
}
::bess::TrafficClass_Resource* TrafficClass::release_limit() {
  // @@protoc_insertion_point(field_release:bess.TrafficClass.limit)
  
  ::bess::TrafficClass_Resource* temp = limit_;
  limit_ = NULL;
  return temp;
}
void TrafficClass::set_allocated_limit(::bess::TrafficClass_Resource* limit) {
  delete limit_;
  limit_ = limit;
  if (limit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.TrafficClass.limit)
}

// optional .bess.TrafficClass.Resource max_burst = 5;
bool TrafficClass::has_max_burst() const {
  return !_is_default_instance_ && max_burst_ != NULL;
}
void TrafficClass::clear_max_burst() {
  if (GetArenaNoVirtual() == NULL && max_burst_ != NULL) delete max_burst_;
  max_burst_ = NULL;
}
const ::bess::TrafficClass_Resource& TrafficClass::max_burst() const {
  // @@protoc_insertion_point(field_get:bess.TrafficClass.max_burst)
  return max_burst_ != NULL ? *max_burst_ : *default_instance_->max_burst_;
}
::bess::TrafficClass_Resource* TrafficClass::mutable_max_burst() {
  
  if (max_burst_ == NULL) {
    max_burst_ = new ::bess::TrafficClass_Resource;
  }
  // @@protoc_insertion_point(field_mutable:bess.TrafficClass.max_burst)
  return max_burst_;
}
::bess::TrafficClass_Resource* TrafficClass::release_max_burst() {
  // @@protoc_insertion_point(field_release:bess.TrafficClass.max_burst)
  
  ::bess::TrafficClass_Resource* temp = max_burst_;
  max_burst_ = NULL;
  return temp;
}
void TrafficClass::set_allocated_max_burst(::bess::TrafficClass_Resource* max_burst) {
  delete max_burst_;
  max_burst_ = max_burst;
  if (max_burst) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.TrafficClass.max_burst)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTcStatsResponse::kTimestampFieldNumber;
const int GetTcStatsResponse::kCountFieldNumber;
const int GetTcStatsResponse::kCyclesFieldNumber;
const int GetTcStatsResponse::kPacketsFieldNumber;
const int GetTcStatsResponse::kBitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTcStatsResponse::GetTcStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetTcStatsResponse)
}

void GetTcStatsResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetTcStatsResponse::GetTcStatsResponse(const GetTcStatsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetTcStatsResponse)
}

void GetTcStatsResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  timestamp_ = 0;
  count_ = GOOGLE_ULONGLONG(0);
  cycles_ = GOOGLE_ULONGLONG(0);
  packets_ = GOOGLE_ULONGLONG(0);
  bits_ = GOOGLE_ULONGLONG(0);
}

GetTcStatsResponse::~GetTcStatsResponse() {
  // @@protoc_insertion_point(destructor:bess.GetTcStatsResponse)
  SharedDtor();
}

void GetTcStatsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetTcStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTcStatsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetTcStatsResponse_descriptor_;
}

const GetTcStatsResponse& GetTcStatsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetTcStatsResponse* GetTcStatsResponse::default_instance_ = NULL;

GetTcStatsResponse* GetTcStatsResponse::New(::google::protobuf::Arena* arena) const {
  GetTcStatsResponse* n = new GetTcStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTcStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetTcStatsResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetTcStatsResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetTcStatsResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(timestamp_, bits_);

#undef ZR_HELPER_
#undef ZR_

}

bool GetTcStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetTcStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double timestamp = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional uint64 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cycles;
        break;
      }

      // optional uint64 cycles = 3;
      case 3: {
        if (tag == 24) {
         parse_cycles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cycles_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_packets;
        break;
      }

      // optional uint64 packets = 4;
      case 4: {
        if (tag == 32) {
         parse_packets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &packets_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_bits;
        break;
      }

      // optional uint64 bits = 5;
      case 5: {
        if (tag == 40) {
         parse_bits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bits_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetTcStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetTcStatsResponse)
  return false;
#undef DO_
}

void GetTcStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetTcStatsResponse)
  // optional double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // optional uint64 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->count(), output);
  }

  // optional uint64 cycles = 3;
  if (this->cycles() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->cycles(), output);
  }

  // optional uint64 packets = 4;
  if (this->packets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->packets(), output);
  }

  // optional uint64 bits = 5;
  if (this->bits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->bits(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetTcStatsResponse)
}

::google::protobuf::uint8* GetTcStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetTcStatsResponse)
  // optional double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // optional uint64 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->count(), target);
  }

  // optional uint64 cycles = 3;
  if (this->cycles() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->cycles(), target);
  }

  // optional uint64 packets = 4;
  if (this->packets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->packets(), target);
  }

  // optional uint64 bits = 5;
  if (this->bits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->bits(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetTcStatsResponse)
  return target;
}

int GetTcStatsResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetTcStatsResponse)
  int total_size = 0;

  // optional double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // optional uint64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count());
  }

  // optional uint64 cycles = 3;
  if (this->cycles() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cycles());
  }

  // optional uint64 packets = 4;
  if (this->packets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->packets());
  }

  // optional uint64 bits = 5;
  if (this->bits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bits());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTcStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetTcStatsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetTcStatsResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTcStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetTcStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetTcStatsResponse)
    MergeFrom(*source);
  }
}

void GetTcStatsResponse::MergeFrom(const GetTcStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetTcStatsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.cycles() != 0) {
    set_cycles(from.cycles());
  }
  if (from.packets() != 0) {
    set_packets(from.packets());
  }
  if (from.bits() != 0) {
    set_bits(from.bits());
  }
}

void GetTcStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetTcStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTcStatsResponse::CopyFrom(const GetTcStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetTcStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTcStatsResponse::IsInitialized() const {

  return true;
}

void GetTcStatsResponse::Swap(GetTcStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTcStatsResponse::InternalSwap(GetTcStatsResponse* other) {
  std::swap(timestamp_, other->timestamp_);
  std::swap(count_, other->count_);
  std::swap(cycles_, other->cycles_);
  std::swap(packets_, other->packets_);
  std::swap(bits_, other->bits_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTcStatsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetTcStatsResponse_descriptor_;
  metadata.reflection = GetTcStatsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetTcStatsResponse

// optional double timestamp = 1;
void GetTcStatsResponse::clear_timestamp() {
  timestamp_ = 0;
}
 double GetTcStatsResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:bess.GetTcStatsResponse.timestamp)
  return timestamp_;
}
 void GetTcStatsResponse::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:bess.GetTcStatsResponse.timestamp)
}

// optional uint64 count = 2;
void GetTcStatsResponse::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetTcStatsResponse::count() const {
  // @@protoc_insertion_point(field_get:bess.GetTcStatsResponse.count)
  return count_;
}
 void GetTcStatsResponse::set_count(::google::protobuf::uint64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:bess.GetTcStatsResponse.count)
}

// optional uint64 cycles = 3;
void GetTcStatsResponse::clear_cycles() {
  cycles_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetTcStatsResponse::cycles() const {
  // @@protoc_insertion_point(field_get:bess.GetTcStatsResponse.cycles)
  return cycles_;
}
 void GetTcStatsResponse::set_cycles(::google::protobuf::uint64 value) {
  
  cycles_ = value;
  // @@protoc_insertion_point(field_set:bess.GetTcStatsResponse.cycles)
}

// optional uint64 packets = 4;
void GetTcStatsResponse::clear_packets() {
  packets_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetTcStatsResponse::packets() const {
  // @@protoc_insertion_point(field_get:bess.GetTcStatsResponse.packets)
  return packets_;
}
 void GetTcStatsResponse::set_packets(::google::protobuf::uint64 value) {
  
  packets_ = value;
  // @@protoc_insertion_point(field_set:bess.GetTcStatsResponse.packets)
}

// optional uint64 bits = 5;
void GetTcStatsResponse::clear_bits() {
  bits_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 GetTcStatsResponse::bits() const {
  // @@protoc_insertion_point(field_get:bess.GetTcStatsResponse.bits)
  return bits_;
}
 void GetTcStatsResponse::set_bits(::google::protobuf::uint64 value) {
  
  bits_ = value;
  // @@protoc_insertion_point(field_set:bess.GetTcStatsResponse.bits)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTcsResponse_TrafficClassStatus::kClassFieldNumber;
const int ListTcsResponse_TrafficClassStatus::kParentFieldNumber;
const int ListTcsResponse_TrafficClassStatus::kTasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTcsResponse_TrafficClassStatus::ListTcsResponse_TrafficClassStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.ListTcsResponse.TrafficClassStatus)
}

void ListTcsResponse_TrafficClassStatus::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  class__ = const_cast< ::bess::TrafficClass*>(&::bess::TrafficClass::default_instance());
}

ListTcsResponse_TrafficClassStatus::ListTcsResponse_TrafficClassStatus(const ListTcsResponse_TrafficClassStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.ListTcsResponse.TrafficClassStatus)
}

void ListTcsResponse_TrafficClassStatus::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  class__ = NULL;
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tasks_ = GOOGLE_LONGLONG(0);
}

ListTcsResponse_TrafficClassStatus::~ListTcsResponse_TrafficClassStatus() {
  // @@protoc_insertion_point(destructor:bess.ListTcsResponse.TrafficClassStatus)
  SharedDtor();
}

void ListTcsResponse_TrafficClassStatus::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete class__;
  }
}

void ListTcsResponse_TrafficClassStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTcsResponse_TrafficClassStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTcsResponse_TrafficClassStatus_descriptor_;
}

const ListTcsResponse_TrafficClassStatus& ListTcsResponse_TrafficClassStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

ListTcsResponse_TrafficClassStatus* ListTcsResponse_TrafficClassStatus::default_instance_ = NULL;

ListTcsResponse_TrafficClassStatus* ListTcsResponse_TrafficClassStatus::New(::google::protobuf::Arena* arena) const {
  ListTcsResponse_TrafficClassStatus* n = new ListTcsResponse_TrafficClassStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTcsResponse_TrafficClassStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.ListTcsResponse.TrafficClassStatus)
  if (GetArenaNoVirtual() == NULL && class__ != NULL) delete class__;
  class__ = NULL;
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tasks_ = GOOGLE_LONGLONG(0);
}

bool ListTcsResponse_TrafficClassStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.ListTcsResponse.TrafficClassStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .bess.TrafficClass class = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_class_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_parent;
        break;
      }

      // optional string parent = 2;
      case 2: {
        if (tag == 18) {
         parse_parent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.ListTcsResponse.TrafficClassStatus.parent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tasks;
        break;
      }

      // optional int64 tasks = 3;
      case 3: {
        if (tag == 24) {
         parse_tasks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tasks_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.ListTcsResponse.TrafficClassStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.ListTcsResponse.TrafficClassStatus)
  return false;
#undef DO_
}

void ListTcsResponse_TrafficClassStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.ListTcsResponse.TrafficClassStatus)
  // optional .bess.TrafficClass class = 1;
  if (this->has_class_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->class__, output);
  }

  // optional string parent = 2;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ListTcsResponse.TrafficClassStatus.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->parent(), output);
  }

  // optional int64 tasks = 3;
  if (this->tasks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->tasks(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.ListTcsResponse.TrafficClassStatus)
}

::google::protobuf::uint8* ListTcsResponse_TrafficClassStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.ListTcsResponse.TrafficClassStatus)
  // optional .bess.TrafficClass class = 1;
  if (this->has_class_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->class__, false, target);
  }

  // optional string parent = 2;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ListTcsResponse.TrafficClassStatus.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->parent(), target);
  }

  // optional int64 tasks = 3;
  if (this->tasks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->tasks(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.ListTcsResponse.TrafficClassStatus)
  return target;
}

int ListTcsResponse_TrafficClassStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.ListTcsResponse.TrafficClassStatus)
  int total_size = 0;

  // optional .bess.TrafficClass class = 1;
  if (this->has_class_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->class__);
  }

  // optional string parent = 2;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // optional int64 tasks = 3;
  if (this->tasks() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tasks());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTcsResponse_TrafficClassStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.ListTcsResponse.TrafficClassStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListTcsResponse_TrafficClassStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTcsResponse_TrafficClassStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.ListTcsResponse.TrafficClassStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.ListTcsResponse.TrafficClassStatus)
    MergeFrom(*source);
  }
}

void ListTcsResponse_TrafficClassStatus::MergeFrom(const ListTcsResponse_TrafficClassStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.ListTcsResponse.TrafficClassStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_class_()) {
    mutable_class_()->::bess::TrafficClass::MergeFrom(from.class_());
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.tasks() != 0) {
    set_tasks(from.tasks());
  }
}

void ListTcsResponse_TrafficClassStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.ListTcsResponse.TrafficClassStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTcsResponse_TrafficClassStatus::CopyFrom(const ListTcsResponse_TrafficClassStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.ListTcsResponse.TrafficClassStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTcsResponse_TrafficClassStatus::IsInitialized() const {

  return true;
}

void ListTcsResponse_TrafficClassStatus::Swap(ListTcsResponse_TrafficClassStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTcsResponse_TrafficClassStatus::InternalSwap(ListTcsResponse_TrafficClassStatus* other) {
  std::swap(class__, other->class__);
  parent_.Swap(&other->parent_);
  std::swap(tasks_, other->tasks_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTcsResponse_TrafficClassStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTcsResponse_TrafficClassStatus_descriptor_;
  metadata.reflection = ListTcsResponse_TrafficClassStatus_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTcsResponse::kClassesStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTcsResponse::ListTcsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.ListTcsResponse)
}

void ListTcsResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListTcsResponse::ListTcsResponse(const ListTcsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.ListTcsResponse)
}

void ListTcsResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ListTcsResponse::~ListTcsResponse() {
  // @@protoc_insertion_point(destructor:bess.ListTcsResponse)
  SharedDtor();
}

void ListTcsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListTcsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTcsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTcsResponse_descriptor_;
}

const ListTcsResponse& ListTcsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

ListTcsResponse* ListTcsResponse::default_instance_ = NULL;

ListTcsResponse* ListTcsResponse::New(::google::protobuf::Arena* arena) const {
  ListTcsResponse* n = new ListTcsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTcsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.ListTcsResponse)
  classes_status_.Clear();
}

bool ListTcsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.ListTcsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bess.ListTcsResponse.TrafficClassStatus classes_status = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_classes_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_classes_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_classes_status;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.ListTcsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.ListTcsResponse)
  return false;
#undef DO_
}

void ListTcsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.ListTcsResponse)
  // repeated .bess.ListTcsResponse.TrafficClassStatus classes_status = 1;
  for (unsigned int i = 0, n = this->classes_status_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->classes_status(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.ListTcsResponse)
}

::google::protobuf::uint8* ListTcsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.ListTcsResponse)
  // repeated .bess.ListTcsResponse.TrafficClassStatus classes_status = 1;
  for (unsigned int i = 0, n = this->classes_status_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->classes_status(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.ListTcsResponse)
  return target;
}

int ListTcsResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.ListTcsResponse)
  int total_size = 0;

  // repeated .bess.ListTcsResponse.TrafficClassStatus classes_status = 1;
  total_size += 1 * this->classes_status_size();
  for (int i = 0; i < this->classes_status_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->classes_status(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTcsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.ListTcsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListTcsResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTcsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.ListTcsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.ListTcsResponse)
    MergeFrom(*source);
  }
}

void ListTcsResponse::MergeFrom(const ListTcsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.ListTcsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  classes_status_.MergeFrom(from.classes_status_);
}

void ListTcsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.ListTcsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTcsResponse::CopyFrom(const ListTcsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.ListTcsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTcsResponse::IsInitialized() const {

  return true;
}

void ListTcsResponse::Swap(ListTcsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTcsResponse::InternalSwap(ListTcsResponse* other) {
  classes_status_.UnsafeArenaSwap(&other->classes_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTcsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTcsResponse_descriptor_;
  metadata.reflection = ListTcsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListTcsResponse_TrafficClassStatus

// optional .bess.TrafficClass class = 1;
bool ListTcsResponse_TrafficClassStatus::has_class_() const {
  return !_is_default_instance_ && class__ != NULL;
}
void ListTcsResponse_TrafficClassStatus::clear_class_() {
  if (GetArenaNoVirtual() == NULL && class__ != NULL) delete class__;
  class__ = NULL;
}
const ::bess::TrafficClass& ListTcsResponse_TrafficClassStatus::class_() const {
  // @@protoc_insertion_point(field_get:bess.ListTcsResponse.TrafficClassStatus.class)
  return class__ != NULL ? *class__ : *default_instance_->class__;
}
::bess::TrafficClass* ListTcsResponse_TrafficClassStatus::mutable_class_() {
  
  if (class__ == NULL) {
    class__ = new ::bess::TrafficClass;
  }
  // @@protoc_insertion_point(field_mutable:bess.ListTcsResponse.TrafficClassStatus.class)
  return class__;
}
::bess::TrafficClass* ListTcsResponse_TrafficClassStatus::release_class_() {
  // @@protoc_insertion_point(field_release:bess.ListTcsResponse.TrafficClassStatus.class)
  
  ::bess::TrafficClass* temp = class__;
  class__ = NULL;
  return temp;
}
void ListTcsResponse_TrafficClassStatus::set_allocated_class_(::bess::TrafficClass* class_) {
  delete class__;
  class__ = class_;
  if (class_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.ListTcsResponse.TrafficClassStatus.class)
}

// optional string parent = 2;
void ListTcsResponse_TrafficClassStatus::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ListTcsResponse_TrafficClassStatus::parent() const {
  // @@protoc_insertion_point(field_get:bess.ListTcsResponse.TrafficClassStatus.parent)
  return parent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListTcsResponse_TrafficClassStatus::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.ListTcsResponse.TrafficClassStatus.parent)
}
 void ListTcsResponse_TrafficClassStatus::set_parent(const char* value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.ListTcsResponse.TrafficClassStatus.parent)
}
 void ListTcsResponse_TrafficClassStatus::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.ListTcsResponse.TrafficClassStatus.parent)
}
 ::std::string* ListTcsResponse_TrafficClassStatus::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:bess.ListTcsResponse.TrafficClassStatus.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ListTcsResponse_TrafficClassStatus::release_parent() {
  // @@protoc_insertion_point(field_release:bess.ListTcsResponse.TrafficClassStatus.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListTcsResponse_TrafficClassStatus::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:bess.ListTcsResponse.TrafficClassStatus.parent)
}

// optional int64 tasks = 3;
void ListTcsResponse_TrafficClassStatus::clear_tasks() {
  tasks_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ListTcsResponse_TrafficClassStatus::tasks() const {
  // @@protoc_insertion_point(field_get:bess.ListTcsResponse.TrafficClassStatus.tasks)
  return tasks_;
}
 void ListTcsResponse_TrafficClassStatus::set_tasks(::google::protobuf::int64 value) {
  
  tasks_ = value;
  // @@protoc_insertion_point(field_set:bess.ListTcsResponse.TrafficClassStatus.tasks)
}

// -------------------------------------------------------------------

// ListTcsResponse

// repeated .bess.ListTcsResponse.TrafficClassStatus classes_status = 1;
int ListTcsResponse::classes_status_size() const {
  return classes_status_.size();
}
void ListTcsResponse::clear_classes_status() {
  classes_status_.Clear();
}
const ::bess::ListTcsResponse_TrafficClassStatus& ListTcsResponse::classes_status(int index) const {
  // @@protoc_insertion_point(field_get:bess.ListTcsResponse.classes_status)
  return classes_status_.Get(index);
}
::bess::ListTcsResponse_TrafficClassStatus* ListTcsResponse::mutable_classes_status(int index) {
  // @@protoc_insertion_point(field_mutable:bess.ListTcsResponse.classes_status)
  return classes_status_.Mutable(index);
}
::bess::ListTcsResponse_TrafficClassStatus* ListTcsResponse::add_classes_status() {
  // @@protoc_insertion_point(field_add:bess.ListTcsResponse.classes_status)
  return classes_status_.Add();
}
::google::protobuf::RepeatedPtrField< ::bess::ListTcsResponse_TrafficClassStatus >*
ListTcsResponse::mutable_classes_status() {
  // @@protoc_insertion_point(field_mutable_list:bess.ListTcsResponse.classes_status)
  return &classes_status_;
}
const ::google::protobuf::RepeatedPtrField< ::bess::ListTcsResponse_TrafficClassStatus >&
ListTcsResponse::classes_status() const {
  // @@protoc_insertion_point(field_list:bess.ListTcsResponse.classes_status)
  return classes_status_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddTcRequest::kClassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddTcRequest::AddTcRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.AddTcRequest)
}

void AddTcRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  class__ = const_cast< ::bess::TrafficClass*>(&::bess::TrafficClass::default_instance());
}

AddTcRequest::AddTcRequest(const AddTcRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.AddTcRequest)
}

void AddTcRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  class__ = NULL;
}

AddTcRequest::~AddTcRequest() {
  // @@protoc_insertion_point(destructor:bess.AddTcRequest)
  SharedDtor();
}

void AddTcRequest::SharedDtor() {
  if (this != default_instance_) {
    delete class__;
  }
}

void AddTcRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddTcRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddTcRequest_descriptor_;
}

const AddTcRequest& AddTcRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

AddTcRequest* AddTcRequest::default_instance_ = NULL;

AddTcRequest* AddTcRequest::New(::google::protobuf::Arena* arena) const {
  AddTcRequest* n = new AddTcRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddTcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.AddTcRequest)
  if (GetArenaNoVirtual() == NULL && class__ != NULL) delete class__;
  class__ = NULL;
}

bool AddTcRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.AddTcRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .bess.TrafficClass class = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_class_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.AddTcRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.AddTcRequest)
  return false;
#undef DO_
}

void AddTcRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.AddTcRequest)
  // optional .bess.TrafficClass class = 1;
  if (this->has_class_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->class__, output);
  }

  // @@protoc_insertion_point(serialize_end:bess.AddTcRequest)
}

::google::protobuf::uint8* AddTcRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.AddTcRequest)
  // optional .bess.TrafficClass class = 1;
  if (this->has_class_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->class__, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.AddTcRequest)
  return target;
}

int AddTcRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.AddTcRequest)
  int total_size = 0;

  // optional .bess.TrafficClass class = 1;
  if (this->has_class_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->class__);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddTcRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.AddTcRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddTcRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddTcRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.AddTcRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.AddTcRequest)
    MergeFrom(*source);
  }
}

void AddTcRequest::MergeFrom(const AddTcRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.AddTcRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_class_()) {
    mutable_class_()->::bess::TrafficClass::MergeFrom(from.class_());
  }
}

void AddTcRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.AddTcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddTcRequest::CopyFrom(const AddTcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.AddTcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddTcRequest::IsInitialized() const {

  return true;
}

void AddTcRequest::Swap(AddTcRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddTcRequest::InternalSwap(AddTcRequest* other) {
  std::swap(class__, other->class__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddTcRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddTcRequest_descriptor_;
  metadata.reflection = AddTcRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddTcRequest

// optional .bess.TrafficClass class = 1;
bool AddTcRequest::has_class_() const {
  return !_is_default_instance_ && class__ != NULL;
}
void AddTcRequest::clear_class_() {
  if (GetArenaNoVirtual() == NULL && class__ != NULL) delete class__;
  class__ = NULL;
}
const ::bess::TrafficClass& AddTcRequest::class_() const {
  // @@protoc_insertion_point(field_get:bess.AddTcRequest.class)
  return class__ != NULL ? *class__ : *default_instance_->class__;
}
::bess::TrafficClass* AddTcRequest::mutable_class_() {
  
  if (class__ == NULL) {
    class__ = new ::bess::TrafficClass;
  }
  // @@protoc_insertion_point(field_mutable:bess.AddTcRequest.class)
  return class__;
}
::bess::TrafficClass* AddTcRequest::release_class_() {
  // @@protoc_insertion_point(field_release:bess.AddTcRequest.class)
  
  ::bess::TrafficClass* temp = class__;
  class__ = NULL;
  return temp;
}
void AddTcRequest::set_allocated_class_(::bess::TrafficClass* class_) {
  delete class__;
  class__ = class_;
  if (class_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bess.AddTcRequest.class)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTcStatsRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTcStatsRequest::GetTcStatsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetTcStatsRequest)
}

void GetTcStatsRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetTcStatsRequest::GetTcStatsRequest(const GetTcStatsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetTcStatsRequest)
}

void GetTcStatsRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetTcStatsRequest::~GetTcStatsRequest() {
  // @@protoc_insertion_point(destructor:bess.GetTcStatsRequest)
  SharedDtor();
}

void GetTcStatsRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetTcStatsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTcStatsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetTcStatsRequest_descriptor_;
}

const GetTcStatsRequest& GetTcStatsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetTcStatsRequest* GetTcStatsRequest::default_instance_ = NULL;

GetTcStatsRequest* GetTcStatsRequest::New(::google::protobuf::Arena* arena) const {
  GetTcStatsRequest* n = new GetTcStatsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTcStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetTcStatsRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetTcStatsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetTcStatsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetTcStatsRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetTcStatsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetTcStatsRequest)
  return false;
#undef DO_
}

void GetTcStatsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetTcStatsRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetTcStatsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetTcStatsRequest)
}

::google::protobuf::uint8* GetTcStatsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetTcStatsRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetTcStatsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetTcStatsRequest)
  return target;
}

int GetTcStatsRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetTcStatsRequest)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTcStatsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetTcStatsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetTcStatsRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTcStatsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetTcStatsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetTcStatsRequest)
    MergeFrom(*source);
  }
}

void GetTcStatsRequest::MergeFrom(const GetTcStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetTcStatsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetTcStatsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetTcStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTcStatsRequest::CopyFrom(const GetTcStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetTcStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTcStatsRequest::IsInitialized() const {

  return true;
}

void GetTcStatsRequest::Swap(GetTcStatsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTcStatsRequest::InternalSwap(GetTcStatsRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTcStatsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetTcStatsRequest_descriptor_;
  metadata.reflection = GetTcStatsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetTcStatsRequest

// optional string name = 1;
void GetTcStatsRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetTcStatsRequest::name() const {
  // @@protoc_insertion_point(field_get:bess.GetTcStatsRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetTcStatsRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetTcStatsRequest.name)
}
 void GetTcStatsRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetTcStatsRequest.name)
}
 void GetTcStatsRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetTcStatsRequest.name)
}
 ::std::string* GetTcStatsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetTcStatsRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetTcStatsRequest::release_name() {
  // @@protoc_insertion_point(field_release:bess.GetTcStatsRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetTcStatsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.GetTcStatsRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDriversResponse::kDriverNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDriversResponse::ListDriversResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.ListDriversResponse)
}

void ListDriversResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListDriversResponse::ListDriversResponse(const ListDriversResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.ListDriversResponse)
}

void ListDriversResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

ListDriversResponse::~ListDriversResponse() {
  // @@protoc_insertion_point(destructor:bess.ListDriversResponse)
  SharedDtor();
}

void ListDriversResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListDriversResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListDriversResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListDriversResponse_descriptor_;
}

const ListDriversResponse& ListDriversResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

ListDriversResponse* ListDriversResponse::default_instance_ = NULL;

ListDriversResponse* ListDriversResponse::New(::google::protobuf::Arena* arena) const {
  ListDriversResponse* n = new ListDriversResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListDriversResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.ListDriversResponse)
  driver_names_.Clear();
}

bool ListDriversResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.ListDriversResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string driver_names = 1;
      case 1: {
        if (tag == 10) {
         parse_driver_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_driver_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->driver_names(this->driver_names_size() - 1).data(),
            this->driver_names(this->driver_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.ListDriversResponse.driver_names"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_driver_names;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.ListDriversResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.ListDriversResponse)
  return false;
#undef DO_
}

void ListDriversResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.ListDriversResponse)
  // repeated string driver_names = 1;
  for (int i = 0; i < this->driver_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->driver_names(i).data(), this->driver_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ListDriversResponse.driver_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->driver_names(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.ListDriversResponse)
}

::google::protobuf::uint8* ListDriversResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.ListDriversResponse)
  // repeated string driver_names = 1;
  for (int i = 0; i < this->driver_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->driver_names(i).data(), this->driver_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.ListDriversResponse.driver_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->driver_names(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.ListDriversResponse)
  return target;
}

int ListDriversResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.ListDriversResponse)
  int total_size = 0;

  // repeated string driver_names = 1;
  total_size += 1 * this->driver_names_size();
  for (int i = 0; i < this->driver_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->driver_names(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListDriversResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.ListDriversResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListDriversResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDriversResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.ListDriversResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.ListDriversResponse)
    MergeFrom(*source);
  }
}

void ListDriversResponse::MergeFrom(const ListDriversResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.ListDriversResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  driver_names_.MergeFrom(from.driver_names_);
}

void ListDriversResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.ListDriversResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDriversResponse::CopyFrom(const ListDriversResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.ListDriversResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDriversResponse::IsInitialized() const {

  return true;
}

void ListDriversResponse::Swap(ListDriversResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDriversResponse::InternalSwap(ListDriversResponse* other) {
  driver_names_.UnsafeArenaSwap(&other->driver_names_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListDriversResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListDriversResponse_descriptor_;
  metadata.reflection = ListDriversResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListDriversResponse

// repeated string driver_names = 1;
int ListDriversResponse::driver_names_size() const {
  return driver_names_.size();
}
void ListDriversResponse::clear_driver_names() {
  driver_names_.Clear();
}
 const ::std::string& ListDriversResponse::driver_names(int index) const {
  // @@protoc_insertion_point(field_get:bess.ListDriversResponse.driver_names)
  return driver_names_.Get(index);
}
 ::std::string* ListDriversResponse::mutable_driver_names(int index) {
  // @@protoc_insertion_point(field_mutable:bess.ListDriversResponse.driver_names)
  return driver_names_.Mutable(index);
}
 void ListDriversResponse::set_driver_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bess.ListDriversResponse.driver_names)
  driver_names_.Mutable(index)->assign(value);
}
 void ListDriversResponse::set_driver_names(int index, const char* value) {
  driver_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bess.ListDriversResponse.driver_names)
}
 void ListDriversResponse::set_driver_names(int index, const char* value, size_t size) {
  driver_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bess.ListDriversResponse.driver_names)
}
 ::std::string* ListDriversResponse::add_driver_names() {
  // @@protoc_insertion_point(field_add_mutable:bess.ListDriversResponse.driver_names)
  return driver_names_.Add();
}
 void ListDriversResponse::add_driver_names(const ::std::string& value) {
  driver_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bess.ListDriversResponse.driver_names)
}
 void ListDriversResponse::add_driver_names(const char* value) {
  driver_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bess.ListDriversResponse.driver_names)
}
 void ListDriversResponse::add_driver_names(const char* value, size_t size) {
  driver_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bess.ListDriversResponse.driver_names)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListDriversResponse::driver_names() const {
  // @@protoc_insertion_point(field_list:bess.ListDriversResponse.driver_names)
  return driver_names_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
ListDriversResponse::mutable_driver_names() {
  // @@protoc_insertion_point(field_mutable_list:bess.ListDriversResponse.driver_names)
  return &driver_names_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDriverInfoRequest::kDriverNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDriverInfoRequest::GetDriverInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetDriverInfoRequest)
}

void GetDriverInfoRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetDriverInfoRequest::GetDriverInfoRequest(const GetDriverInfoRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetDriverInfoRequest)
}

void GetDriverInfoRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  driver_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetDriverInfoRequest::~GetDriverInfoRequest() {
  // @@protoc_insertion_point(destructor:bess.GetDriverInfoRequest)
  SharedDtor();
}

void GetDriverInfoRequest::SharedDtor() {
  driver_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetDriverInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDriverInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDriverInfoRequest_descriptor_;
}

const GetDriverInfoRequest& GetDriverInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetDriverInfoRequest* GetDriverInfoRequest::default_instance_ = NULL;

GetDriverInfoRequest* GetDriverInfoRequest::New(::google::protobuf::Arena* arena) const {
  GetDriverInfoRequest* n = new GetDriverInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDriverInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetDriverInfoRequest)
  driver_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetDriverInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetDriverInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string driver_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_driver_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->driver_name().data(), this->driver_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetDriverInfoRequest.driver_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetDriverInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetDriverInfoRequest)
  return false;
#undef DO_
}

void GetDriverInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetDriverInfoRequest)
  // optional string driver_name = 1;
  if (this->driver_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->driver_name().data(), this->driver_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetDriverInfoRequest.driver_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->driver_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetDriverInfoRequest)
}

::google::protobuf::uint8* GetDriverInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetDriverInfoRequest)
  // optional string driver_name = 1;
  if (this->driver_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->driver_name().data(), this->driver_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetDriverInfoRequest.driver_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->driver_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetDriverInfoRequest)
  return target;
}

int GetDriverInfoRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetDriverInfoRequest)
  int total_size = 0;

  // optional string driver_name = 1;
  if (this->driver_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->driver_name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDriverInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetDriverInfoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetDriverInfoRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDriverInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetDriverInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetDriverInfoRequest)
    MergeFrom(*source);
  }
}

void GetDriverInfoRequest::MergeFrom(const GetDriverInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetDriverInfoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.driver_name().size() > 0) {

    driver_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.driver_name_);
  }
}

void GetDriverInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetDriverInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDriverInfoRequest::CopyFrom(const GetDriverInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetDriverInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDriverInfoRequest::IsInitialized() const {

  return true;
}

void GetDriverInfoRequest::Swap(GetDriverInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDriverInfoRequest::InternalSwap(GetDriverInfoRequest* other) {
  driver_name_.Swap(&other->driver_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDriverInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDriverInfoRequest_descriptor_;
  metadata.reflection = GetDriverInfoRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetDriverInfoRequest

// optional string driver_name = 1;
void GetDriverInfoRequest::clear_driver_name() {
  driver_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetDriverInfoRequest::driver_name() const {
  // @@protoc_insertion_point(field_get:bess.GetDriverInfoRequest.driver_name)
  return driver_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetDriverInfoRequest::set_driver_name(const ::std::string& value) {
  
  driver_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetDriverInfoRequest.driver_name)
}
 void GetDriverInfoRequest::set_driver_name(const char* value) {
  
  driver_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetDriverInfoRequest.driver_name)
}
 void GetDriverInfoRequest::set_driver_name(const char* value, size_t size) {
  
  driver_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetDriverInfoRequest.driver_name)
}
 ::std::string* GetDriverInfoRequest::mutable_driver_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetDriverInfoRequest.driver_name)
  return driver_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetDriverInfoRequest::release_driver_name() {
  // @@protoc_insertion_point(field_release:bess.GetDriverInfoRequest.driver_name)
  
  return driver_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetDriverInfoRequest::set_allocated_driver_name(::std::string* driver_name) {
  if (driver_name != NULL) {
    
  } else {
    
  }
  driver_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), driver_name);
  // @@protoc_insertion_point(field_set_allocated:bess.GetDriverInfoRequest.driver_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDriverInfoResponse::kNameFieldNumber;
const int GetDriverInfoResponse::kHelpFieldNumber;
const int GetDriverInfoResponse::kCommandsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDriverInfoResponse::GetDriverInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bess.GetDriverInfoResponse)
}

void GetDriverInfoResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetDriverInfoResponse::GetDriverInfoResponse(const GetDriverInfoResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bess.GetDriverInfoResponse)
}

void GetDriverInfoResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  help_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetDriverInfoResponse::~GetDriverInfoResponse() {
  // @@protoc_insertion_point(destructor:bess.GetDriverInfoResponse)
  SharedDtor();
}

void GetDriverInfoResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  help_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetDriverInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDriverInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDriverInfoResponse_descriptor_;
}

const GetDriverInfoResponse& GetDriverInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bessctl_2eproto();
  return *default_instance_;
}

GetDriverInfoResponse* GetDriverInfoResponse::default_instance_ = NULL;

GetDriverInfoResponse* GetDriverInfoResponse::New(::google::protobuf::Arena* arena) const {
  GetDriverInfoResponse* n = new GetDriverInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDriverInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.GetDriverInfoResponse)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  help_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commands_.Clear();
}

bool GetDriverInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bess.GetDriverInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetDriverInfoResponse.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_help;
        break;
      }

      // optional string help = 2;
      case 2: {
        if (tag == 18) {
         parse_help:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_help()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->help().data(), this->help().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetDriverInfoResponse.help"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_commands;
        break;
      }

      // repeated string commands = 3;
      case 3: {
        if (tag == 26) {
         parse_commands:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_commands()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commands(this->commands_size() - 1).data(),
            this->commands(this->commands_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bess.GetDriverInfoResponse.commands"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_commands;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bess.GetDriverInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bess.GetDriverInfoResponse)
  return false;
#undef DO_
}

void GetDriverInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bess.GetDriverInfoResponse)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetDriverInfoResponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string help = 2;
  if (this->help().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->help().data(), this->help().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetDriverInfoResponse.help");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->help(), output);
  }

  // repeated string commands = 3;
  for (int i = 0; i < this->commands_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commands(i).data(), this->commands(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetDriverInfoResponse.commands");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->commands(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bess.GetDriverInfoResponse)
}

::google::protobuf::uint8* GetDriverInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.GetDriverInfoResponse)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetDriverInfoResponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string help = 2;
  if (this->help().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->help().data(), this->help().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetDriverInfoResponse.help");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->help(), target);
  }

  // repeated string commands = 3;
  for (int i = 0; i < this->commands_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commands(i).data(), this->commands(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bess.GetDriverInfoResponse.commands");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->commands(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bess.GetDriverInfoResponse)
  return target;
}

int GetDriverInfoResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bess.GetDriverInfoResponse)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string help = 2;
  if (this->help().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->help());
  }

  // repeated string commands = 3;
  total_size += 1 * this->commands_size();
  for (int i = 0; i < this->commands_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->commands(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDriverInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bess.GetDriverInfoResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetDriverInfoResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDriverInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bess.GetDriverInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bess.GetDriverInfoResponse)
    MergeFrom(*source);
  }
}

void GetDriverInfoResponse::MergeFrom(const GetDriverInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bess.GetDriverInfoResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  commands_.MergeFrom(from.commands_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.help().size() > 0) {

    help_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.help_);
  }
}

void GetDriverInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bess.GetDriverInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDriverInfoResponse::CopyFrom(const GetDriverInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.GetDriverInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDriverInfoResponse::IsInitialized() const {

  return true;
}

void GetDriverInfoResponse::Swap(GetDriverInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDriverInfoResponse::InternalSwap(GetDriverInfoResponse* other) {
  name_.Swap(&other->name_);
  help_.Swap(&other->help_);
  commands_.UnsafeArenaSwap(&other->commands_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDriverInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDriverInfoResponse_descriptor_;
  metadata.reflection = GetDriverInfoResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetDriverInfoResponse

// optional string name = 1;
void GetDriverInfoResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetDriverInfoResponse::name() const {
  // @@protoc_insertion_point(field_get:bess.GetDriverInfoResponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetDriverInfoResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetDriverInfoResponse.name)
}
 void GetDriverInfoResponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetDriverInfoResponse.name)
}
 void GetDriverInfoResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetDriverInfoResponse.name)
}
 ::std::string* GetDriverInfoResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetDriverInfoResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetDriverInfoResponse::release_name() {
  // @@protoc_insertion_point(field_release:bess.GetDriverInfoResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetDriverInfoResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bess.GetDriverInfoResponse.name)
}

// optional string help = 2;
void GetDriverInfoResponse::clear_help() {
  help_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetDriverInfoResponse::help() const {
  // @@protoc_insertion_point(field_get:bess.GetDriverInfoResponse.help)
  return help_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetDriverInfoResponse::set_help(const ::std::string& value) {
  
  help_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bess.GetDriverInfoResponse.help)
}
 void GetDriverInfoResponse::set_help(const char* value) {
  
  help_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bess.GetDriverInfoResponse.help)
}
 void GetDriverInfoResponse::set_help(const char* value, size_t size) {
  
  help_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bess.GetDriverInfoResponse.help)
}
 ::std::string* GetDriverInfoResponse::mutable_help() {
  
  // @@protoc_insertion_point(field_mutable:bess.GetDriverInfoResponse.help)
  return help_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetDriverInfoResponse::release_help() {
  // @@protoc_insertion_point(field_release:bess.GetDriverInfoResponse.help)
  
  return help_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetDriverInfoResponse::set_allocated_help(::std::string* help) {
  if (help != NULL) {
    
  } else {
    
  }
  help_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), help);
  // @@protoc_insertion_point(field_set_allocated:bess.GetDriverInfoResponse.help)
}

// repeated string commands = 3;
int GetDriverInfoResponse::commands_size() const {
  return commands_.size();
}
void GetDriverInfoResponse::clear_commands() {
  commands_.Clear();
}
 const ::std::string& GetDriverInfoResponse::commands(int index) const {
  // @@protoc_insertion_point(field_get:bess.GetDriverInfoResponse.commands)
  return commands_.Get(index);
}
 ::std::string* GetDriverInfoResponse::mutable_commands(int index) {
  // @@protoc_insertion_point(field_mutable:bess.GetDriverInfoResponse.commands)
  return commands_.Mutable(index);
}
 void GetDriverInfoResponse::set_commands(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bess.GetDriverInfoResponse.commands)
  commands_.Mutable(index)->assign(value);
}
 void GetDriverInfoResponse::set_commands(int index, const char* value) {
  commands_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bess.GetDriverInfoResponse.commands)
}
 void GetDriverInfoResponse::set_commands(int index, const char* value, size_t size) {
  commands_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bess.GetDriverInfoResponse.commands)
}
 ::std::string* GetDriverInfoResponse::add_commands() {
  // @@protoc_insertion_point(field_add_mutable:bess.GetDriverInfoResponse.commands)
  return commands_.Add();
}
 void GetDriverInfoResponse::add_commands(const ::std::string& value) {
  commands_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bess.GetDriverInfoResponse.commands)
}
 void GetDriverInfoResponse::add_commands(const char* value) {
  commands_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bess.GetDriverInfoResponse.commands)
}
 void GetDriverInfoResponse::add_commands(const char* value, size_t size) {
  commands_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bess.GetDriverInfoResponse.commands)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetDriverInfoResponse::commands() const {
  // @@protoc_insertion_point(field_list:bess.GetDriverInfoResponse.commands)
  return commands_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
GetDriverInfoResponse::mutable_commands() {
  // @@protoc_insertion_point(field_mutable_list:bess.GetDriverInfoResponse.commands)
  return &commands_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace bess

// @@protoc_insertion_point(global_scope)
